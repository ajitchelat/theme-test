{
    "docs": [
        {
            "location": "/", 
            "text": "Azure RemoteApp Documentation\n\n\nThis site contains documentation for Azure RemoteApp. This documentation has been built using the source files forked from the Azure content repository on GitHub. Click \nhere\n to view the repository on GitHub. \n\n\n\n\nImportant\n\n\nLinks to topics that are not part of the Azure RemoteApp documentation will not work in this build.\n\n\n\n\n\n\nNote\n\n\n[AZURE.IMPORTANT], [AZURE.NOTE] and [AZURE.TIP] are syntaxes used by Azure for note texts and admonitions. These syntaxes are theme-specific and will not render admonitions correctly.", 
            "title": "Home"
        }, 
        {
            "location": "/#azure-remoteapp-documentation", 
            "text": "This site contains documentation for Azure RemoteApp. This documentation has been built using the source files forked from the Azure content repository on GitHub. Click  here  to view the repository on GitHub.    Important  Links to topics that are not part of the Azure RemoteApp documentation will not work in this build.    Note  [AZURE.IMPORTANT], [AZURE.NOTE] and [AZURE.TIP] are syntaxes used by Azure for note texts and admonitions. These syntaxes are theme-specific and will not render admonitions correctly.", 
            "title": "Azure RemoteApp Documentation"
        }, 
        {
            "location": "/remoteapp-whatis/", 
            "text": "What is Azure RemoteApp?\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nAzure RemoteApp brings the functionality of the on-premises Microsoft RemoteApp program, backed by Remote Desktop Services, to Azure. Azure RemoteApp helps you provide secure, remote access to applications from many different user devices. Azure RemoteApp basically hosts non-persistent Terminal Server sessions in the cloud, and you get to use them and share them with your users.\n\n\nWith Azure RemoteApp you can share apps and resources with users on almost any device. We host your apps in the cloud, meaning we take care of the hardware and scaling to meet user demands. All you have to do is upload the apps you want to share, and then get your users to use those apps. \nUsers get to keep their own devices\n, while you manage everything through the Azure portal. You even have the option of using your corporate credentials, letting you ensure the security of apps and data.\n\n\nRead on for more information about Azure RemoteApp, or, if we have already convinced you, \ntry it out now\n.\n\n\nHave questions about Azure RemoteApp? Check out our \nFAQ\n.\n\n\nAzure RemoteApp is part of the \nMicrosoft Virtual Desktop Infrastructure\n.\n\n\nNew!\n Want to learn more about Azure RemoteApp? Or ready to validate Azure RemoteApp at scale? Join our weekly \nask the experts webinar\n.\n\n\nAzure RemoteApp collections\n\n\nThere are two kinds of \nAzure RemoteApp collections\n:\n\n\n\n\n\n\nA \ncloud collection\n is hosted in and stores data for programs in the cloud. Users can access apps by logging in with their Microsoft account or corporate credentials synchronized or federated with Azure Active Directory.\n\n\nChoose a cloud collection when the application you want to share does not require a connection to any resource your company's private network (for example, through a VPN device). If the application uses resources on the Internet, OneDrive, or Azure, a cloud collection will work for you. It's also the quickest to create.\n\n\n\n\n\n\nA \nhybrid collection\n is hosted in and stores data in the Azure cloud but also lets users access data and resources stored on your local network. Users can access apps by logging in with their corporate credentials synchronized or federated with Azure Active Directory.\n\n\nChoose a hybrid collection if you require a connection to resources on your company's private network. For example, if the application needs access to one of the following:\n\n\n\n\nFile servers located on your intranet\n\n\nQuicken\n\n\nDatabases behind a firewall\n\n\n\n\nThis is generally more useful for large companies with lots of resources on their private networks that can't be moved to the cloud.\n\n\n\n\n\n\nThe different collections have different options, including networks, so figure out \nwhich collection\n works best for you. \n\n\nUpdating your collection\n\n\nOne of the key differences between the hybrid and cloud collections is how software updates are handled. With a cloud collection that uses the preinstalled Office 365 ProPlus or Office 2013 image, you do not have to worry about any updates. The service maintains itself and rolls out updates on an ongoing basis, to both apps and the operating system.\n\n\nFor hybrid collections, as well as cloud collections that use a custom template image, you are in charge of maintaining the image and apps. For domain-joined images, you can control updates by using tools such as Windows Update, Group Policy, or System Center.\n\n\nAfter you update your custom template image, you upload the new image to the Azure cloud and then update the collection to use the new image. (You can do this from the Azure RemoteApp \nQuick Start\n page or the Dashboard.)\n\n\nSee \nUpdate your collection\n for more information.\n\n\nSupported RemoteApp clients\n\n\nAzure RemoteApp is supported on the RemoteApp client apps for Windows and Windows RT, as well as the Microsoft Remote Desktop apps for Mac, iOS and Android. Your users can use these apps on their mobile or compute devices to access the new Azure RemoteApp programs.\n\n\nSee \nAccessing your apps in Azure RemoteApp\n for more information about the clients.\n\n\nNext steps\n\n\nGo! Try it out! These articles help get you started with Azure RemoteApp:\n\n\n\n\nWhat kind of collection do you need for Azure RemoteApp?\n\n\nCreate an Azure RemoteApp image\n\n\nHow to create a cloud collection of Azure RemoteApp\n\n\nHow to create a hybrid collection of Azure RemoteApp\n\n\nHow does licensing work in Azure RemoteApp?\n\n\nBest practices for using Azure RemoteApp\n\n\nAzure RemoteApp FAQ\n\n\n\n\nHelp us help you\n\n\nDid you know that in addition to rating this article and making comments down below, you can make changes to the article itself? Something missing? Something wrong? Did I write something that's just confusing? Scroll up and click \nEdit on GitHub\n or \nEdit\n to make changes - those will come to us for review, and then, once we sign off on them, you'll see your changes and improvements right here.", 
            "title": "What is Azure RemoteApp?"
        }, 
        {
            "location": "/remoteapp-whatis/#what-is-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   Azure RemoteApp brings the functionality of the on-premises Microsoft RemoteApp program, backed by Remote Desktop Services, to Azure. Azure RemoteApp helps you provide secure, remote access to applications from many different user devices. Azure RemoteApp basically hosts non-persistent Terminal Server sessions in the cloud, and you get to use them and share them with your users.  With Azure RemoteApp you can share apps and resources with users on almost any device. We host your apps in the cloud, meaning we take care of the hardware and scaling to meet user demands. All you have to do is upload the apps you want to share, and then get your users to use those apps.  Users get to keep their own devices , while you manage everything through the Azure portal. You even have the option of using your corporate credentials, letting you ensure the security of apps and data.  Read on for more information about Azure RemoteApp, or, if we have already convinced you,  try it out now .  Have questions about Azure RemoteApp? Check out our  FAQ .  Azure RemoteApp is part of the  Microsoft Virtual Desktop Infrastructure .  New!  Want to learn more about Azure RemoteApp? Or ready to validate Azure RemoteApp at scale? Join our weekly  ask the experts webinar .", 
            "title": "What is Azure RemoteApp?"
        }, 
        {
            "location": "/remoteapp-whatis/#azure-remoteapp-collections", 
            "text": "There are two kinds of  Azure RemoteApp collections :    A  cloud collection  is hosted in and stores data for programs in the cloud. Users can access apps by logging in with their Microsoft account or corporate credentials synchronized or federated with Azure Active Directory.  Choose a cloud collection when the application you want to share does not require a connection to any resource your company's private network (for example, through a VPN device). If the application uses resources on the Internet, OneDrive, or Azure, a cloud collection will work for you. It's also the quickest to create.    A  hybrid collection  is hosted in and stores data in the Azure cloud but also lets users access data and resources stored on your local network. Users can access apps by logging in with their corporate credentials synchronized or federated with Azure Active Directory.  Choose a hybrid collection if you require a connection to resources on your company's private network. For example, if the application needs access to one of the following:   File servers located on your intranet  Quicken  Databases behind a firewall   This is generally more useful for large companies with lots of resources on their private networks that can't be moved to the cloud.    The different collections have different options, including networks, so figure out  which collection  works best for you.", 
            "title": "Azure RemoteApp collections"
        }, 
        {
            "location": "/remoteapp-whatis/#updating-your-collection", 
            "text": "One of the key differences between the hybrid and cloud collections is how software updates are handled. With a cloud collection that uses the preinstalled Office 365 ProPlus or Office 2013 image, you do not have to worry about any updates. The service maintains itself and rolls out updates on an ongoing basis, to both apps and the operating system.  For hybrid collections, as well as cloud collections that use a custom template image, you are in charge of maintaining the image and apps. For domain-joined images, you can control updates by using tools such as Windows Update, Group Policy, or System Center.  After you update your custom template image, you upload the new image to the Azure cloud and then update the collection to use the new image. (You can do this from the Azure RemoteApp  Quick Start  page or the Dashboard.)  See  Update your collection  for more information.", 
            "title": "Updating your collection"
        }, 
        {
            "location": "/remoteapp-whatis/#supported-remoteapp-clients", 
            "text": "Azure RemoteApp is supported on the RemoteApp client apps for Windows and Windows RT, as well as the Microsoft Remote Desktop apps for Mac, iOS and Android. Your users can use these apps on their mobile or compute devices to access the new Azure RemoteApp programs.  See  Accessing your apps in Azure RemoteApp  for more information about the clients.", 
            "title": "Supported RemoteApp clients"
        }, 
        {
            "location": "/remoteapp-whatis/#next-steps", 
            "text": "Go! Try it out! These articles help get you started with Azure RemoteApp:   What kind of collection do you need for Azure RemoteApp?  Create an Azure RemoteApp image  How to create a cloud collection of Azure RemoteApp  How to create a hybrid collection of Azure RemoteApp  How does licensing work in Azure RemoteApp?  Best practices for using Azure RemoteApp  Azure RemoteApp FAQ", 
            "title": "Next steps"
        }, 
        {
            "location": "/remoteapp-whatis/#help-us-help-you", 
            "text": "Did you know that in addition to rating this article and making comments down below, you can make changes to the article itself? Something missing? Something wrong? Did I write something that's just confusing? Scroll up and click  Edit on GitHub  or  Edit  to make changes - those will come to us for review, and then, once we sign off on them, you'll see your changes and improvements right here.", 
            "title": "Help us help you"
        }, 
        {
            "location": "/remoteapp-licensing/", 
            "text": "How does licensing work in Azure RemoteApp?\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nSo you've set up your Azure RemoteApp service, created your templates, and are ready to publish apps to your users. But there's still one last thing to figure out: licensing. Just how does licensing work for RemoteApp and for the apps you share through RemoteApp?\n\n\nRemoteApp does not require any Windows licenses or Remote Desktop CALs. Your subscription takes care of the RemoteApp side itself. (Check out the details of the \npricing plans\n.)\n\n\nIf you use one of the images that is included in your subscription, you can share any of the apps installed on that image without needing a separate license. For example, if you use the Windows Server 2012 R2 template image to build your collection, you can share System Center Endpoint Protection with your users. The only exceptions to this rule are Office 365 ProPlus, which requires a separate subscription, and Office 2013, which cannot be shared in a production collection.\n\n\nIf you want to use the Office 365 template image that comes with RemoteApp, you must have an \nexisting\n Office 365 ProPlus plan. The same is true for any Office 365 app that you publish using a custom template. You need to activate the apps with your own subscription. This is true for both trial and paid subscriptions. If you want to use the Office 365 template image during the trial, \nand you don't already have a subscription\n, go to the Office 365 page to \nsign up\n for a trial subscription. See \nHow do RemoteApp and Office work together?\n for more information.\n\n\nIf, during the trial period, you don't want to get an Office 365 trial subscription, use the Office 2013 Professional Plus template image that comes with RemoteApp. This template image can only be used for 30 days and cannot be converted into a paid collection.\n\n\nFor other apps, you need to make sure that you have the license to share the app.\n\n\nThat makes sense, right? You can publish any app that you are legally entitled to share. And you need to make sure you really are entitled to share your programs.\n\n\nPlease note that you cannot use a CAL or Volume License agreement in a cloud collection. You \ncan\n use a Volume License agreement to activate applications in your hybrid collection (except for Office). You just need to install them on your template image from the Volume License media. Follow the information from the application vendor to install licenses in a Remote Desktop environment.", 
            "title": "How does licensing work?"
        }, 
        {
            "location": "/remoteapp-licensing/#how-does-licensing-work-in-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   So you've set up your Azure RemoteApp service, created your templates, and are ready to publish apps to your users. But there's still one last thing to figure out: licensing. Just how does licensing work for RemoteApp and for the apps you share through RemoteApp?  RemoteApp does not require any Windows licenses or Remote Desktop CALs. Your subscription takes care of the RemoteApp side itself. (Check out the details of the  pricing plans .)  If you use one of the images that is included in your subscription, you can share any of the apps installed on that image without needing a separate license. For example, if you use the Windows Server 2012 R2 template image to build your collection, you can share System Center Endpoint Protection with your users. The only exceptions to this rule are Office 365 ProPlus, which requires a separate subscription, and Office 2013, which cannot be shared in a production collection.  If you want to use the Office 365 template image that comes with RemoteApp, you must have an  existing  Office 365 ProPlus plan. The same is true for any Office 365 app that you publish using a custom template. You need to activate the apps with your own subscription. This is true for both trial and paid subscriptions. If you want to use the Office 365 template image during the trial,  and you don't already have a subscription , go to the Office 365 page to  sign up  for a trial subscription. See  How do RemoteApp and Office work together?  for more information.  If, during the trial period, you don't want to get an Office 365 trial subscription, use the Office 2013 Professional Plus template image that comes with RemoteApp. This template image can only be used for 30 days and cannot be converted into a paid collection.  For other apps, you need to make sure that you have the license to share the app.  That makes sense, right? You can publish any app that you are legally entitled to share. And you need to make sure you really are entitled to share your programs.  Please note that you cannot use a CAL or Volume License agreement in a cloud collection. You  can  use a Volume License agreement to activate applications in your hybrid collection (except for Office). You just need to install them on your template image from the Volume License media. Follow the information from the application vendor to install licenses in a Remote Desktop environment.", 
            "title": "How does licensing work in Azure RemoteApp?"
        }, 
        {
            "location": "/remoteapp-faq/", 
            "text": "Azure RemoteApp FAQ\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nWe've heard the following questions about Azure RemoteApp. Have others? Visit the \nRemoteApp forums\n and let us know what you need to know, or drop a comment down below.\n\n\nCan't find what you're looking for? Have a question we didn't answer?\n\n\nIf you can't find the information you need, or you have an additional question that we're not covering here, please go to the \nAzure RemoteApp forum\n and ask your question there. We can always add more answers here.\n\n\nWhat is Azure RemoteApp?\n\n\n\n\nWhat is Azure RemoteApp?\n RemoteApp is an Azure service helps you provide secure, remote access to applications from many different user devices. Read more  about \nAzure RemoteApp\n.\n\n\nWhat are the deployment options?\n There are two kinds of RemoteApp collections: cloud and hybrid. Which one you need depends on a number of factors, like whether you need domain join. We talk about all of those decisions \nhere\n.\n\n\n\n\nQuick tips on using Azure RemoteApp\n\n\n\n\nHow long until I'm disconnected? How long can I be idle before you give me the boot?\n 4 hours. If you or one of your users is idle for 4 hours, you'll be automatically signed out of Azure RemoteApp. Check out the other default settings in \nAzure Subscription and Service Limits, Quotas, and Constraints\n.\n\n\nCan I try this service for free?\n Yes. There is a free trial available for 30 days. After the trial ends, you can transition to a paid account (which you can use in production) or stop using the service. Start your free trial by going to \nportal.azure.com\n - create a new instance of RemoteApp. With the free trial, you can build 2 instances of RemoteApp with 10 users per instance. Remember that this trial only lives for 30 days.\n\n\n\n\nAzure RemoteApp subscription details\n\n\n\n\nWhat are the service limits?\n You can learn about the default settings and service limits of Azure RemoteApp in \nAzure Subscription and Service Limits, Quotas, and Constraints\n. Let us know if you have more questions.\n\n\nHow many users do I have to have?\n There's a minimum of 20 users. Let me repeat that to be super clear - the MINIMUM is 20. You will be billed for 20. \n\n\nHow much does RemoteApp cost?\n Check out \nAzure RemoteApp Pricing Details \n.\n\n\nDoes one type of collection cost more than another?\n \nYes, it can, depending on your collection requirements. A hybrid collection requires a connection from Azure RemoteApp to your on-premises network. If you use an existing VNET/Express Route, there is no additional cost. But if you use a new Azure VNET and either a gateway or Express Route, you will be charged for the \nVPN gateway\n or \nExpress Route\n. This cost (detailed in the links) is on top of your monthly Azure RemoteApp cost.\n\n\n\n\nCollections - what's supported, which should you use, and others\n\n\n\n\nAre custom line-of-business (LOB) applications supported?\n Yes. To use a custom application in Azure RemoteApp, create a \ncustom template image\n, and then upload it to the RemoteApp collection.\n\n\nWill my custom LOB application work in Azure RemoteApp?\n The best way to figure that out is to test it. Check out the \nRD Compatibility Center\n.\n\n\nWhich deployment method (cloud or hybrid) is best for my organization?\n Hybrid collections provide the most complete experience if you want full integration with single sign-on (SSO) and secure on-premises network connectivity. Cloud collections provide an agile and easy way to isolate your deployment by using multiple authentication methods. Read more about the \ndeployment options\n.\n\n\nWe have SQL or another database either on-premises or in Azure. Which deployment type should we use?\n That depends on where your SQL or backend database is. If the database is in a private network, use the hybrid collection. If the database is exposed to the Internet and allows client connections to connect to it, you can use the cloud collection.\n\n\nWhat about drive mapping, USB and serial port, clipboard sharing, and printer redirection?\n All of those features are supported in Azure RemoteApp. Clipboard sharing and printer redirection is enabled by default. You can learn more about redirection \nhere\n. \n\n\n\n\nTemplate images\n\n\n\n\nCan I use a cloud or existing virtual machine as the template for my RemoteApp collection?\n Yes! You can create an image based on an Azure VM, use one of the images included with your subscription, or create a custom image. Check out the \nRemoteApp image options\n.\n\n\n\n\nNetwork options\n\n\n\n\nThe hybrid collection requires a VNET. Can we use our existing VNET?\n You can if the existing VNET is an Azure VNET. See \"Step 1: Set up your virtual network\" in the \nhybrid collection instructions\n for more information.\n\n\nCan I use a VNET with a cloud collection?\n Indeed you can. Check out \nCreate a cloud collection\n, particularly Step 1, for more information.\n\n\n\n\nAuthentication options\n\n\n\n\nHow about authentication? Which methods are supported?\n The cloud collection supports Microsoft accounts and Azure Active Directory accounts, which are Office 365 accounts as well. The hybrid collection supports only Azure Active Directory accounts that have been synced (using a tool like \nAzure Active Directory Sync\n) from a Windows Server Active Directory deployment; specifically, either synced with the Password Synchronization option or synced with Active Directory Federation Services (AD FS) federation configured. You can also configure \nMulti-Factor Authentication (MFA)\n.\n\n\n\n\n\n\n[AZURE.NOTE]The Azure Active Directory users must be from the tenant that's associated with your subscription. (You can view and modify your subscription on the \nSettings\n tab in the portal. See \nChange the Azure Active Directory tenant used by RemoteApp\n for more information.)\n\n\n\n\n\n\nWhy can't I give my Azure Active Directory account access?\n The Azure Active Directory users must be from the directory that's associated with your subscription. You can view or modify that directory on the Settings tab in the portal. See \nChange the Azure Active Directory tenant used by RemoteApp\n for more information.\n\n\n\n\nClients - what device can I use to access Azure RemoteApp?\n\n\nYou can find good client information, including steps for installing the different clients at \nAccessing your apps in Azure RemoteApp\n.\n\n\n\n\n\n\nWhich devices and operating systems do the client applications support?\n\nFirst, the computers and tablets: \n\n\n\n\nWindows 10 (client preview)\n\n\nWindows 8.1 and Windows 8\n\n\nWindows 7 Service Pack 1\n\n\nMac OS X\n\n\nWindows RT\n\n\nAndroid tablets\n\n\niPads\nAnd the phones:\n\n\niPhone\n\n\nAndroid Phone\n\n\nWindows Phone\n\n\n\n\nDownload\n a RemoteApp client now.\n- \nDoes Azure RemoteApp support Thin Clients?\n Yes, the following Windows Embedded thin clients are supported:\n- Windows Embedded Standard 7\n- Windows Embedded 8 Standard\n- Windows Embedded 8.1 Industry Pro\n- Windows 10 IoT Enterprise\n\n\n\n\n\n\nWhich version of Windows Server is supported for the Remote Desktop Session Host (RDSH)?\n Windows Server 2012 R2.\n\n\n\n\n\n\nSupport and feedback\n\n\n\n\nWhat is the support plan for RemoteApp?\n Support for billing and subscription management is provided at no cost. Technical support is available through the \nAzure service plans\n. You can also get free community support through our \nAzure discussion forum\n. \n\n\nHow do I submit feedback?\n Visit the \nfeedback forum\n.\n\n\nWho can I talk to learn more about Azure RemoteApp?\n In addition to our \ndiscussion forum\n, which is a great place to post questions, you can join the weekly \nAsk the Experts webinar\n, where we talk about all things RemoteApp.\n\n\n\n\nWhat about RemoteApp documentation?\n We're so glad you asked. In addition to the help content in the portal help drawer (just click the \n?\n on any page in the portal), the following articles are available to teach you all about RemoteApp:\n\n\n\n\nGet started:\n\n\nWhat is RemoteApp?\n\n\nWhat is in the RemoteApp template images?\n\n\nHow does licensing work?\n\n\nHow do RemoteApp and Office work together?\n\n\nHow does redirection work in RemoteApp\n?\n\n\n\n\n\n\nDeploy:\n\n\nCreate a custom template image\n\n\nCreate a hybrid collection\n\n\nCreate a cloud collection\n\n\nConfigure Azure Active Directory for RemoteApp\n\n\nPublish an app in RemoteApp\n\n\n\n\n\n\nManage:\n\n\nAdd users\n\n\nBest practices for configuring and using RemoteApp\n  \n\n\n\n\n\n\n\n\nVideos! We also have a number of videos about RemoteApp. Some provide introduction (\nIntroduction to Azure RemoteApp\n) while others walk you through deployment (\nCloud deployment\n and \nHybrid deployment\n). Check them out!\n\n\n\n\n\n\nHelp us help you\n\n\nDid you know that in addition to rating this article and making comments down below, you can make changes to the article itself? Something missing? Something wrong? Did I write something that's just confusing? Scroll up and click \nEdit on GitHub\n to make changes - those will come to us for review, and then, once we sign off on them, you'll see your changes and improvements right here.", 
            "title": "FAQ"
        }, 
        {
            "location": "/remoteapp-faq/#azure-remoteapp-faq", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   We've heard the following questions about Azure RemoteApp. Have others? Visit the  RemoteApp forums  and let us know what you need to know, or drop a comment down below.", 
            "title": "Azure RemoteApp FAQ"
        }, 
        {
            "location": "/remoteapp-faq/#cant-find-what-youre-looking-for-have-a-question-we-didnt-answer", 
            "text": "If you can't find the information you need, or you have an additional question that we're not covering here, please go to the  Azure RemoteApp forum  and ask your question there. We can always add more answers here.", 
            "title": "Can't find what you're looking for? Have a question we didn't answer?"
        }, 
        {
            "location": "/remoteapp-faq/#what-is-azure-remoteapp", 
            "text": "What is Azure RemoteApp?  RemoteApp is an Azure service helps you provide secure, remote access to applications from many different user devices. Read more  about  Azure RemoteApp .  What are the deployment options?  There are two kinds of RemoteApp collections: cloud and hybrid. Which one you need depends on a number of factors, like whether you need domain join. We talk about all of those decisions  here .", 
            "title": "What is Azure RemoteApp?"
        }, 
        {
            "location": "/remoteapp-faq/#quick-tips-on-using-azure-remoteapp", 
            "text": "How long until I'm disconnected? How long can I be idle before you give me the boot?  4 hours. If you or one of your users is idle for 4 hours, you'll be automatically signed out of Azure RemoteApp. Check out the other default settings in  Azure Subscription and Service Limits, Quotas, and Constraints .  Can I try this service for free?  Yes. There is a free trial available for 30 days. After the trial ends, you can transition to a paid account (which you can use in production) or stop using the service. Start your free trial by going to  portal.azure.com  - create a new instance of RemoteApp. With the free trial, you can build 2 instances of RemoteApp with 10 users per instance. Remember that this trial only lives for 30 days.", 
            "title": "Quick tips on using Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-faq/#azure-remoteapp-subscription-details", 
            "text": "What are the service limits?  You can learn about the default settings and service limits of Azure RemoteApp in  Azure Subscription and Service Limits, Quotas, and Constraints . Let us know if you have more questions.  How many users do I have to have?  There's a minimum of 20 users. Let me repeat that to be super clear - the MINIMUM is 20. You will be billed for 20.   How much does RemoteApp cost?  Check out  Azure RemoteApp Pricing Details  .  Does one type of collection cost more than another?  \nYes, it can, depending on your collection requirements. A hybrid collection requires a connection from Azure RemoteApp to your on-premises network. If you use an existing VNET/Express Route, there is no additional cost. But if you use a new Azure VNET and either a gateway or Express Route, you will be charged for the  VPN gateway  or  Express Route . This cost (detailed in the links) is on top of your monthly Azure RemoteApp cost.", 
            "title": "Azure RemoteApp subscription details"
        }, 
        {
            "location": "/remoteapp-faq/#collections-whats-supported-which-should-you-use-and-others", 
            "text": "Are custom line-of-business (LOB) applications supported?  Yes. To use a custom application in Azure RemoteApp, create a  custom template image , and then upload it to the RemoteApp collection.  Will my custom LOB application work in Azure RemoteApp?  The best way to figure that out is to test it. Check out the  RD Compatibility Center .  Which deployment method (cloud or hybrid) is best for my organization?  Hybrid collections provide the most complete experience if you want full integration with single sign-on (SSO) and secure on-premises network connectivity. Cloud collections provide an agile and easy way to isolate your deployment by using multiple authentication methods. Read more about the  deployment options .  We have SQL or another database either on-premises or in Azure. Which deployment type should we use?  That depends on where your SQL or backend database is. If the database is in a private network, use the hybrid collection. If the database is exposed to the Internet and allows client connections to connect to it, you can use the cloud collection.  What about drive mapping, USB and serial port, clipboard sharing, and printer redirection?  All of those features are supported in Azure RemoteApp. Clipboard sharing and printer redirection is enabled by default. You can learn more about redirection  here .", 
            "title": "Collections - what's supported, which should you use, and others"
        }, 
        {
            "location": "/remoteapp-faq/#template-images", 
            "text": "Can I use a cloud or existing virtual machine as the template for my RemoteApp collection?  Yes! You can create an image based on an Azure VM, use one of the images included with your subscription, or create a custom image. Check out the  RemoteApp image options .", 
            "title": "Template images"
        }, 
        {
            "location": "/remoteapp-faq/#network-options", 
            "text": "The hybrid collection requires a VNET. Can we use our existing VNET?  You can if the existing VNET is an Azure VNET. See \"Step 1: Set up your virtual network\" in the  hybrid collection instructions  for more information.  Can I use a VNET with a cloud collection?  Indeed you can. Check out  Create a cloud collection , particularly Step 1, for more information.", 
            "title": "Network options"
        }, 
        {
            "location": "/remoteapp-faq/#authentication-options", 
            "text": "How about authentication? Which methods are supported?  The cloud collection supports Microsoft accounts and Azure Active Directory accounts, which are Office 365 accounts as well. The hybrid collection supports only Azure Active Directory accounts that have been synced (using a tool like  Azure Active Directory Sync ) from a Windows Server Active Directory deployment; specifically, either synced with the Password Synchronization option or synced with Active Directory Federation Services (AD FS) federation configured. You can also configure  Multi-Factor Authentication (MFA) .    [AZURE.NOTE]The Azure Active Directory users must be from the tenant that's associated with your subscription. (You can view and modify your subscription on the  Settings  tab in the portal. See  Change the Azure Active Directory tenant used by RemoteApp  for more information.)    Why can't I give my Azure Active Directory account access?  The Azure Active Directory users must be from the directory that's associated with your subscription. You can view or modify that directory on the Settings tab in the portal. See  Change the Azure Active Directory tenant used by RemoteApp  for more information.", 
            "title": "Authentication options"
        }, 
        {
            "location": "/remoteapp-faq/#clients-what-device-can-i-use-to-access-azure-remoteapp", 
            "text": "You can find good client information, including steps for installing the different clients at  Accessing your apps in Azure RemoteApp .    Which devices and operating systems do the client applications support? \nFirst, the computers and tablets:    Windows 10 (client preview)  Windows 8.1 and Windows 8  Windows 7 Service Pack 1  Mac OS X  Windows RT  Android tablets  iPads\nAnd the phones:  iPhone  Android Phone  Windows Phone   Download  a RemoteApp client now.\n-  Does Azure RemoteApp support Thin Clients?  Yes, the following Windows Embedded thin clients are supported:\n- Windows Embedded Standard 7\n- Windows Embedded 8 Standard\n- Windows Embedded 8.1 Industry Pro\n- Windows 10 IoT Enterprise    Which version of Windows Server is supported for the Remote Desktop Session Host (RDSH)?  Windows Server 2012 R2.", 
            "title": "Clients - what device can I use to access Azure RemoteApp?"
        }, 
        {
            "location": "/remoteapp-faq/#support-and-feedback", 
            "text": "What is the support plan for RemoteApp?  Support for billing and subscription management is provided at no cost. Technical support is available through the  Azure service plans . You can also get free community support through our  Azure discussion forum .   How do I submit feedback?  Visit the  feedback forum .  Who can I talk to learn more about Azure RemoteApp?  In addition to our  discussion forum , which is a great place to post questions, you can join the weekly  Ask the Experts webinar , where we talk about all things RemoteApp.   What about RemoteApp documentation?  We're so glad you asked. In addition to the help content in the portal help drawer (just click the  ?  on any page in the portal), the following articles are available to teach you all about RemoteApp:   Get started:  What is RemoteApp?  What is in the RemoteApp template images?  How does licensing work?  How do RemoteApp and Office work together?  How does redirection work in RemoteApp ?    Deploy:  Create a custom template image  Create a hybrid collection  Create a cloud collection  Configure Azure Active Directory for RemoteApp  Publish an app in RemoteApp    Manage:  Add users  Best practices for configuring and using RemoteApp        Videos! We also have a number of videos about RemoteApp. Some provide introduction ( Introduction to Azure RemoteApp ) while others walk you through deployment ( Cloud deployment  and  Hybrid deployment ). Check them out!", 
            "title": "Support and feedback"
        }, 
        {
            "location": "/remoteapp-faq/#help-us-help-you", 
            "text": "Did you know that in addition to rating this article and making comments down below, you can make changes to the article itself? Something missing? Something wrong? Did I write something that's just confusing? Scroll up and click  Edit on GitHub  to make changes - those will come to us for review, and then, once we sign off on them, you'll see your changes and improvements right here.", 
            "title": "Help us help you"
        }, 
        {
            "location": "/remoteapp-whatsnew/", 
            "text": "What's new in Azure RemoteApp?\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nOne of the advantages of Azure RemoteApp is that we are always working to improve it. Every time we do, we'll announce those changes here.\n\n\nFuture updates\n\n\nHey - did you know the Azure RemoteApp team posts monthly updates to the RDS blog? You can find not just what's change in Azure RemoteApp but also other information about how to use RDS. Check out their blog, \nRemote Desktop Services Blog\n, for information. For example, a couple of weeks ago, they posted an entry about \nlifting and shifting workloads with Azure RemoteApp and Azure AD\n.\n\n\nSeptember 2015\n\n\n\n\nAdded Infopath to the Microsoft Office 365 template and gallery image. If you want to share Infopath, make sure to update your collections with the latest image.\n\n\nClient updates:\n\n\nWindows client updated to make it possible for users to share feedback, especially around connection issues.\n\n\niOS client updated to fix error messaging and to fix a problem where your credentials expired earlier than expected.\n\n\n\n\n\n\nWe're working on getting Office 2016 support tested. Once that's completed, look for updated images.\n\n\nPublished a new article about the \ndifferences between cloud and hybrid collections\n - this will help you choose the collection type that works best for your apps - cloud-only, cloud + VNET, or hybrid.\n\n\nWant to share QuickBooks using Azure RemoteApp but not sure of the steps? Check out \nEric's new article\n telling you exactly what to do.\n\n\n\n\nAugust 2015\n\n\nBig changes happened in August - here are the highlights:\n\n\n\n\nYou can now use an Azure VNET with a cloud collection! Check out the \ncloud creation instructions\n for the new steps.\n\n\nMade it possible to add apps to the \nStart \nmenu for the Windows RemoteApp client. Apps will show up in the application list, and you can pin them to the \nStart \nmenu in Windows.\n\n\nAdded a new image to the Azure VM gallery - Windows Server Remote Desktop Session Host with Microsoft Office 365 ProPlus.\n\n\nFixed the Mac client so apps with modal windows will stop freezing.\n\n\nDocumented how you can use your \nOffice 365 ProPlus subscription\n with Azure RemoteApp.\n\n\nDetailed how you can \nsecure the apps and data\n in your Azure RemoteApp collection.\n\n\n\n\nJuly 2015\n\n\nJuly set the stage for changes coming in August, so there's not a lot to talk about now, mostly doc updates. Here are the most recent changes:\n\n\n\n\nAdded a \nSupport\n tab to the portal so you can more easily access support resources, like the forums.\n\n\nReworked the troubleshooting information for creating a hybrid collection. Check out \nthe latest and greatest\n for troubleshooting tips like, how to identify the correct ports to configure for your VNET.\n\n\nDocumented how \nuser data\n is created and saved in Azure RemoteApp.\n\n\nDocumented how to \nlock down apps\n.\n\n\nPublished the \nAzure RemoteApp cmdlets\n.\n\n\nAnd finally, we started a conversation with some Azure RemoteApp users about terminology. Look for changes to the way we refer to the different collection options.\n\n\n\n\nJune 2015\n\n\nSo many changes! The team has been very busy in June:\n\n\n\n\nRedesigned the Azure RemoteApp \nlanding page\n - check it out!\n\n\nUpdated the software in all the images available as part of your subscription.\n\n\nMade improvements to hybrid collections, including forced tunneling support and checking IP subnet size before trying to create the collection.\n\n\nDiscovered that the * wildcard doesn't work for webcams. Instead, you need to specify the instance ID or GUID. We'll be updating the redirection information to reflect that.\n\n\nMade it so you can add custom antivirus software to your image when you create a template image from the Azure gallery.\n\n\n\n\nWe've got more changes rolling out in July, so we'll be back with another update soon.\n\n\nMay 2015\n\n\nThere have been a number of additions (and months) since we first created this topic, so this list cheats a bit and is from the beginning of March through May. Check out these new features:\n\n\n\n\nAutomate everything - Azure RemoteApp now has \ncmdlets in the Azure PowerShell module\n.\n\n\nCreate an Azure RemoteApp image from an Azure virtual machine\n. Makes uploading your custom image to Azure much quicker.\n\n\nUse an Azure VNET instead of a RemoteApp VNET to connect your corporate network resources to Azure. We've updated the \nhybrid collection instructions\n to walk you through creating an Azure VNET (it's Step 1).\n\n\nSpeaking of VNETs, check out \nthe new guidance\n around VNET size limits and limitations.\n\n\nAnd speaking of limits - just what are the \nservice limits and defaults\n?\n\n\n\n\nWant to learn more about Azure RemoteApp? The RemoteApp team was out in force at Ignite a few weeks ago. Check out Eric's video, \nThe Fundamentals of Microsoft Azure RemoteApp Management and Administration\n.\n\n\nNeed to see Azure RemoteApp in the real world? Check out the \nRun any app on any device anywhere\n tutorial - it shows you how to share Access with your users, including sharing the database files. We also have a tutorial on \nmaking Office 365\n run the same on any device.\n\n\nThanks for sticking with us - back next month with more updates.\n\n\nHelp us help you\n\n\nDid you know that in addition to rating this article and making comments down below, you can make changes to the article itself? Something missing? Something wrong? Did I write something that's just confusing? Scroll up and click \nEdit on GitHub\n to make changes - those will come to us for review, and then, once we sign off on them, you'll see your changes and improvements right here.", 
            "title": "What's new?"
        }, 
        {
            "location": "/remoteapp-whatsnew/#whats-new-in-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   One of the advantages of Azure RemoteApp is that we are always working to improve it. Every time we do, we'll announce those changes here.", 
            "title": "What's new in Azure RemoteApp?"
        }, 
        {
            "location": "/remoteapp-whatsnew/#future-updates", 
            "text": "Hey - did you know the Azure RemoteApp team posts monthly updates to the RDS blog? You can find not just what's change in Azure RemoteApp but also other information about how to use RDS. Check out their blog,  Remote Desktop Services Blog , for information. For example, a couple of weeks ago, they posted an entry about  lifting and shifting workloads with Azure RemoteApp and Azure AD .", 
            "title": "Future updates"
        }, 
        {
            "location": "/remoteapp-whatsnew/#september-2015", 
            "text": "Added Infopath to the Microsoft Office 365 template and gallery image. If you want to share Infopath, make sure to update your collections with the latest image.  Client updates:  Windows client updated to make it possible for users to share feedback, especially around connection issues.  iOS client updated to fix error messaging and to fix a problem where your credentials expired earlier than expected.    We're working on getting Office 2016 support tested. Once that's completed, look for updated images.  Published a new article about the  differences between cloud and hybrid collections  - this will help you choose the collection type that works best for your apps - cloud-only, cloud + VNET, or hybrid.  Want to share QuickBooks using Azure RemoteApp but not sure of the steps? Check out  Eric's new article  telling you exactly what to do.", 
            "title": "September 2015"
        }, 
        {
            "location": "/remoteapp-whatsnew/#august-2015", 
            "text": "Big changes happened in August - here are the highlights:   You can now use an Azure VNET with a cloud collection! Check out the  cloud creation instructions  for the new steps.  Made it possible to add apps to the  Start  menu for the Windows RemoteApp client. Apps will show up in the application list, and you can pin them to the  Start  menu in Windows.  Added a new image to the Azure VM gallery - Windows Server Remote Desktop Session Host with Microsoft Office 365 ProPlus.  Fixed the Mac client so apps with modal windows will stop freezing.  Documented how you can use your  Office 365 ProPlus subscription  with Azure RemoteApp.  Detailed how you can  secure the apps and data  in your Azure RemoteApp collection.", 
            "title": "August 2015"
        }, 
        {
            "location": "/remoteapp-whatsnew/#july-2015", 
            "text": "July set the stage for changes coming in August, so there's not a lot to talk about now, mostly doc updates. Here are the most recent changes:   Added a  Support  tab to the portal so you can more easily access support resources, like the forums.  Reworked the troubleshooting information for creating a hybrid collection. Check out  the latest and greatest  for troubleshooting tips like, how to identify the correct ports to configure for your VNET.  Documented how  user data  is created and saved in Azure RemoteApp.  Documented how to  lock down apps .  Published the  Azure RemoteApp cmdlets .  And finally, we started a conversation with some Azure RemoteApp users about terminology. Look for changes to the way we refer to the different collection options.", 
            "title": "July 2015"
        }, 
        {
            "location": "/remoteapp-whatsnew/#june-2015", 
            "text": "So many changes! The team has been very busy in June:   Redesigned the Azure RemoteApp  landing page  - check it out!  Updated the software in all the images available as part of your subscription.  Made improvements to hybrid collections, including forced tunneling support and checking IP subnet size before trying to create the collection.  Discovered that the * wildcard doesn't work for webcams. Instead, you need to specify the instance ID or GUID. We'll be updating the redirection information to reflect that.  Made it so you can add custom antivirus software to your image when you create a template image from the Azure gallery.   We've got more changes rolling out in July, so we'll be back with another update soon.", 
            "title": "June 2015"
        }, 
        {
            "location": "/remoteapp-whatsnew/#may-2015", 
            "text": "There have been a number of additions (and months) since we first created this topic, so this list cheats a bit and is from the beginning of March through May. Check out these new features:   Automate everything - Azure RemoteApp now has  cmdlets in the Azure PowerShell module .  Create an Azure RemoteApp image from an Azure virtual machine . Makes uploading your custom image to Azure much quicker.  Use an Azure VNET instead of a RemoteApp VNET to connect your corporate network resources to Azure. We've updated the  hybrid collection instructions  to walk you through creating an Azure VNET (it's Step 1).  Speaking of VNETs, check out  the new guidance  around VNET size limits and limitations.  And speaking of limits - just what are the  service limits and defaults ?   Want to learn more about Azure RemoteApp? The RemoteApp team was out in force at Ignite a few weeks ago. Check out Eric's video,  The Fundamentals of Microsoft Azure RemoteApp Management and Administration .  Need to see Azure RemoteApp in the real world? Check out the  Run any app on any device anywhere  tutorial - it shows you how to share Access with your users, including sharing the database files. We also have a tutorial on  making Office 365  run the same on any device.  Thanks for sticking with us - back next month with more updates.", 
            "title": "May 2015"
        }, 
        {
            "location": "/remoteapp-whatsnew/#help-us-help-you", 
            "text": "Did you know that in addition to rating this article and making comments down below, you can make changes to the article itself? Something missing? Something wrong? Did I write something that's just confusing? Scroll up and click  Edit on GitHub  to make changes - those will come to us for review, and then, once we sign off on them, you'll see your changes and improvements right here.", 
            "title": "Help us help you"
        }, 
        {
            "location": "/remoteapp-roadmap/", 
            "text": "What's coming in Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nWe are always working to improve Azure RemoteApp based on your feedback. Here are rough time lines for future feature availability.\n\n\n\n\n\n\n\n\nFeature\n\n\nApril-June 2016\n\n\nJuly-Sept 2016\n\n\n\n\n\n\n\n\n\n\nAzure Remote App available in both the \nAzure classic portal\n and \nAzure portal\n - Private preview\n\n\n\n\n\n\n\n\n\n\nAbility to publish individual applications to specific users - Private preview (\nfeedback\n)\n\n\n\n\n\n\n\n\n\n\nWindows client redistributable MSI package (\nfeedback\n) - Private preview\n\n\n\n\n\n\n\n\n\n\nAzure Resource Manager (ARM) support\n\n\n\n\n\n\n\n\n\n\nAzure v2 resource support\n\n\n\n\n\n\n\n\n\n\nCloud Solution Provider (CSP)\n\n\n\n\n\n\n\n\n\n\nAvailability in India region\n\n\n\n\n\n\n\n\n\n\nAvailability in UK region\n\n\n\n\n\n\n\n\n\n\n\n\nOther improvements added earlier this year:\n\n\n\n\nHTML5-based client for Azure RemoteApp\n\n\nWindows 10 Universal Application with Continuum for Azure RemoteApp - Preview\n\n\nDeploy to a VNET without joining a domain (cloud collection connection to the Azure VMs)\n\n\nRe-use an existing virtual network for RemoteApp hybrid collection (also enables ExpressRoute)\n\n\nExpressRoute\n\n\nRemoteApp PowerShell cmdlets and SDK for deployment and management\n\n\nCreate and upload an image from an Azure VM\n\n\nUpload line-of-business (LOB) applications to a cloud collection, as well as in a hybrid collection\n\n\nSupport for Windows Phone\n\n\nUsage metrics dashboard\n\n\nProvision a large number of users by using a CSV file\n\n\nAvailability in Australian data centers", 
            "title": "What's coming?"
        }, 
        {
            "location": "/remoteapp-roadmap/#whats-coming-in-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   We are always working to improve Azure RemoteApp based on your feedback. Here are rough time lines for future feature availability.     Feature  April-June 2016  July-Sept 2016      Azure Remote App available in both the  Azure classic portal  and  Azure portal  - Private preview      Ability to publish individual applications to specific users - Private preview ( feedback )      Windows client redistributable MSI package ( feedback ) - Private preview      Azure Resource Manager (ARM) support      Azure v2 resource support      Cloud Solution Provider (CSP)      Availability in India region      Availability in UK region       Other improvements added earlier this year:   HTML5-based client for Azure RemoteApp  Windows 10 Universal Application with Continuum for Azure RemoteApp - Preview  Deploy to a VNET without joining a domain (cloud collection connection to the Azure VMs)  Re-use an existing virtual network for RemoteApp hybrid collection (also enables ExpressRoute)  ExpressRoute  RemoteApp PowerShell cmdlets and SDK for deployment and management  Create and upload an image from an Azure VM  Upload line-of-business (LOB) applications to a cloud collection, as well as in a hybrid collection  Support for Windows Phone  Usage metrics dashboard  Provision a large number of users by using a CSV file  Availability in Australian data centers", 
            "title": "What's coming in Azure RemoteApp"
        }, 
        {
            "location": "/azure-subscription-service-limits/", 
            "text": "Azure subscription and service limits, quotas, and constraints\n\n\nOverview\n\n\nThis document specifies some of the most common Microsoft Azure limits. This does not currently cover all Azure services. Over time, these limits will be expanded and updated to cover more of the platform.\n\n\n\n\n[AZURE.NOTE] If you want to raise the limit above the \nDefault Limit\n, you can \nopen an online customer support request at no charge\n. The limits cannot be raised above the \nMaximum Limit\n value in the tables below. If there is no \nMaximum Limit\n column, then the specified resource does not have adjustable limits.\n\n\n\n\nLimits and the Azure Resource Manager\n\n\nIt is now possible to combine multiple Azure resources in to a single Azure Resource Group. When using Resource Groups, limits that once were global become managed at a regional level with the Azure Resource Manager. For more information about Azure Resource Groups, see \nAzure Resource Manager overview\n.\n\n\nIn the limits below, a new table has been added to reflect any differences in limits when using the Azure Resource Manager. For example, there is a \nSubscription Limits\n table and a \nSubscription Limits - Azure Resource Manager\n table. When a limit applies to both scenarios, it is only shown in the first table. Unless otherwise indicated, limits are global across all regions.\n\n\n\n\n[AZURE.NOTE] It is important to emphasize that quotas for resources in Azure Resource Groups are per-region accessible by your subscription, and are not per-subscription, as the service management quotas are. Let's use core quotas as an example. If you need to request a quota increase with support for cores, you need to decide how many cores you want to use in which regions, and then make a specific request for Azure Resource Group core quotas for the amounts and regions that you want. Therefore, if you need to use 30 cores in West Europe to run your application there; you should specifically request 30 cores in West Europe. But you will not have a core quota increase in any other region -- only West Europe will have the 30-core quota.\n\n\nAs a result, you may find it useful to consider deciding what your Azure Resource Group quotas need to be for your workload in any one region, and request that amount in each region into which you are considering deployment. See \ntroubleshooting deployment issues\n for more help discovering your current quotas for specific regions.\n\n\n\n\nService-specific limits\n\n\n\n\nActive Directory\n\n\nAPI Management\n\n\nApp Service\n\n\nApplication Insights\n\n\nAutomation\n\n\nAzure Redis Cache\n\n\nAzure RemoteApp\n\n\nBackup\n\n\nBatch\n\n\nBizTalk Services\n\n\nCDN\n\n\nCloud Services\n\n\nData Factory\n\n\nData Lake Analytics\n\n\nDNS\n\n\nDocumentDB\n\n\nEvent Hubs\n\n\nIoT Hub\n\n\nKey Vault\n\n\nMedia Services\n\n\nMobile Engagement\n\n\nMobile Services\n\n\nMulti-Factor Authentication\n\n\nNetworking\n\n\nNotification Hub Service\n\n\nOperational Insights\n\n\nResource Group\n\n\nScheduler\n\n\nSearch\n\n\nService Bus\n\n\nSite Recovery\n\n\nSQL Database\n\n\nStorage\n\n\nStorSimple System\n\n\nStream Analytics\n\n\nSubscription\n\n\nTraffic Manager\n\n\nVirtual Machines\n\n\nVirtual Machine Scale Sets\n\n\n\n\nSubscription limits\n\n\nSubscription limits\n\n\n[AZURE.INCLUDE \nazure-subscription-limits\n]\n\n\nSubscription limits - Azure Resource Manager\n\n\nThe following limits apply when using the Azure Resource Manager and Azure Resource Groups. Limits that have not changed with the Azure Resource Manager are not listed below. Please refer to the previous table for those limits.\n\n\n[AZURE.INCLUDE \nazure-subscription-limits-azure-resource-manager\n]\n\n\nResource Group limits\n\n\n[AZURE.INCLUDE \nazure-resource-groups-limits\n]\n\n\nVirtual Machines limits\n\n\nVirtual Machine limits\n\n\n[AZURE.INCLUDE \nazure-virtual-machines-limits\n]\n\n\nVirtual Machines limits - Azure Resource Manager\n\n\nThe following limits apply when using the Azure Resource Manager and Azure Resource Groups. Limits that have not changed with the Azure Resource Manager are not listed below. Please refer to the previous table for those limits.\n\n\n[AZURE.INCLUDE \nazure-virtual-machines-limits-azure-resource-manager\n]\n\n\nVirtual Machine Scale Sets limits\n\n\n[AZURE.INCLUDE \nvirtual-machine-scale-sets-limits\n]\n\n\nNetworking limits\n\n\n[AZURE.INCLUDE \nexpressroute-limits\n]\n\n\nNetworking limits\n\n\n[AZURE.INCLUDE \nazure-virtual-network-limits\n]\n\n\nTraffic Manager limits\n\n\n[AZURE.INCLUDE \ntraffic-manager-limits\n]\n\n\nDNS limits\n\n\n[AZURE.INCLUDE \ndns-limits\n]\n\n\nStorage limits\n\n\nFor additional details on storage account limits, see \nAzure Storage Scalability and Performance Targets\n).\n\n\nStorage Service limits\n\n\n[AZURE.INCLUDE \nazure-storage-limits\n]\n\n\nVirtual Machine disk limits\n\n\n[AZURE.INCLUDE \nazure-storage-limits-vm-disks\n]\n\n\nSee \nVirtual machine sizes\n for additional details.\n\n\nStandard storage accounts\n\n\n[AZURE.INCLUDE \nazure-storage-limits-vm-disks-standard\n]\n\n\nPremium storage accounts\n\n\n[AZURE.INCLUDE \nazure-storage-limits-vm-disks-premium\n]\n\n\nStorage Resource Provider limits\n\n\n[AZURE.INCLUDE \nazure-storage-limits-azure-resource-manager\n]\n\n\nCloud Services limits\n\n\n[AZURE.INCLUDE \nazure-cloud-services-limits\n]\n\n\nApp Service limits\n\n\nThe following App Service limits include limits for Web Apps, Mobile Apps, API Apps, and Logic Apps.\n\n\n[AZURE.INCLUDE \nazure-websites-limits\n]\n\n\nScheduler limits\n\n\n[AZURE.INCLUDE \nscheduler-limits-table\n]\n\n\nBatch limits\n\n\n[AZURE.INCLUDE \nazure-batch-limits\n)]\n\n\nBizTalk Services limits\n\n\nThe following table shows the limits for Azure Biztalk Services.\n\n\n[AZURE.INCLUDE \nbiztalk-services-service-limits\n]\n\n\nDocumentDB limits\n\n\n[AZURE.INCLUDE \nazure-documentdb-limits\n]\n\n\nQuotas listed with an asterisk (*) \ncan be adjusted by contacting Azure support\n.\n\n\nMobile Engagement limits\n\n\n[AZURE.INCLUDE \nazure-mobile-engagement-limits\n]\n\n\nSearch limits\n\n\nPricing tiers determine the capacity and limits of your search service. Tiers include:\n\n\n\n\nFree\n multi-tenant service, shared with other Azure subscribers, intended for evaluation and small development projects.\n\n\nBasic\n provides dedicated computing resources for production workloads at a smaller scale, with up to three replicas for highly available query workloads.\n\n\nStandard (S1, S2, S3, S3 High Density)\n is for larger production workloads. Multiple levels exist within the standard tier so that you can choose a resource configuration for specific scenarios.\n\n\n\n\nLimits per subscription\n\n\n[AZURE.INCLUDE \nazure-search-limits-per-subscription\n]\n\n\nLimits per search service\n\n\n[AZURE.INCLUDE \nazure-search-limits-per-service\n]\n\n\nFor more granular information about other limits, including document size, queries per second, keys, requests, and responses, see \nService limits in Azure Search\n.\n\n\nMedia Services limits\n\n\n[AZURE.INCLUDE \nazure-mediaservices-limits\n]\n\n\nCDN limits\n\n\n[AZURE.INCLUDE \ncdn-limits\n]\n\n\nMobile Services limits\n\n\n[AZURE.INCLUDE \nmobile-services-limits\n]\n\n\nNotification Hub Service limits\n\n\n[AZURE.INCLUDE \nnotification-hub-limits\n]\n\n\nEvent Hubs limits\n\n\n[AZURE.INCLUDE \nazure-servicebus-limits\n]\n\n\nService Bus limits\n\n\n[AZURE.INCLUDE \nazure-servicebus-limits\n]\n\n\nIoT Hub limits\n\n\n[AZURE.INCLUDE \nazure-iothub-limits\n]\n\n\nData Factory limits\n\n\n[AZURE.INCLUDE \nazure-data-factory-limits\n]\n\n\nData Lake Analytics Limits\n\n\n[AZURE.INCLUDE \nazure-data-lake-analytics-limits\n]\n\n\nStream Analytics limits\n\n\n[AZURE.INCLUDE \nstream-analytics-limits-table\n]\n\n\nActive Directory limits\n\n\n[AZURE.INCLUDE \nAAD-service-limits\n]\n\n\nAzure RemoteApp limits\n\n\n[AZURE.INCLUDE \nazure-remoteapp-limits\n]\n\n\nStorSimple System limits\n\n\n[AZURE.INCLUDE \nstorsimple-limits-table\n]\n\n\nOperational Insights limits\n\n\n[AZURE.INCLUDE \noperational-insights-limits\n]\n\n\nBackup limits\n\n\n[AZURE.INCLUDE \nazure-backup-limits\n]\n\n\nSite Recovery limits\n\n\n[AZURE.INCLUDE \nsite-recovery-limits\n]\n\n\nApplication Insights limits\n\n\n[AZURE.INCLUDE \napplication-insights-limits\n]\n\n\nAPI Management limits\n\n\n[AZURE.INCLUDE \napi-management-service-limits\n]\n\n\nAzure Redis Cache limits\n\n\n[AZURE.INCLUDE \nredis-cache-service-limits\n]\n\n\nKey Vault limits\n\n\n[AZURE.INCLUDE \nkey-vault-limits\n]\n\n\nMulti-Factor Authentication\n\n\n[AZURE.INCLUDE \nazure-mfa-service-limits\n)]\n\n\nAutomation limits\n\n\n[AZURE.INCLUDE \nautomation-limits\n]\n\n\nSQL Database limits\n\n\nFor SQL Database limits, see \nSQL Database Resource Limits\n.\n\n\nSee also\n\n\nUnderstanding Azure Limits and Increases\n\n\nVirtual Machine and Cloud Service Sizes for Azure\n\n\nSizes for Cloud Services", 
            "title": "Azure service limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#azure-subscription-and-service-limits-quotas-and-constraints", 
            "text": "", 
            "title": "Azure subscription and service limits, quotas, and constraints"
        }, 
        {
            "location": "/azure-subscription-service-limits/#overview", 
            "text": "This document specifies some of the most common Microsoft Azure limits. This does not currently cover all Azure services. Over time, these limits will be expanded and updated to cover more of the platform.   [AZURE.NOTE] If you want to raise the limit above the  Default Limit , you can  open an online customer support request at no charge . The limits cannot be raised above the  Maximum Limit  value in the tables below. If there is no  Maximum Limit  column, then the specified resource does not have adjustable limits.", 
            "title": "Overview"
        }, 
        {
            "location": "/azure-subscription-service-limits/#limits-and-the-azure-resource-manager", 
            "text": "It is now possible to combine multiple Azure resources in to a single Azure Resource Group. When using Resource Groups, limits that once were global become managed at a regional level with the Azure Resource Manager. For more information about Azure Resource Groups, see  Azure Resource Manager overview .  In the limits below, a new table has been added to reflect any differences in limits when using the Azure Resource Manager. For example, there is a  Subscription Limits  table and a  Subscription Limits - Azure Resource Manager  table. When a limit applies to both scenarios, it is only shown in the first table. Unless otherwise indicated, limits are global across all regions.   [AZURE.NOTE] It is important to emphasize that quotas for resources in Azure Resource Groups are per-region accessible by your subscription, and are not per-subscription, as the service management quotas are. Let's use core quotas as an example. If you need to request a quota increase with support for cores, you need to decide how many cores you want to use in which regions, and then make a specific request for Azure Resource Group core quotas for the amounts and regions that you want. Therefore, if you need to use 30 cores in West Europe to run your application there; you should specifically request 30 cores in West Europe. But you will not have a core quota increase in any other region -- only West Europe will have the 30-core quota. \nAs a result, you may find it useful to consider deciding what your Azure Resource Group quotas need to be for your workload in any one region, and request that amount in each region into which you are considering deployment. See  troubleshooting deployment issues  for more help discovering your current quotas for specific regions.", 
            "title": "Limits and the Azure Resource Manager"
        }, 
        {
            "location": "/azure-subscription-service-limits/#service-specific-limits", 
            "text": "Active Directory  API Management  App Service  Application Insights  Automation  Azure Redis Cache  Azure RemoteApp  Backup  Batch  BizTalk Services  CDN  Cloud Services  Data Factory  Data Lake Analytics  DNS  DocumentDB  Event Hubs  IoT Hub  Key Vault  Media Services  Mobile Engagement  Mobile Services  Multi-Factor Authentication  Networking  Notification Hub Service  Operational Insights  Resource Group  Scheduler  Search  Service Bus  Site Recovery  SQL Database  Storage  StorSimple System  Stream Analytics  Subscription  Traffic Manager  Virtual Machines  Virtual Machine Scale Sets", 
            "title": "Service-specific limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#subscription-limits", 
            "text": "", 
            "title": "Subscription limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#subscription-limits_1", 
            "text": "[AZURE.INCLUDE  azure-subscription-limits ]", 
            "title": "Subscription limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#subscription-limits-azure-resource-manager", 
            "text": "The following limits apply when using the Azure Resource Manager and Azure Resource Groups. Limits that have not changed with the Azure Resource Manager are not listed below. Please refer to the previous table for those limits.  [AZURE.INCLUDE  azure-subscription-limits-azure-resource-manager ]", 
            "title": "Subscription limits - Azure Resource Manager"
        }, 
        {
            "location": "/azure-subscription-service-limits/#resource-group-limits", 
            "text": "[AZURE.INCLUDE  azure-resource-groups-limits ]", 
            "title": "Resource Group limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#virtual-machines-limits", 
            "text": "", 
            "title": "Virtual Machines limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#virtual-machine-limits", 
            "text": "[AZURE.INCLUDE  azure-virtual-machines-limits ]", 
            "title": "Virtual Machine limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#virtual-machines-limits-azure-resource-manager", 
            "text": "The following limits apply when using the Azure Resource Manager and Azure Resource Groups. Limits that have not changed with the Azure Resource Manager are not listed below. Please refer to the previous table for those limits.  [AZURE.INCLUDE  azure-virtual-machines-limits-azure-resource-manager ]", 
            "title": "Virtual Machines limits - Azure Resource Manager"
        }, 
        {
            "location": "/azure-subscription-service-limits/#virtual-machine-scale-sets-limits", 
            "text": "[AZURE.INCLUDE  virtual-machine-scale-sets-limits ]", 
            "title": "Virtual Machine Scale Sets limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#networking-limits", 
            "text": "[AZURE.INCLUDE  expressroute-limits ]", 
            "title": "Networking limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#networking-limits_1", 
            "text": "[AZURE.INCLUDE  azure-virtual-network-limits ]", 
            "title": "Networking limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#traffic-manager-limits", 
            "text": "[AZURE.INCLUDE  traffic-manager-limits ]", 
            "title": "Traffic Manager limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#dns-limits", 
            "text": "[AZURE.INCLUDE  dns-limits ]", 
            "title": "DNS limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#storage-limits", 
            "text": "For additional details on storage account limits, see  Azure Storage Scalability and Performance Targets ).", 
            "title": "Storage limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#storage-service-limits", 
            "text": "[AZURE.INCLUDE  azure-storage-limits ]", 
            "title": "Storage Service limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#virtual-machine-disk-limits", 
            "text": "[AZURE.INCLUDE  azure-storage-limits-vm-disks ]  See  Virtual machine sizes  for additional details.  Standard storage accounts  [AZURE.INCLUDE  azure-storage-limits-vm-disks-standard ]  Premium storage accounts  [AZURE.INCLUDE  azure-storage-limits-vm-disks-premium ]", 
            "title": "Virtual Machine disk limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#storage-resource-provider-limits", 
            "text": "[AZURE.INCLUDE  azure-storage-limits-azure-resource-manager ]", 
            "title": "Storage Resource Provider limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#cloud-services-limits", 
            "text": "[AZURE.INCLUDE  azure-cloud-services-limits ]", 
            "title": "Cloud Services limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#app-service-limits", 
            "text": "The following App Service limits include limits for Web Apps, Mobile Apps, API Apps, and Logic Apps.  [AZURE.INCLUDE  azure-websites-limits ]", 
            "title": "App Service limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#scheduler-limits", 
            "text": "[AZURE.INCLUDE  scheduler-limits-table ]", 
            "title": "Scheduler limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#batch-limits", 
            "text": "[AZURE.INCLUDE  azure-batch-limits )]", 
            "title": "Batch limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#biztalk-services-limits", 
            "text": "The following table shows the limits for Azure Biztalk Services.  [AZURE.INCLUDE  biztalk-services-service-limits ]", 
            "title": "BizTalk Services limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#documentdb-limits", 
            "text": "[AZURE.INCLUDE  azure-documentdb-limits ]  Quotas listed with an asterisk (*)  can be adjusted by contacting Azure support .", 
            "title": "DocumentDB limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#mobile-engagement-limits", 
            "text": "[AZURE.INCLUDE  azure-mobile-engagement-limits ]", 
            "title": "Mobile Engagement limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#search-limits", 
            "text": "Pricing tiers determine the capacity and limits of your search service. Tiers include:   Free  multi-tenant service, shared with other Azure subscribers, intended for evaluation and small development projects.  Basic  provides dedicated computing resources for production workloads at a smaller scale, with up to three replicas for highly available query workloads.  Standard (S1, S2, S3, S3 High Density)  is for larger production workloads. Multiple levels exist within the standard tier so that you can choose a resource configuration for specific scenarios.   Limits per subscription  [AZURE.INCLUDE  azure-search-limits-per-subscription ]  Limits per search service  [AZURE.INCLUDE  azure-search-limits-per-service ]  For more granular information about other limits, including document size, queries per second, keys, requests, and responses, see  Service limits in Azure Search .", 
            "title": "Search limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#media-services-limits", 
            "text": "[AZURE.INCLUDE  azure-mediaservices-limits ]", 
            "title": "Media Services limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#cdn-limits", 
            "text": "[AZURE.INCLUDE  cdn-limits ]", 
            "title": "CDN limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#mobile-services-limits", 
            "text": "[AZURE.INCLUDE  mobile-services-limits ]", 
            "title": "Mobile Services limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#notification-hub-service-limits", 
            "text": "[AZURE.INCLUDE  notification-hub-limits ]", 
            "title": "Notification Hub Service limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#event-hubs-limits", 
            "text": "[AZURE.INCLUDE  azure-servicebus-limits ]", 
            "title": "Event Hubs limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#service-bus-limits", 
            "text": "[AZURE.INCLUDE  azure-servicebus-limits ]", 
            "title": "Service Bus limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#iot-hub-limits", 
            "text": "[AZURE.INCLUDE  azure-iothub-limits ]", 
            "title": "IoT Hub limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#data-factory-limits", 
            "text": "[AZURE.INCLUDE  azure-data-factory-limits ]", 
            "title": "Data Factory limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#data-lake-analytics-limits", 
            "text": "[AZURE.INCLUDE  azure-data-lake-analytics-limits ]", 
            "title": "Data Lake Analytics Limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#stream-analytics-limits", 
            "text": "[AZURE.INCLUDE  stream-analytics-limits-table ]", 
            "title": "Stream Analytics limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#active-directory-limits", 
            "text": "[AZURE.INCLUDE  AAD-service-limits ]", 
            "title": "Active Directory limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#azure-remoteapp-limits", 
            "text": "[AZURE.INCLUDE  azure-remoteapp-limits ]", 
            "title": "Azure RemoteApp limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#storsimple-system-limits", 
            "text": "[AZURE.INCLUDE  storsimple-limits-table ]", 
            "title": "StorSimple System limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#operational-insights-limits", 
            "text": "[AZURE.INCLUDE  operational-insights-limits ]", 
            "title": "Operational Insights limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#backup-limits", 
            "text": "[AZURE.INCLUDE  azure-backup-limits ]", 
            "title": "Backup limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#site-recovery-limits", 
            "text": "[AZURE.INCLUDE  site-recovery-limits ]", 
            "title": "Site Recovery limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#application-insights-limits", 
            "text": "[AZURE.INCLUDE  application-insights-limits ]", 
            "title": "Application Insights limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#api-management-limits", 
            "text": "[AZURE.INCLUDE  api-management-service-limits ]", 
            "title": "API Management limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#azure-redis-cache-limits", 
            "text": "[AZURE.INCLUDE  redis-cache-service-limits ]", 
            "title": "Azure Redis Cache limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#key-vault-limits", 
            "text": "[AZURE.INCLUDE  key-vault-limits ]", 
            "title": "Key Vault limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#multi-factor-authentication", 
            "text": "[AZURE.INCLUDE  azure-mfa-service-limits )]", 
            "title": "Multi-Factor Authentication"
        }, 
        {
            "location": "/azure-subscription-service-limits/#automation-limits", 
            "text": "[AZURE.INCLUDE  automation-limits ]", 
            "title": "Automation limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#sql-database-limits", 
            "text": "For SQL Database limits, see  SQL Database Resource Limits .", 
            "title": "SQL Database limits"
        }, 
        {
            "location": "/azure-subscription-service-limits/#see-also", 
            "text": "Understanding Azure Limits and Increases  Virtual Machine and Cloud Service Sizes for Azure  Sizes for Cloud Services", 
            "title": "See also"
        }, 
        {
            "location": "/remoteapp-anyapp/", 
            "text": "Run any Windows app on any device with Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nYou can run a Windows application anywhere on any device, right now, seriously - just by using Azure RemoteApp. Whether it's a custom application written 10 years ago, or an Office app, your users no longer have to be tied to a specific operating system (like Windows XP) for those few applications.\n\n\nWith Azure RemoteApp, your users can also use their own Android or Apple devices and get the same experience they got on Windows (or on Windows Phones). This is accomplished by hosting your Windows application in a collection of Windows virtual machines on Azure - your users can access them from anywhere they have an internet connection. \n\n\nRead on for an example of exactly how to do this.\n\n\nIn this article, we're going to share Access with all of our users. However, you can use ANY app. As long as you can install your app on a Windows Server 2012 R2 computer, you can share it using the steps below. You can review the \napp requirements\n to make sure your app will work.\n\n\nPlease note that because Access is a database, and we want that database to be useful, we will be doing a few extra steps to let users access the Access data share. If your app isn't a database, or you don't need your users to be able to access a file share, you can skip those steps in this tutorial\n\n\n\n\n[AZURE.NOTE] \nYou need an Azure account to complete this tutorial:\n- You can \nopen an Azure account for free\n: You get credits you can use to try out paid Azure services, and even after they're used up you can keep the account and use free Azure services, such as Websites. Your credit card will never be charged, unless you explicitly change your settings and ask to be charged.\n- You can \nactivate MSDN subscriber benefits\n: Your MSDN subscription gives you credits every month that you can use for paid Azure services.\n\n\n\n\nCreate a collection in RemoteApp\n\n\nStart by creating a collection. The collection serves as a container for your apps and users. Each collection is based on an image - you can create your own or use one provided with your subscription. For this tutorial, we're using the Office 2013 trial image - it contains the app that we want to share.\n\n\n\n\nIn the Azure portal, scroll down in the left hand nav tree until you see RemoteApp. Open that page.\n\n\nClick \nCreate a RemoteApp collection\n.\n\n\nClick \nQuick create\n and enter a name for your collection.\n\n\nSelect the region you want to use to create your collection. For the best experience, select the region that is closest geographically to the location where your users will access the app. For example, in this tutorial, the users will be located in Redmond, Washington. The closest Azure region is \nWest US\n.\n\n\nSelect the billing plan you want to use. The basic billing plan puts 16 users on a large Azure VM, while the standard billing plan has 10 users on a large Azure VM. As a general example, the basic plan works great for data entry-type workflow. For a productivity app, like Office, you'd want the standard plan.\n\n\nFinally, select the  Office 2013 Professional image. This image contains Office 2013 apps. Just a reminder - this image is only good for trial collections and POCs. You' can't use this image in a production collection.\n\n\nNow, click \nCreate RemoteApp collection\n.\n\n\n\n\n\n\nThis starts creating your collection, but it can take up to an hour.\n\n\nNow you're ready to add your users.\n\n\nShare the app with users\n\n\nOnce your collection has been created successfully, it\u2019s time to publish Access to users and add the users who should have access to it.\n\n\nIf you have navigated away from the Azure RemoteApp node while the collection was being created, start by making your way back to it from the Azure home page.\n\n\n\n\nClick the collection you created earlier to access additional options and configure the collection.\n\n\n\nOn the \nPublishing\n tab, click \nPublish\n at the bottom of the screen, and then click \nPublish Start menu programs\n.\n\n\n\n\n\nSelect the apps you want to publish from the list. For our purpose, we chose Access. Click \nComplete\n. Wait for the apps to finish publishing.\n\n\n\n\n\n\n\nOnce the app has finished publishing, head over to the \nUser Access\n tab to add all the users that need access to your apps. Enter user names (email address) for your users and then click \nSave\n.\n\n\n\n\n\n\n\n\n\n\nNow, it\u2019s time to tell your users about these new apps and how to access them. To do this, send your users an email pointing them to the Remote Desktop client download URL.\n\n\n\n\n\nConfigure access to Access\n\n\nSome apps need extra configuration after you deploy them through RemoteApp. In particular, for Access, we're going to create a file share on Azure that any user can access. (If you don't want to do that, you can create a \nhybrid collection\n [instead of our cloud collection] that lets your users access files and information on your local network.) Then, we'll need to tell our users to map a local drive on their computer to the Azure file system.\n\n\nThe first part you as the admin do. Then, we have some steps for your users.\n\n\n\n\nStart by publishing the command line interface (cmd.exe). In the \nPublishing\n tab, select \ncmd\n, and then click \nPublish \n Publish program using path\n.\n\n\nEnter the name of the app and the path. For our purpose, use \"File Explorer\" as the name and \"%SYSTEMDRIVE%\\windows\\explorer.exe\" as the path.\n\n\n\nNow you need to create an Azure \nstorage account\n. We named ours \"accessstorage,\" so pick a name that's meaningful to you. (To misquote Highlander, there can be only one \"accessstorage.\")\n\n\n\nNow go back to your dashboard so you can get the path to your storage (endpoint location). You'll use this in a bit, so make sure you copy it somewhere.\n\n\n\nNext, once the storage account has been created, you need the primary access key. Click \nManage access keys\n, and then copy the primary access key.\n\n\n\n\nNow, set the context of the storage account and create a new file share for Access. Run the following cmdlets in an elevated Windows PowerShell window:\n\n\n$ctx=New-AzureStorageContext \naccount name\n \naccount key\n\n$s = New-AzureStorageShare \nshare name\n -Context $ctx\n\n\n\nSo for our share, these are the cmdlets we run:\n\n\n$ctx=New-AzureStorageContext accessstorage \nkey\n\n$s = New-AzureStorageShare \nshare name\n -Context $ctx\n\n\n\n\n\n\n\nNow, it's the user's turn. First, have your users install a \nRemoteApp client\n. Next, the users need to map a drive from their account to that Azure file share you created and add their Access files. This is how they do that:\n\n\n\n\nIn the RemoteApp client, access the published apps. Start the cmd.exe program.\n\n\n\n\nRun the following command to map a drive from your computer to the file share:\n\n\nnet use z: \\\\\naccountname\n.file.core.windows.net\\\nshare name\n /u:\nuser name\n \naccount key\n\n\n\n\nIf you set the \n/persistent\n parameter to yes, the mapped drive will persist across sessions.\n1. Now, launch the File Explorer app from RemoteApp. Copy any Access files you want to use in the shared app to the file share.\n\n\n1. Finally, open Access, and then open the database that you just shared. You should see your data in Access running from the cloud.\n\n\n\n\n\n\n\nNow you can use Access on any of your devices - just make sure you install a RemoteApp client.\n\n\n\n\n\nNext steps\n\n\nNow that you've mastered creating a collection, try creating a \ncollection that uses Office 365\n. Or you can create a \nhybrid collection \nthat can access your local network.", 
            "title": "Run any app on any device"
        }, 
        {
            "location": "/remoteapp-anyapp/#run-any-windows-app-on-any-device-with-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   You can run a Windows application anywhere on any device, right now, seriously - just by using Azure RemoteApp. Whether it's a custom application written 10 years ago, or an Office app, your users no longer have to be tied to a specific operating system (like Windows XP) for those few applications.  With Azure RemoteApp, your users can also use their own Android or Apple devices and get the same experience they got on Windows (or on Windows Phones). This is accomplished by hosting your Windows application in a collection of Windows virtual machines on Azure - your users can access them from anywhere they have an internet connection.   Read on for an example of exactly how to do this.  In this article, we're going to share Access with all of our users. However, you can use ANY app. As long as you can install your app on a Windows Server 2012 R2 computer, you can share it using the steps below. You can review the  app requirements  to make sure your app will work.  Please note that because Access is a database, and we want that database to be useful, we will be doing a few extra steps to let users access the Access data share. If your app isn't a database, or you don't need your users to be able to access a file share, you can skip those steps in this tutorial   [AZURE.NOTE]  You need an Azure account to complete this tutorial:\n- You can  open an Azure account for free : You get credits you can use to try out paid Azure services, and even after they're used up you can keep the account and use free Azure services, such as Websites. Your credit card will never be charged, unless you explicitly change your settings and ask to be charged.\n- You can  activate MSDN subscriber benefits : Your MSDN subscription gives you credits every month that you can use for paid Azure services.", 
            "title": "Run any Windows app on any device with Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-anyapp/#create-a-collection-in-remoteapp", 
            "text": "Start by creating a collection. The collection serves as a container for your apps and users. Each collection is based on an image - you can create your own or use one provided with your subscription. For this tutorial, we're using the Office 2013 trial image - it contains the app that we want to share.   In the Azure portal, scroll down in the left hand nav tree until you see RemoteApp. Open that page.  Click  Create a RemoteApp collection .  Click  Quick create  and enter a name for your collection.  Select the region you want to use to create your collection. For the best experience, select the region that is closest geographically to the location where your users will access the app. For example, in this tutorial, the users will be located in Redmond, Washington. The closest Azure region is  West US .  Select the billing plan you want to use. The basic billing plan puts 16 users on a large Azure VM, while the standard billing plan has 10 users on a large Azure VM. As a general example, the basic plan works great for data entry-type workflow. For a productivity app, like Office, you'd want the standard plan.  Finally, select the  Office 2013 Professional image. This image contains Office 2013 apps. Just a reminder - this image is only good for trial collections and POCs. You' can't use this image in a production collection.  Now, click  Create RemoteApp collection .    This starts creating your collection, but it can take up to an hour.  Now you're ready to add your users.", 
            "title": "Create a collection in RemoteApp"
        }, 
        {
            "location": "/remoteapp-anyapp/#share-the-app-with-users", 
            "text": "Once your collection has been created successfully, it\u2019s time to publish Access to users and add the users who should have access to it.  If you have navigated away from the Azure RemoteApp node while the collection was being created, start by making your way back to it from the Azure home page.   Click the collection you created earlier to access additional options and configure the collection.  On the  Publishing  tab, click  Publish  at the bottom of the screen, and then click  Publish Start menu programs .   Select the apps you want to publish from the list. For our purpose, we chose Access. Click  Complete . Wait for the apps to finish publishing.    Once the app has finished publishing, head over to the  User Access  tab to add all the users that need access to your apps. Enter user names (email address) for your users and then click  Save .      Now, it\u2019s time to tell your users about these new apps and how to access them. To do this, send your users an email pointing them to the Remote Desktop client download URL.", 
            "title": "Share the app with users"
        }, 
        {
            "location": "/remoteapp-anyapp/#configure-access-to-access", 
            "text": "Some apps need extra configuration after you deploy them through RemoteApp. In particular, for Access, we're going to create a file share on Azure that any user can access. (If you don't want to do that, you can create a  hybrid collection  [instead of our cloud collection] that lets your users access files and information on your local network.) Then, we'll need to tell our users to map a local drive on their computer to the Azure file system.  The first part you as the admin do. Then, we have some steps for your users.   Start by publishing the command line interface (cmd.exe). In the  Publishing  tab, select  cmd , and then click  Publish   Publish program using path .  Enter the name of the app and the path. For our purpose, use \"File Explorer\" as the name and \"%SYSTEMDRIVE%\\windows\\explorer.exe\" as the path.  Now you need to create an Azure  storage account . We named ours \"accessstorage,\" so pick a name that's meaningful to you. (To misquote Highlander, there can be only one \"accessstorage.\")  Now go back to your dashboard so you can get the path to your storage (endpoint location). You'll use this in a bit, so make sure you copy it somewhere.  Next, once the storage account has been created, you need the primary access key. Click  Manage access keys , and then copy the primary access key.   Now, set the context of the storage account and create a new file share for Access. Run the following cmdlets in an elevated Windows PowerShell window:  $ctx=New-AzureStorageContext  account name   account key \n$s = New-AzureStorageShare  share name  -Context $ctx  So for our share, these are the cmdlets we run:  $ctx=New-AzureStorageContext accessstorage  key \n$s = New-AzureStorageShare  share name  -Context $ctx    Now, it's the user's turn. First, have your users install a  RemoteApp client . Next, the users need to map a drive from their account to that Azure file share you created and add their Access files. This is how they do that:   In the RemoteApp client, access the published apps. Start the cmd.exe program.   Run the following command to map a drive from your computer to the file share:  net use z: \\\\ accountname .file.core.windows.net\\ share name  /u: user name   account key   If you set the  /persistent  parameter to yes, the mapped drive will persist across sessions.\n1. Now, launch the File Explorer app from RemoteApp. Copy any Access files you want to use in the shared app to the file share. \n1. Finally, open Access, and then open the database that you just shared. You should see your data in Access running from the cloud.    Now you can use Access on any of your devices - just make sure you install a RemoteApp client.", 
            "title": "Configure access to Access"
        }, 
        {
            "location": "/remoteapp-anyapp/#next-steps", 
            "text": "Now that you've mastered creating a collection, try creating a  collection that uses Office 365 . Or you can create a  hybrid collection  that can access your local network.", 
            "title": "Next steps"
        }, 
        {
            "location": "/remoteapp-tutorial-o365anywhere/", 
            "text": "Get the same Office 365 experience on any device with Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nThis article will cover how to deploy Office 365 on any device in your company. Your users can get the same capabilities and UI experience on Android, Apple and Windows.\n\n\nWe will accomplish this using Azure RemoteApp by hosting Office 365 on scale-able virtual machines in Azure that users can connect to. This set of virtual machines we call a \"cloud collection\".\n\n\nCreate a cloud collection\n\n\nFirst after you have created an Azure account, navigate to \nRemoteApp\n by clicking on the link on the left side.\n\n\n\nThen continue by clicking \nnew\n on the bottom and \"quick creating\" a collection. Provide a name, the region, the subscription, the plan and the image \"Office Proffesional 2013\" that we provide.\n\n\n\nOnce you finish the form the collection creation process should start. This may take up to an hour or so.\n\n\n\n\nOnce the process is done, it will look something like this. If we click \nPublishing\n we can see that most Office applications have been published for us already.\n\n\n\n\n\nAt this point you can also add more users that have access to this collection by clicking \nUser Access\n.\n\n\n\nNow let's try out connecting to Office 365!\n\n\nConnect to Office 365\n\n\nWe'll head over to \nhttps://www.remoteapp.windowsazure.com/\n, scroll down  and click \nDownload clients\n to install the Azure RemoteApp client on the device you're on. The screenshots below are for Windows.\n\n\nOnce the application starts you'll be asked to sign in with your Microsoft account (formerly called a \"Live ID\"), use the same one as your Azure account for now. When you're signed in you should see a notification about new invitations, click there and you should see a list like one below. Accept the invitation that matches your Azure account owner email.\n\n\n\n\nWhat it looks like when there are new invitations.\n\n\n\n\nOnce you accept the invitation you should see all the Office apps in the Azure RemoteApp client.\n\n\n\n\nWhen you click on any of these the application should start on the Azure virtual machine and you should be all set! Enjoy!", 
            "title": "Run Office 365 on any device"
        }, 
        {
            "location": "/remoteapp-tutorial-o365anywhere/#get-the-same-office-365-experience-on-any-device-with-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   This article will cover how to deploy Office 365 on any device in your company. Your users can get the same capabilities and UI experience on Android, Apple and Windows.  We will accomplish this using Azure RemoteApp by hosting Office 365 on scale-able virtual machines in Azure that users can connect to. This set of virtual machines we call a \"cloud collection\".", 
            "title": "Get the same Office 365 experience on any device with Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-tutorial-o365anywhere/#create-a-cloud-collection", 
            "text": "First after you have created an Azure account, navigate to  RemoteApp  by clicking on the link on the left side.  Then continue by clicking  new  on the bottom and \"quick creating\" a collection. Provide a name, the region, the subscription, the plan and the image \"Office Proffesional 2013\" that we provide.  Once you finish the form the collection creation process should start. This may take up to an hour or so.   Once the process is done, it will look something like this. If we click  Publishing  we can see that most Office applications have been published for us already.   At this point you can also add more users that have access to this collection by clicking  User Access .  Now let's try out connecting to Office 365!", 
            "title": "Create a cloud collection"
        }, 
        {
            "location": "/remoteapp-tutorial-o365anywhere/#connect-to-office-365", 
            "text": "We'll head over to  https://www.remoteapp.windowsazure.com/ , scroll down  and click  Download clients  to install the Azure RemoteApp client on the device you're on. The screenshots below are for Windows.  Once the application starts you'll be asked to sign in with your Microsoft account (formerly called a \"Live ID\"), use the same one as your Azure account for now. When you're signed in you should see a notification about new invitations, click there and you should see a list like one below. Accept the invitation that matches your Azure account owner email.   What it looks like when there are new invitations.   Once you accept the invitation you should see all the Office apps in the Azure RemoteApp client.   When you click on any of these the application should start on the Azure virtual machine and you should be all set! Enjoy!", 
            "title": "Connect to Office 365"
        }, 
        {
            "location": "/remoteapp-appreqs/", 
            "text": "App requirements\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nAzure RemoteApp supports streaming 32-bit or 64-bit Windows-based applications from a Windows Server 2012 R2 image. Most existing 32-bit or 64-bit Windows-based applications run \"as is\" in Azure RemoteApp (Remote Desktop Services or formerly known as Terminal Services) environment. However, there is a difference between running and running well - some applications function correctly and perform well, while others do not. The following information provides guidance for developing applications in a Remote Desktop Services environment and testing to ensure compatibility.\n\n\nTip: We're working on creating some working examples of apps for you. You'll see new topics that discuss using Microsoft Access, QuickBooks, and App-V in RemoteApp.\n\n\nRequirements\n\n\nThese three requirements, if followed, help your application run well in RemoteApp:\n\n\n\n\nApplications that meet all \nCertification requirements for Windows desktop apps\n and adhere to \nRemote Desktop Services programming guidelines\n will have complete compatibility with RemoteApp.\n\n\nApplications should never store data locally on the image or RemoteApp instances that can be lost.  After you create a RemoteApp collection, the instances are cloned and are stateless and should only contain applications. Store data in an external source or within the user's profile.\n\n\nCustom images should never contain data that can be lost.  \n\n\n\n\nTesting your apps\n\n\nUse these steps to testing applications:\n\n\n\n\nInstall Windows Server 2012 R2 and your application\n\n\nEnable Remote Desktop\n\n\nCreate two user accounts, UserA and UserB, adding both user accounts to the Remote Desktop security group.\n\n\nCheck multi-session compatibility by establishing two simultaneous RDS sessions to the PC while launching the application.\n\n\nValidate app behavior\n\n\n\n\nApplication development guidelines\n\n\nUse the following guidelines for developing applications for RemoteApp.\n\n\nMultiple users\n\n\n\n\nInstalling an \napplication for a single user \ncan create problems in a multiuser environment.\n\n\nApplications should \nstore user-specific information\n in user-specific locations, separately from global information that applies to all users.\n\n\nRemoteApp uses multiple \nnamespaces for kernel objects\n; a global namespace is used primarily by services in client/server applications.\n\n\nIt is not safe to assume that the computer name or the \nIP address\n assigned to the computer are associated with a single user because multiple users can be logged on simultaneously to a Remote Desktop Session Host (RD Session Host) server.\n\n\n\n\nPerformance\n\n\n\n\nDisable \ngraphic effects\n before you add your app to RemoteApp.\n\n\nTo maximize CPU availability for all users, either disable \nbackground tasks \n or create efficient background tasks that are not resource-intensive.\n\n\nYou should tune and balance application \nthread usage\n for a multiuser, multiprocessor environment.\n\n\nTo optimize performance, it is good practice for applications to \ndetect\n whether they are running in a client session.", 
            "title": "App requirements"
        }, 
        {
            "location": "/remoteapp-appreqs/#app-requirements", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   Azure RemoteApp supports streaming 32-bit or 64-bit Windows-based applications from a Windows Server 2012 R2 image. Most existing 32-bit or 64-bit Windows-based applications run \"as is\" in Azure RemoteApp (Remote Desktop Services or formerly known as Terminal Services) environment. However, there is a difference between running and running well - some applications function correctly and perform well, while others do not. The following information provides guidance for developing applications in a Remote Desktop Services environment and testing to ensure compatibility.  Tip: We're working on creating some working examples of apps for you. You'll see new topics that discuss using Microsoft Access, QuickBooks, and App-V in RemoteApp.", 
            "title": "App requirements"
        }, 
        {
            "location": "/remoteapp-appreqs/#requirements", 
            "text": "These three requirements, if followed, help your application run well in RemoteApp:   Applications that meet all  Certification requirements for Windows desktop apps  and adhere to  Remote Desktop Services programming guidelines  will have complete compatibility with RemoteApp.  Applications should never store data locally on the image or RemoteApp instances that can be lost.  After you create a RemoteApp collection, the instances are cloned and are stateless and should only contain applications. Store data in an external source or within the user's profile.  Custom images should never contain data that can be lost.", 
            "title": "Requirements"
        }, 
        {
            "location": "/remoteapp-appreqs/#testing-your-apps", 
            "text": "Use these steps to testing applications:   Install Windows Server 2012 R2 and your application  Enable Remote Desktop  Create two user accounts, UserA and UserB, adding both user accounts to the Remote Desktop security group.  Check multi-session compatibility by establishing two simultaneous RDS sessions to the PC while launching the application.  Validate app behavior", 
            "title": "Testing your apps"
        }, 
        {
            "location": "/remoteapp-appreqs/#application-development-guidelines", 
            "text": "Use the following guidelines for developing applications for RemoteApp.", 
            "title": "Application development guidelines"
        }, 
        {
            "location": "/remoteapp-appreqs/#multiple-users", 
            "text": "Installing an  application for a single user  can create problems in a multiuser environment.  Applications should  store user-specific information  in user-specific locations, separately from global information that applies to all users.  RemoteApp uses multiple  namespaces for kernel objects ; a global namespace is used primarily by services in client/server applications.  It is not safe to assume that the computer name or the  IP address  assigned to the computer are associated with a single user because multiple users can be logged on simultaneously to a Remote Desktop Session Host (RD Session Host) server.", 
            "title": "Multiple users"
        }, 
        {
            "location": "/remoteapp-appreqs/#performance", 
            "text": "Disable  graphic effects  before you add your app to RemoteApp.  To maximize CPU availability for all users, either disable  background tasks   or create efficient background tasks that are not resource-intensive.  You should tune and balance application  thread usage  for a multiuser, multiprocessor environment.  To optimize performance, it is good practice for applications to  detect  whether they are running in a client session.", 
            "title": "Performance"
        }, 
        {
            "location": "/remoteapp-onedrive/", 
            "text": "OneDrive for Business and Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nThe OneDrive for Business sync agent is not supported with Azure RemoteApp.\n\n\nYou can include OneDrive for Business inside a collection for use with Office 365.", 
            "title": "OneDrive for Business"
        }, 
        {
            "location": "/remoteapp-onedrive/#onedrive-for-business-and-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   The OneDrive for Business sync agent is not supported with Azure RemoteApp.  You can include OneDrive for Business inside a collection for use with Office 365.", 
            "title": "OneDrive for Business and Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-sql/", 
            "text": "SQL Azure with Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nOften when customers choose to host their Windows applications in the cloud with Azure RemoteApp they also want to migrate their data such as SQL servers into the cloud for an entire cloud deployment. This allows for entire cloud hosted solution that can be accessed anytime by any device anywhere using Azure RemoteApp. Below are links and references along with guidance to help you with this process.  \n\n\nMigrate your SQL data\n\n\nStart with \nMigrating a SQL Server database to Azure SQL Database\n. \n\n\nConfigure Azure RemoteApp\n\n\nHost your Windows application in Azure RemoteApp. Below is a very high level step-by-step:\n\n\n\n\nCreate the \nAzure RemoteApp template VM\n. \n\n\nInstall the required application on the VM.\n\n\nConfigure the application so it connects to the SQL DB and confirm that it works.\n\n\nSysprep and shutdown the VM. Capture this as an image for use with Azure. \nNote:\n You will need to ensure that the application is able to retain the DB connectivity information through the sysprep process. If the application is unable to retain the DB connection information, you might want to engage the vendor of the application to check how we can specify the connection string.\n\n\nImport the custom image into your Azure RemoteApp library selecting the proper geographical location that your SQL Azure deployment resides. \n\n\nDeploy a RemoteApp collection in the same data center as your SQL Azure deployment using the above template and publish the application. Deploying Azure RemoteApp in the same data center as your SQL Azure deployment helps ensure the fastest connection speeds and reduce latency. \n\n\n\n\nApp and SQL configuration considerations:\n\n\nThere are a few points to consider when using Azure SQL with RemoteApp:\n\n\nLearn \nhow to configure an Azure SQL database firewall\n. An excerpt from the article states, \u201cInitially, all access to your Azure SQL Database server is blocked by the firewall. In order to begin using your Azure SQL Database server, you must go to the Classic Portal and specify one or more server-level firewall rules that enable access to your Azure SQL Database server. Use the firewall rules to specify which IP address ranges from the Internet are allowed, and whether or not Azure applications can attempt to connect to your Azure SQL Database server.\u201d\n\n\nAlso, when a computer attempts to connect to your database server from the Internet, the firewall checks the originating IP address of the request against the full set of server-level and (if required) database-level firewall rules. \u201cIf the IP address of the request is within one of the ranges specified in the server-level firewall rules, the connection is granted to your Azure SQL Database server.\u201d Hence, we can make use of IP Ranges and not just individual source IP addresses.\n\n\nFollow the step by step instructions in \nHow to: Configure firewall settings on SQL Database using the Azure Portal\n to specify the IP range. When you are configuring the SQL Firewall rules, please provide the IP range of the subnet that is specified for the Azure RemoteApp collection. This should allow the ARA servers to connect to the SQL DB even though they will have dynamically-assigned IP Addresses.\n\n\nTroubleshooting\n\n\nIf the experience of using a client application hosted in Azure RemoteApp that connects to a SQL database where hosted on Azure or on-premises is slow there could be a few reasons why.  \n\n\n\n\nNetwork latency from your device to Azure is high. Move to the best and fastest network connection you can for best performance. Use \nazurespeed.com\n as a general tool to test your devices latency to Azure data center.  \n\n\nClient app hosted in Azure RemoteApp is under stress. Selecting a different billing plan such as Premium billing will improve performance. Another trick is to monitor the resources your application is consuming: during an active session perform a ctrl-alt-end key sequence which will launch the SAS screen, select Task Manager and observe resource utilization for your app.\n\n\nSQL server is under stress or not optimized. Follow SQL guidance for troubleshooting.", 
            "title": "SQL Azure"
        }, 
        {
            "location": "/remoteapp-sql/#sql-azure-with-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   Often when customers choose to host their Windows applications in the cloud with Azure RemoteApp they also want to migrate their data such as SQL servers into the cloud for an entire cloud deployment. This allows for entire cloud hosted solution that can be accessed anytime by any device anywhere using Azure RemoteApp. Below are links and references along with guidance to help you with this process.", 
            "title": "SQL Azure with Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-sql/#migrate-your-sql-data", 
            "text": "Start with  Migrating a SQL Server database to Azure SQL Database .", 
            "title": "Migrate your SQL data"
        }, 
        {
            "location": "/remoteapp-sql/#configure-azure-remoteapp", 
            "text": "Host your Windows application in Azure RemoteApp. Below is a very high level step-by-step:   Create the  Azure RemoteApp template VM .   Install the required application on the VM.  Configure the application so it connects to the SQL DB and confirm that it works.  Sysprep and shutdown the VM. Capture this as an image for use with Azure.  Note:  You will need to ensure that the application is able to retain the DB connectivity information through the sysprep process. If the application is unable to retain the DB connection information, you might want to engage the vendor of the application to check how we can specify the connection string.  Import the custom image into your Azure RemoteApp library selecting the proper geographical location that your SQL Azure deployment resides.   Deploy a RemoteApp collection in the same data center as your SQL Azure deployment using the above template and publish the application. Deploying Azure RemoteApp in the same data center as your SQL Azure deployment helps ensure the fastest connection speeds and reduce latency.", 
            "title": "Configure Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-sql/#app-and-sql-configuration-considerations", 
            "text": "There are a few points to consider when using Azure SQL with RemoteApp:  Learn  how to configure an Azure SQL database firewall . An excerpt from the article states, \u201cInitially, all access to your Azure SQL Database server is blocked by the firewall. In order to begin using your Azure SQL Database server, you must go to the Classic Portal and specify one or more server-level firewall rules that enable access to your Azure SQL Database server. Use the firewall rules to specify which IP address ranges from the Internet are allowed, and whether or not Azure applications can attempt to connect to your Azure SQL Database server.\u201d  Also, when a computer attempts to connect to your database server from the Internet, the firewall checks the originating IP address of the request against the full set of server-level and (if required) database-level firewall rules. \u201cIf the IP address of the request is within one of the ranges specified in the server-level firewall rules, the connection is granted to your Azure SQL Database server.\u201d Hence, we can make use of IP Ranges and not just individual source IP addresses.  Follow the step by step instructions in  How to: Configure firewall settings on SQL Database using the Azure Portal  to specify the IP range. When you are configuring the SQL Firewall rules, please provide the IP range of the subnet that is specified for the Azure RemoteApp collection. This should allow the ARA servers to connect to the SQL DB even though they will have dynamically-assigned IP Addresses.", 
            "title": "App and SQL configuration considerations:"
        }, 
        {
            "location": "/remoteapp-sql/#troubleshooting", 
            "text": "If the experience of using a client application hosted in Azure RemoteApp that connects to a SQL database where hosted on Azure or on-premises is slow there could be a few reasons why.     Network latency from your device to Azure is high. Move to the best and fastest network connection you can for best performance. Use  azurespeed.com  as a general tool to test your devices latency to Azure data center.    Client app hosted in Azure RemoteApp is under stress. Selecting a different billing plan such as Premium billing will improve performance. Another trick is to monitor the resources your application is consuming: during an active session perform a ctrl-alt-end key sequence which will launch the SAS screen, select Task Manager and observe resource utilization for your app.  SQL server is under stress or not optimized. Follow SQL guidance for troubleshooting.", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/remoteapp-o365/", 
            "text": "Using Office with Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nYou have two choices for hosting Office applications in Azure RemoteApp: Office 365 ProPlus or Office 2013 Professional Plus Trial.\n\n\nHey, did you know we have a new, better article that will soon replace this? Check out \nHow to use your Office 365 subscription with Azure RemoteApp\n. It covers all the info you need for using Office 365 + Azure RemoteApp.\n\n\nOffice 365 ProPlus\n\n\nYou can create a RemoteApp collection using the Office 365 ProPlus template image. This option allows you to extend your Office 365 service to RemoteApp. You must have an existing subscription plan and your users must be licensed for the Office 365 ProPlus service, either standalone or through the Office 365 service plans.\n\n\nRemoteApp supports Office 365 Shared Computer Activation. When you enable Shared Computer Activation, and use the \nOffice Deployment tool\n for installation, Office 365 ProPlus installs without being activated. When a user signs into a collection that contains Office 365, Office checks to see if the user has been provisioned for Office 365 ProPlus. If so, Office temporarily activates Office 365 ProPlus - this activation persists until that users signs out of the service.\n\n\nTo use Office 365 Shared Computer Activation, you need to create a \ncustom template\n and install Office 365 ProPlus there, following \nthese directions\n.\n\n\nYou can manage your users\u2019 Office 365 licenses at the \nOffice 365 Admin Portal\n. Read more information about \nOffice 365 service plans\n.  \n\n\nOffice 2013 Professional Plus Trial\n\n\nDuring a 30-day trial of RemoteApp, you can use the Office 2013 Professional Plus (trial) template image to create a RemoteApp collection. You can assign users to this trial collection using their Azure Active Directory work accounts or Microsoft accounts. No additional subscription is required.\n\n\nThis is a great option to kick the tires and get a good feeling for Office in RemoteApp. However, this option is intended for evaluation and testing only. RemoteApp collections created using the Office 2013 Professional Plus (trial) template image cannot be transitioned to production mode and will be disabled at the end of the trial period.\n\n\nSwitching from trial to production\n\n\nWhen you start your 30-day free trial, a note in the RemoteApp section of the portal will tell you how long you have left in the trial before you need to transition to a paid account. You can activate your account and switch to production mode using the link in this note.\n\n\nWhen you activate your account, this will affect all the RemoteApp collections in your account.\n\n\n\n\nCollections that are running with the Windows Server 2012 R2 or the Office 365 ProPlus template images will transition to production seamlessly. All user data and settings, including ongoing sessions, remain intact.\n\n\nIf you have uploaded custom template images, collections using those images will also transition seamlessly.\n\n\nThe Office 2013 Professional Plus (Trial) template image is intended for evaluation only. Collections running with this template image cannot be transitioned to production. They will be put in \u201cdisabled\u201d state.\n\n\n\n\nIf you do not transition to production mode by the expiration of your trial, your RemoteApp collections will be disabled. Don't worry - Your settings and users\u2019 data are saved for another 90 days, so you can still activate your service and switch to production mode without any data loss.", 
            "title": "Office 365"
        }, 
        {
            "location": "/remoteapp-o365/#using-office-with-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   You have two choices for hosting Office applications in Azure RemoteApp: Office 365 ProPlus or Office 2013 Professional Plus Trial.  Hey, did you know we have a new, better article that will soon replace this? Check out  How to use your Office 365 subscription with Azure RemoteApp . It covers all the info you need for using Office 365 + Azure RemoteApp.", 
            "title": "Using Office with Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-o365/#office-365-proplus", 
            "text": "You can create a RemoteApp collection using the Office 365 ProPlus template image. This option allows you to extend your Office 365 service to RemoteApp. You must have an existing subscription plan and your users must be licensed for the Office 365 ProPlus service, either standalone or through the Office 365 service plans.  RemoteApp supports Office 365 Shared Computer Activation. When you enable Shared Computer Activation, and use the  Office Deployment tool  for installation, Office 365 ProPlus installs without being activated. When a user signs into a collection that contains Office 365, Office checks to see if the user has been provisioned for Office 365 ProPlus. If so, Office temporarily activates Office 365 ProPlus - this activation persists until that users signs out of the service.  To use Office 365 Shared Computer Activation, you need to create a  custom template  and install Office 365 ProPlus there, following  these directions .  You can manage your users\u2019 Office 365 licenses at the  Office 365 Admin Portal . Read more information about  Office 365 service plans .", 
            "title": "Office 365 ProPlus"
        }, 
        {
            "location": "/remoteapp-o365/#office-2013-professional-plus-trial", 
            "text": "During a 30-day trial of RemoteApp, you can use the Office 2013 Professional Plus (trial) template image to create a RemoteApp collection. You can assign users to this trial collection using their Azure Active Directory work accounts or Microsoft accounts. No additional subscription is required.  This is a great option to kick the tires and get a good feeling for Office in RemoteApp. However, this option is intended for evaluation and testing only. RemoteApp collections created using the Office 2013 Professional Plus (trial) template image cannot be transitioned to production mode and will be disabled at the end of the trial period.", 
            "title": "Office 2013 Professional Plus Trial"
        }, 
        {
            "location": "/remoteapp-o365/#switching-from-trial-to-production", 
            "text": "When you start your 30-day free trial, a note in the RemoteApp section of the portal will tell you how long you have left in the trial before you need to transition to a paid account. You can activate your account and switch to production mode using the link in this note.  When you activate your account, this will affect all the RemoteApp collections in your account.   Collections that are running with the Windows Server 2012 R2 or the Office 365 ProPlus template images will transition to production seamlessly. All user data and settings, including ongoing sessions, remain intact.  If you have uploaded custom template images, collections using those images will also transition seamlessly.  The Office 2013 Professional Plus (Trial) template image is intended for evaluation only. Collections running with this template image cannot be transitioned to production. They will be put in \u201cdisabled\u201d state.   If you do not transition to production mode by the expiration of your trial, your RemoteApp collections will be disabled. Don't worry - Your settings and users\u2019 data are saved for another 90 days, so you can still activate your service and switch to production mode without any data loss.", 
            "title": "Switching from trial to production"
        }, 
        {
            "location": "/remoteapp-outlook/", 
            "text": "Using Microsoft Outlook in Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nAzure RemoteApp supports Microsoft Outlook O365. Read more about how \nOffice works in Azure RemoteApp\n. There are a few recommended settings for Outlook when used in Azure RemoteApp.\n\n\nCached mode\n\n\nCached mode is a recommended configuration when using Outlook in Azure RemoteApp. When you configure an Outlook 2013 account to use Cached Exchange Mode, Outlook 2013 works from a local copy of the user's Microsoft Exchange mailbox that is stored in an offline data file (OST file) on the user's computer, together with the Offline Address Book (OAB). The cached mailbox and OAB are updated periodically from the O365 service. Read more about \nthe differences between cached and online mode\n.\n\n\nThe user can select \nCached Exchange Mode\n or \nOnline Mode\n during account setup or by changing the account settings. You can also deploy one mode or the other by using the Office Customization Tool (OCT) or Group Policy.  \n\n\nRead \nstep by step instructions on enabling cached mode\n.\n\n\nSearch\n\n\nIn Azure RemoteApp, using search within Outlook has limitations. Azure RemoteApp uses pooled VMs to accommodate user sessions. Search indexing depends on the machine ID, which is different for different VMs. It is possible that every time a user logs into Azure RemoteApp, they are directed to a new VM. That would mean, if we enable local search, the indexer will run every time the machine ID changes (when the user is on a different VM). Depending on the size of the .OST file, the indexer could take a long time to complete and use up resources needed for other apps. Search would not only be slow but might not produce results. Using an Online Mode account profile would work around this, but overall performance would suffer due to the lack of a local cache (see the link above for more information about the difference between cached and online mode). Unfortunately, indexed/local search cannot be disabled and online search cannot be enabled by default in Outlook 2013.\n\n\nOutlook 2016 has a solution to tackle this in cached mode by providing a new service search experience for mailboxes hosted on Exchange 2016 (or hosted in Office 365). This uses service search results against the local cache (OST). Outlook might fall back to using the local search indexer in some scenarios, but most searches would use this new service search feature. The recommendation from Azure RemoteApp would be to use Outlook 2016 if mail search is a very important scenario.", 
            "title": "Outlook 2013"
        }, 
        {
            "location": "/remoteapp-outlook/#using-microsoft-outlook-in-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   Azure RemoteApp supports Microsoft Outlook O365. Read more about how  Office works in Azure RemoteApp . There are a few recommended settings for Outlook when used in Azure RemoteApp.", 
            "title": "Using Microsoft Outlook in Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-outlook/#cached-mode", 
            "text": "Cached mode is a recommended configuration when using Outlook in Azure RemoteApp. When you configure an Outlook 2013 account to use Cached Exchange Mode, Outlook 2013 works from a local copy of the user's Microsoft Exchange mailbox that is stored in an offline data file (OST file) on the user's computer, together with the Offline Address Book (OAB). The cached mailbox and OAB are updated periodically from the O365 service. Read more about  the differences between cached and online mode .  The user can select  Cached Exchange Mode  or  Online Mode  during account setup or by changing the account settings. You can also deploy one mode or the other by using the Office Customization Tool (OCT) or Group Policy.    Read  step by step instructions on enabling cached mode .", 
            "title": "Cached mode"
        }, 
        {
            "location": "/remoteapp-outlook/#search", 
            "text": "In Azure RemoteApp, using search within Outlook has limitations. Azure RemoteApp uses pooled VMs to accommodate user sessions. Search indexing depends on the machine ID, which is different for different VMs. It is possible that every time a user logs into Azure RemoteApp, they are directed to a new VM. That would mean, if we enable local search, the indexer will run every time the machine ID changes (when the user is on a different VM). Depending on the size of the .OST file, the indexer could take a long time to complete and use up resources needed for other apps. Search would not only be slow but might not produce results. Using an Online Mode account profile would work around this, but overall performance would suffer due to the lack of a local cache (see the link above for more information about the difference between cached and online mode). Unfortunately, indexed/local search cannot be disabled and online search cannot be enabled by default in Outlook 2013.  Outlook 2016 has a solution to tackle this in cached mode by providing a new service search experience for mailboxes hosted on Exchange 2016 (or hosted in Office 365). This uses service search results against the local cache (OST). Outlook might fall back to using the local search indexer in some scenarios, but most searches would use this new service search feature. The recommendation from Azure RemoteApp would be to use Outlook 2016 if mail search is a very important scenario.", 
            "title": "Search"
        }, 
        {
            "location": "/remoteapp-appv/", 
            "text": "Using App-V apps in Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nYou can use App-V applications in a Azure RemoteApp hybrid collection, which requires domain join.\n\n\nBefore you get started, make sure to install the App-V 5.1 client with the latest updates. You will need to create a \ncustom image\n that includes the App-V client.  \n\n\nIt\u2019s easy to use your existing App-V infrastructure with Azure RemoteApp. Since a hybrid collection is deployed into an Azure VNET that has access to your domain controller and the VMs are domain joined, you can leverage your existing App-v infrastructure and deployment methods to easyily host App-V application in Azure RemoteApp. Here are some considerations that you should be aware of based on the type of App-V deployment you currently have:\n\n\n\n\n\n\n\n\nConfiguration options\n\n\n\n\nPositive\n\n\nNegative\n\n\n\n\n\n\n\n\n\n\nDelivery method\n\n\nStreaming (on-demand)\n\n\nApp is always the latest and fresh\n\n\nFirst time latency\n\n\n\n\n\n\n\n\nMounted\n\n\nFastest; app is already present on the VM\n\n\nBloat - takes up image space (127 GB limit)\n\n\n\n\n\n\nApp location storage\n\n\nShared content\n\n\nApp runs in memory of Azure RemoteApp instance\n\n\nEats memory and good connection to streaming (file) server where the app resides\n\n\n\n\n\n\n\n\nDisk (Cached)\n\n\nFast execution. App not dependent on availability of Content Source\n\n\nBloat - takes up image space (127 GB limit)\n\n\n\n\n\n\nTargeting\n\n\nUser\n\n\nRequires full standalone App-V infrastructure\n\n\n\n\n\n\n\n\n\n\nGlobal (machine)\n\n\nPre-publish or target using Publishing server\n\n\nNeed to update your Azure image if you want to update the app (huge). Takes up some space on image.\n\n\n\n\n\n\n\n\nAfter you create your custom image and your hybrid collection, publish your application, assign users and enjoy your existing App-V applications hosted in Azure RemoteApp delivered to any device anywhere.", 
            "title": "Using App-V apps"
        }, 
        {
            "location": "/remoteapp-appv/#using-app-v-apps-in-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   You can use App-V applications in a Azure RemoteApp hybrid collection, which requires domain join.  Before you get started, make sure to install the App-V 5.1 client with the latest updates. You will need to create a  custom image  that includes the App-V client.    It\u2019s easy to use your existing App-V infrastructure with Azure RemoteApp. Since a hybrid collection is deployed into an Azure VNET that has access to your domain controller and the VMs are domain joined, you can leverage your existing App-v infrastructure and deployment methods to easyily host App-V application in Azure RemoteApp. Here are some considerations that you should be aware of based on the type of App-V deployment you currently have:     Configuration options   Positive  Negative      Delivery method  Streaming (on-demand)  App is always the latest and fresh  First time latency     Mounted  Fastest; app is already present on the VM  Bloat - takes up image space (127 GB limit)    App location storage  Shared content  App runs in memory of Azure RemoteApp instance  Eats memory and good connection to streaming (file) server where the app resides     Disk (Cached)  Fast execution. App not dependent on availability of Content Source  Bloat - takes up image space (127 GB limit)    Targeting  User  Requires full standalone App-V infrastructure      Global (machine)  Pre-publish or target using Publishing server  Need to update your Azure image if you want to update the app (huge). Takes up some space on image.     After you create your custom image and your hybrid collection, publish your application, assign users and enjoy your existing App-V applications hosted in Azure RemoteApp delivered to any device anywhere.", 
            "title": "Using App-V apps in Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-quickbooks/", 
            "text": "How do you deploy QuickBooks in Azure RemoteApp?\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nUse the following information to share QuickBooks as an app in Azure RemoteApp.\n\n\nYou can share QuickBooks 2015 Enterprise with Azure RemoteApp in either a hybrid or cloud collection. The company file must reside on a VM that is running QuickBooks database server that is separate from the Azure RemoteApp servers. Never store the company file on your Azure RemoteApp image - data loss is expected if you do this. Only QuickBooks Enterprise supports hosting the QuickBooks file on an external share with QuickBooks database server accessible via standard Windows networking.   \n\n\n\n\n[AZURE.IMPORTANT] The QuickBooks database server that is hosting the company file must reside on a separate VM within the same VNET as the Azure RemoteApp collection.  \n\n\n\n\nSteps to deploy QuickBooks\n\n\n\n\nCreate an Azure VM and install QuickBooks, QuickBooks database server, and place the company file on a Azure VM.  Make sure to properly configure firewall rules.\n\n\nInstall QuickBooks on a \ncustom image\n and create an \nAzure RemoteApp collection\n, either cloud or hybrid, within the exact same VNET where the VM hosting the QuickBooks database server with company files resides. \n\n\nPublish\n QuickBooks app to users\n\n\nLaunch the Azure RemoteApp-hosted QuickBooks client, navigate using standard Windows networking to the VM hosting the QuickBooks database server and open the company file. \n\n\n\n\nDocumentation references\n\n\n\n\nQuickBooks \nsupported configurations\n\n\nQuickBooks \ndeployment options\n\n\n\n\nYou can also check out my Ignite presentation, \nFundamentals of Microsoft Azure RemoteApp Management and Administration\n - fast-forward to 1:02:45 to get to the QuickBooks part.\n\n\nDeployment architecture", 
            "title": "QuickBooks on Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-quickbooks/#how-do-you-deploy-quickbooks-in-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   Use the following information to share QuickBooks as an app in Azure RemoteApp.  You can share QuickBooks 2015 Enterprise with Azure RemoteApp in either a hybrid or cloud collection. The company file must reside on a VM that is running QuickBooks database server that is separate from the Azure RemoteApp servers. Never store the company file on your Azure RemoteApp image - data loss is expected if you do this. Only QuickBooks Enterprise supports hosting the QuickBooks file on an external share with QuickBooks database server accessible via standard Windows networking.      [AZURE.IMPORTANT] The QuickBooks database server that is hosting the company file must reside on a separate VM within the same VNET as the Azure RemoteApp collection.", 
            "title": "How do you deploy QuickBooks in Azure RemoteApp?"
        }, 
        {
            "location": "/remoteapp-quickbooks/#steps-to-deploy-quickbooks", 
            "text": "Create an Azure VM and install QuickBooks, QuickBooks database server, and place the company file on a Azure VM.  Make sure to properly configure firewall rules.  Install QuickBooks on a  custom image  and create an  Azure RemoteApp collection , either cloud or hybrid, within the exact same VNET where the VM hosting the QuickBooks database server with company files resides.   Publish  QuickBooks app to users  Launch the Azure RemoteApp-hosted QuickBooks client, navigate using standard Windows networking to the VM hosting the QuickBooks database server and open the company file.", 
            "title": "Steps to deploy QuickBooks"
        }, 
        {
            "location": "/remoteapp-quickbooks/#documentation-references", 
            "text": "QuickBooks  supported configurations  QuickBooks  deployment options   You can also check out my Ignite presentation,  Fundamentals of Microsoft Azure RemoteApp Management and Administration  - fast-forward to 1:02:45 to get to the QuickBooks part.", 
            "title": "Documentation references"
        }, 
        {
            "location": "/remoteapp-quickbooks/#deployment-architecture", 
            "text": "", 
            "title": "Deployment architecture"
        }, 
        {
            "location": "/remoteapp-secure/", 
            "text": "Secure apps and resources in Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nAzure RemoteApp provides users access to centrally-managed Windows apps, which lets you control what your users can and can't do.  This is particularly useful when the user is connecting from an unmanaged device (like their personal Macbook) and you want to control the user access or experience.\n\n\nFor example, if you are using Active Directory for user authentication and you want to prevent your users from copying data out of an app, you can configure a Remote Desktop Group Policy to block users from copying data.\n\n\nAnother example is if you want to block internet access for a particular app in your collection. You can create a Windows Firewall rule that blocks the access when you create the image for your collection.\n\n\nImplementation options\n\n\nHere are the key implementation options, which can be used individually or in tandem as needed:\n\n\n\n\nIf your RemoteApp collection is domain joined you can enforce any \nGroup Policy\n (with the exception of the Idle and Disconnect timeout policies described \nhere\n).\n\n\nAs an alternative to Group Policy (if your collection is not domain joined or you don't have the right privileges in AD), you can configure \nLocal Polices\n into your template image.  Note that group polices trump local policies when there is a conflict.\n\n\nSome OS/app settings are not configurable via policy, but can be via registry key using the \nRegEdit tool\n while configuring your template image.\n\n\nYou can use \nWindows Firewall\n to control network access to and from the machine where the app is running. Just make sure you don't block the URLs and ports defined here.\n\n\nYou can use \nAppLocker\n to control which applications and files users can run. For example, savvy users can figure out how to run applications that you did not publish but that are available in the image you used to create the collection - AppLocker can block this.\n\n\n\n\nDetailed information\n\n\n\n\nThe following RDS policies are likely to be most useful:\n\n\nDevice and Resource Redirection\n\n\nPrinter Redirection\n\n\nProfiles\n.\n\n\n\n\n\n\nNote that configuring redirections via the RemoteApp PowerShell module (as seen \nhere\n) relies on the client machine to enforce the policy, so if security is the primary objective you'll want to enforce the policy via the template image local policy or via group policy.\n\n\nWindows Server 2012 R2 policies\n.\n\n\nOffice 2013 polices\n (including \nhow to customize the Office toolbar\n).", 
            "title": "Secure apps and resources"
        }, 
        {
            "location": "/remoteapp-secure/#secure-apps-and-resources-in-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   Azure RemoteApp provides users access to centrally-managed Windows apps, which lets you control what your users can and can't do.  This is particularly useful when the user is connecting from an unmanaged device (like their personal Macbook) and you want to control the user access or experience.  For example, if you are using Active Directory for user authentication and you want to prevent your users from copying data out of an app, you can configure a Remote Desktop Group Policy to block users from copying data.  Another example is if you want to block internet access for a particular app in your collection. You can create a Windows Firewall rule that blocks the access when you create the image for your collection.", 
            "title": "Secure apps and resources in Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-secure/#implementation-options", 
            "text": "Here are the key implementation options, which can be used individually or in tandem as needed:   If your RemoteApp collection is domain joined you can enforce any  Group Policy  (with the exception of the Idle and Disconnect timeout policies described  here ).  As an alternative to Group Policy (if your collection is not domain joined or you don't have the right privileges in AD), you can configure  Local Polices  into your template image.  Note that group polices trump local policies when there is a conflict.  Some OS/app settings are not configurable via policy, but can be via registry key using the  RegEdit tool  while configuring your template image.  You can use  Windows Firewall  to control network access to and from the machine where the app is running. Just make sure you don't block the URLs and ports defined here.  You can use  AppLocker  to control which applications and files users can run. For example, savvy users can figure out how to run applications that you did not publish but that are available in the image you used to create the collection - AppLocker can block this.", 
            "title": "Implementation options"
        }, 
        {
            "location": "/remoteapp-secure/#detailed-information", 
            "text": "The following RDS policies are likely to be most useful:  Device and Resource Redirection  Printer Redirection  Profiles .    Note that configuring redirections via the RemoteApp PowerShell module (as seen  here ) relies on the client machine to enforce the policy, so if security is the primary objective you'll want to enforce the policy via the template image local policy or via group policy.  Windows Server 2012 R2 policies .  Office 2013 polices  (including  how to customize the Office toolbar ).", 
            "title": "Detailed information"
        }, 
        {
            "location": "/remoteapp-collections/", 
            "text": "What kind of collection do you need for Azure RemoteApp?\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nAzure RemoteApp lets you share apps and resources with users on any device. We do this by creating collections to hold the apps and resources, and then you share those collections with users. There are 2 different collection options, with different network and authentication options - which is right for you?\n\n\nLet's walk through the different considerations and choices you need to make to get the most out of your Azure RemoteApp collection. \n\n\nQuick differences between the collection types\n\n\n\n\n\n\n\n\n\n\nCloud\n\n\nHybrid\n\n\n\n\n\n\n\n\n\n\nUse an existing VNET\n\n\nYes\n\n\nYes\n\n\n\n\n\n\nRequires AD-connected accounts (DirSync)\n\n\nNo\n\n\nYes\n\n\n\n\n\n\nRequires domain join\n\n\nNo\n\n\nYes\n\n\n\n\n\n\nRequires domain controller accessible to VNET\n\n\nNo\n\n\nYes\n\n\n\n\n\n\n\n\nCloud collections\n\n\n\n\nQuick to create - the collection is quickly provisioned, meaning your apps get to users quicker.\n\n\nBring your own apps or share ours. You can use a custom image (built from an Azure VM) or one of the images included with your subscription.\n\n\nYou don't need to configure a connection between your collection and your on-premises domain.\n\n\nBut you can optionally use your own Azure VNET to provide access into your on-premises environment for data sharing or to use non-Windows authentication into resources like SQL Server (using database authentication).\n\n\n\n\nOk, how do I create one?\n\n\n\n\nCloud only? Create with the \nQuick Create\n option in the portal.\n\n\nCloud + VNET? Create using the \nCreate with VNET\n option but do NOT choose to join a domain.\n\n\n\n\nHybrid collections\n\n\n\n\nProvide full access to on-premises network + Azure VNET.\n\n\nIncludes domain join access for apps and data. Remote applications can authentication against your on-premises Active Directory - they can then access resources in your domain.\n\n\nEnable advanced monitoring and management with existing System Center solutions and Windows Group Policies (through a custom image built on Windows Server 2012 R2)\n\n\nSupport \nExpressRoute\n to connect your Azure VNET to your local VNET.\n\n\n\n\nCreate using the \nCreate with VNET\n option and DO choose to join a domain.\n\n\nAuthentication options\n\n\nAzure RemoteApp supports both Microsoft accounts and Azure Active Directory accounts, but not all collections support all methods. \n\n\n\n\n\n\n\n\nAccount type\n\n\n\n\nCloud\n\n\nCloud + VNET\n\n\nHybrid\n\n\n\n\n\n\n\n\n\n\nMicrosoft Account\n\n\n\n\nYes\n\n\nYes\n\n\nNo\n\n\n\n\n\n\nAzure Active Directory (Azure AD)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAzure AD only\n\n\nYes\n\n\nYes\n\n\nNo\n\n\n\n\n\n\n\n\nAD Connect with password sync\n\n\nYes\n\n\nYes\n\n\nYes\n\n\n\n\n\n\n\n\nAD Connect without password sync\n\n\nYes\n\n\nYes\n\n\nNo\n\n\n\n\n\n\n\n\nAD Connect with AD FS\n\n\nYes\n\n\nYes\n\n\nYes\n\n\n\n\n\n\n\n\n3rd-party Azure-supported identity providers (such as Ping)\n\n\nYes\n\n\nYes\n\n\nYes\n\n\n\n\n\n\nMulti-Factor Authentication\n\n\n\n\nYes\n\n\nYes\n\n\nYes\n\n\n\n\n\n\n\n\nCloud and Cloud + VNET\n\n\nWith cloud collections, you can use Microsoft accounts, Azure AD accounts, or a mix of the two. Use the accounts that work best for your users.\n\n\nThere are no specific requirements for using Microsoft accounts. \n\n\nIf you want to use Azure AD accounts, you need to make sure that your Azure AD tenant matches the one associated with your subscription. When you created your Azure RemoteApp subscription, the Azure AD tenant you were using was automatically associated with your subscription. Any Azure AD user you give permission to needs to be that same tenant. If needed, you can \nchange the Azure AD tenant\n associated with your subscription.\n\n\nHybrid (or cloud + Azure AD + AD)\n\n\nUsing Azure AD + on-premises Active Directory is a prerequisite for a hybrid collection. You need to use AD Connect to integrate the two directories. But you do have some choice when it comes to how you configure AD Connect. \n\n\nThere are 2 AD Connect scenarios - using password synchronization or using AD federation. Check out the \nAD Connect information\n to figure out which of these works best for you.\n\n\nYou can also use Azure AD + AD with a cloud collection. Make sure you follow the same set up steps.\n\n\nCheck out \nAzure AD + Active Directory requirements for Azure RemoteApp\n for the steps required to configure Azure AD and Active Directory.\n\n\nGo create your collection!\n\n\nOk, I think we've figured it out now, so there's just one thing left to do - create your first Azure RemoteApp collection.\n\n\nCreate a cloud collection\n or \ncreate a hybrid collection\n - just get creating.", 
            "title": "Which collection do you need?"
        }, 
        {
            "location": "/remoteapp-collections/#what-kind-of-collection-do-you-need-for-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   Azure RemoteApp lets you share apps and resources with users on any device. We do this by creating collections to hold the apps and resources, and then you share those collections with users. There are 2 different collection options, with different network and authentication options - which is right for you?  Let's walk through the different considerations and choices you need to make to get the most out of your Azure RemoteApp collection.", 
            "title": "What kind of collection do you need for Azure RemoteApp?"
        }, 
        {
            "location": "/remoteapp-collections/#quick-differences-between-the-collection-types", 
            "text": "Cloud  Hybrid      Use an existing VNET  Yes  Yes    Requires AD-connected accounts (DirSync)  No  Yes    Requires domain join  No  Yes    Requires domain controller accessible to VNET  No  Yes", 
            "title": "Quick differences between the collection types"
        }, 
        {
            "location": "/remoteapp-collections/#cloud-collections", 
            "text": "Quick to create - the collection is quickly provisioned, meaning your apps get to users quicker.  Bring your own apps or share ours. You can use a custom image (built from an Azure VM) or one of the images included with your subscription.  You don't need to configure a connection between your collection and your on-premises domain.  But you can optionally use your own Azure VNET to provide access into your on-premises environment for data sharing or to use non-Windows authentication into resources like SQL Server (using database authentication).   Ok, how do I create one?   Cloud only? Create with the  Quick Create  option in the portal.  Cloud + VNET? Create using the  Create with VNET  option but do NOT choose to join a domain.", 
            "title": "Cloud collections"
        }, 
        {
            "location": "/remoteapp-collections/#hybrid-collections", 
            "text": "Provide full access to on-premises network + Azure VNET.  Includes domain join access for apps and data. Remote applications can authentication against your on-premises Active Directory - they can then access resources in your domain.  Enable advanced monitoring and management with existing System Center solutions and Windows Group Policies (through a custom image built on Windows Server 2012 R2)  Support  ExpressRoute  to connect your Azure VNET to your local VNET.   Create using the  Create with VNET  option and DO choose to join a domain.", 
            "title": "Hybrid collections"
        }, 
        {
            "location": "/remoteapp-collections/#authentication-options", 
            "text": "Azure RemoteApp supports both Microsoft accounts and Azure Active Directory accounts, but not all collections support all methods.      Account type   Cloud  Cloud + VNET  Hybrid      Microsoft Account   Yes  Yes  No    Azure Active Directory (Azure AD)         Azure AD only  Yes  Yes  No     AD Connect with password sync  Yes  Yes  Yes     AD Connect without password sync  Yes  Yes  No     AD Connect with AD FS  Yes  Yes  Yes     3rd-party Azure-supported identity providers (such as Ping)  Yes  Yes  Yes    Multi-Factor Authentication   Yes  Yes  Yes", 
            "title": "Authentication options"
        }, 
        {
            "location": "/remoteapp-collections/#cloud-and-cloud-vnet", 
            "text": "With cloud collections, you can use Microsoft accounts, Azure AD accounts, or a mix of the two. Use the accounts that work best for your users.  There are no specific requirements for using Microsoft accounts.   If you want to use Azure AD accounts, you need to make sure that your Azure AD tenant matches the one associated with your subscription. When you created your Azure RemoteApp subscription, the Azure AD tenant you were using was automatically associated with your subscription. Any Azure AD user you give permission to needs to be that same tenant. If needed, you can  change the Azure AD tenant  associated with your subscription.", 
            "title": "Cloud and Cloud + VNET"
        }, 
        {
            "location": "/remoteapp-collections/#hybrid-or-cloud-azure-ad-ad", 
            "text": "Using Azure AD + on-premises Active Directory is a prerequisite for a hybrid collection. You need to use AD Connect to integrate the two directories. But you do have some choice when it comes to how you configure AD Connect.   There are 2 AD Connect scenarios - using password synchronization or using AD federation. Check out the  AD Connect information  to figure out which of these works best for you.  You can also use Azure AD + AD with a cloud collection. Make sure you follow the same set up steps.  Check out  Azure AD + Active Directory requirements for Azure RemoteApp  for the steps required to configure Azure AD and Active Directory.", 
            "title": "Hybrid (or cloud + Azure AD + AD)"
        }, 
        {
            "location": "/remoteapp-collections/#go-create-your-collection", 
            "text": "Ok, I think we've figured it out now, so there's just one thing left to do - create your first Azure RemoteApp collection.  Create a cloud collection  or  create a hybrid collection  - just get creating.", 
            "title": "Go create your collection!"
        }, 
        {
            "location": "/remoteapp-create-cloud-deployment/", 
            "text": "How to create a cloud collection of Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nThere are two kinds of \nAzure RemoteApp collections\n: \n\n\n\n\nCloud: resides completely in Azure. You can choose to save all data in the cloud (so a cloud-only collection) or to connect your collection to a VNET and save data there.   \n\n\nHybrid: includes a virtual network for on-premises access - this requires the use of Azure AD and an on-premises Active Directory environment.\n\n\n\n\nThis tutorial walks you through the process of creating a cloud collection. There are four steps: \n\n\n\n\nCreate an Azure RemoteApp collection.\n\n\nOptionally configure directory synchronization. If you are using Azure AD + Active Directory, you have to synchronize users, contacts, and passwords from your on-premises Active Directory to your Azure AD tenant.\n\n\nPublish apps.\n\n\nConfigure user access.\n\n\n\n\nBefore you begin\n\n\nYou need to do the following before creating the collection:\n\n\n\n\nSign up\n for Azure RemoteApp. \n\n\nGather information about the users that you want to grant access to. This can be either Microsoft account information or Active Directory work account information for users.\n\n\nThis procedure assumes you are either going to use one of the template images provided as part of your subscription or that you have already uploaded the template image you want to use. If you need to upload a different template image, you can do that from the Template Images page. Just click \nupload a template image\n and follow the steps in the wizard. \n\n\nWant to use the Office 365 ProPlus image? Check out info \nhere\n.\n\n\nWant to provide custom apps or LOB programs? Create a new \nimage\n and use it in your cloud collection.\n\n\nFigure out whether you need to connect to a VNET. If you choose to connect to a VNET, make sure it meets the \nsizing guidelines\n and that it \ncan connect to RemoteApp\n. Check out the \nVNET planning article \nfor more information.\n\n\nIf you're using a VNET, decide whether you want to join it to your local Active Directory domain.\n\n\n\n\nStep 1: Create a cloud collection - with or without a VNET\n\n\nUse the following steps to \ncreate a cloud-only collection\n:\n\n\n\n\nIn the management portal, go to the RemoteApp page.\n\n\nClick \nNew \n Quick Create\n.\n\n\nEnter a name for your collection, and select your region.\n\n\nChoose the plan that you want to use - standard or basic.\n\n\n\n\nChoose the template to use for this collection. \n\n\nTip:\n Your subscription for RemoteApp comes with \ntemplate images\n that contain Office 365 or Office 2013 (for trial use) programs, some published (such as Word) and others ready to publish. You can also create a new \nimage\n and use it in your cloud collection.\n\n\n\n\n\n\nClick \nCreate RemoteApp collection\n.\n\n\nImportant:\n It can take up to 30 minutes to provision your collection.\n\n\n\n\n\n\nAfter your Azure RemoteApp collection has been created, double-click the name of the collection. That will bring up the \nQuick Start\n page - this is where you finish configuring the collection.\n\n\nUse the following steps to create a \ncloud + VNET collection\n:\n\n\n\n\nIn the management portal, go to the Azure RemoteApp page.\n\n\nClick \nNew\n \n \nCreate with VNET\n.\n\n\nEnter a name for your collection.\n\n\nChoose the plan that you want to use - standard or basic.\n\n\nChoose the VNET you already created. Don't know how to do that? For now, the steps are in the \nhybrid\n topic.\n\n\nDecide whether you want to join your collection to your domain. If yes, you'll need to use AD Connect to integrate Azure AD and your Active Directory environment. That's covered in below in \nStep 2\n.\n\n\nClick \nCreate RemoteApp collection\n.\n\n\n\n\nStep 2: Configure Active Directory directory synchronization (optional)\n\n\nIf you want to use Active Directory, Azure RemoteApp requires directory synchronization between Azure Active Directory and your on-premises Active Directory to synchronize users,  contacts, and passwords to your Azure Active Directory tenant. See \nConfiguring Active Directory for Azure RemoteApp\n for planning information. You can also go directly to \nAD Connect\n for information.\n\n\nStep 3: Publish apps\n\n\nAn Azure RemoteApp app is the app or program that you provide to your users. It is located in the template image you uploaded for the collection. When a user accesses an app, the app appears to run in their local environment, but it is really running in a virtual machine in Azure. \n\n\nBefore your users can access apps, you need to publish them \u2013 publishing apps lets your users access the apps through the Remote Desktop client.\n\n\nYou can publish multiple apps to your Azure RemoteApp collection. From the publishing page, click \nPublish\n to add a program. You can either publish from the \nStart\n menu of the template image or by specifying the path on the template image for the app. If you choose to add from the \nStart\n menu, choose the app to publish. If you choose to provide the path to the app, provide a name for the app and the path to where it is installed on the template image.\n\n\nStep 4: Configure user access\n\n\nNow that you have created your collection, you need to add the users that you want to be able to use your remote resources. If you are using Active Directory, the users that you provide access to need to exist in the Active Directory tenant associated with the subscription you used to create this collection.\n\n\n\n\nFrom the Quick Start page, click \nConfigure user access\n. \n\n\n\n\nEnter the work account (from Active Directory) or Microsoft account that you want to grant access for.\n\n\nNotes:\n \n\n\nMake sure that you use the \u201cuser@domain.com\u201d format.\n\n\nIf you are using Office 365 ProPlus in your collection, you must use the Active Directory identities for your users. This helps validate licensing. \n\n\n\n\n\n\nAfter the users are validated, click \nSave\n.\n\n\n\n\n\n\nNext steps\n\n\nThat's it - you have successfully created and deployed your Azure RemoteApp cloud collection. The next step is to have your users download and install the Remote Desktop client. You can find the URL for the client on the Azure RemoteApp Quick Start page. Then, have users log into the client and access the apps you published.\n\n\nHelp us help you\n\n\nDid you know that in addition to rating this article and making comments down below, you can make changes to the article itself? Something missing? Something wrong? Did I write something that's just confusing? Scroll up and click \nEdit on GitHub\n to make changes - those will come to us for review, and then, once we sign off on them, you'll see your changes and improvements right here.", 
            "title": "Create a cloud collection"
        }, 
        {
            "location": "/remoteapp-create-cloud-deployment/#how-to-create-a-cloud-collection-of-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   There are two kinds of  Azure RemoteApp collections :    Cloud: resides completely in Azure. You can choose to save all data in the cloud (so a cloud-only collection) or to connect your collection to a VNET and save data there.     Hybrid: includes a virtual network for on-premises access - this requires the use of Azure AD and an on-premises Active Directory environment.   This tutorial walks you through the process of creating a cloud collection. There are four steps:    Create an Azure RemoteApp collection.  Optionally configure directory synchronization. If you are using Azure AD + Active Directory, you have to synchronize users, contacts, and passwords from your on-premises Active Directory to your Azure AD tenant.  Publish apps.  Configure user access.   Before you begin  You need to do the following before creating the collection:   Sign up  for Azure RemoteApp.   Gather information about the users that you want to grant access to. This can be either Microsoft account information or Active Directory work account information for users.  This procedure assumes you are either going to use one of the template images provided as part of your subscription or that you have already uploaded the template image you want to use. If you need to upload a different template image, you can do that from the Template Images page. Just click  upload a template image  and follow the steps in the wizard.   Want to use the Office 365 ProPlus image? Check out info  here .  Want to provide custom apps or LOB programs? Create a new  image  and use it in your cloud collection.  Figure out whether you need to connect to a VNET. If you choose to connect to a VNET, make sure it meets the  sizing guidelines  and that it  can connect to RemoteApp . Check out the  VNET planning article  for more information.  If you're using a VNET, decide whether you want to join it to your local Active Directory domain.", 
            "title": "How to create a cloud collection of Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-create-cloud-deployment/#step-1-create-a-cloud-collection-with-or-without-a-vnet", 
            "text": "Use the following steps to  create a cloud-only collection :   In the management portal, go to the RemoteApp page.  Click  New   Quick Create .  Enter a name for your collection, and select your region.  Choose the plan that you want to use - standard or basic.   Choose the template to use for this collection.   Tip:  Your subscription for RemoteApp comes with  template images  that contain Office 365 or Office 2013 (for trial use) programs, some published (such as Word) and others ready to publish. You can also create a new  image  and use it in your cloud collection.    Click  Create RemoteApp collection .  Important:  It can take up to 30 minutes to provision your collection.    After your Azure RemoteApp collection has been created, double-click the name of the collection. That will bring up the  Quick Start  page - this is where you finish configuring the collection.  Use the following steps to create a  cloud + VNET collection :   In the management portal, go to the Azure RemoteApp page.  Click  New     Create with VNET .  Enter a name for your collection.  Choose the plan that you want to use - standard or basic.  Choose the VNET you already created. Don't know how to do that? For now, the steps are in the  hybrid  topic.  Decide whether you want to join your collection to your domain. If yes, you'll need to use AD Connect to integrate Azure AD and your Active Directory environment. That's covered in below in  Step 2 .  Click  Create RemoteApp collection .", 
            "title": "Step 1: Create a cloud collection - with or without a VNET"
        }, 
        {
            "location": "/remoteapp-create-cloud-deployment/#step-2-configure-active-directory-directory-synchronization-optional", 
            "text": "If you want to use Active Directory, Azure RemoteApp requires directory synchronization between Azure Active Directory and your on-premises Active Directory to synchronize users,  contacts, and passwords to your Azure Active Directory tenant. See  Configuring Active Directory for Azure RemoteApp  for planning information. You can also go directly to  AD Connect  for information.", 
            "title": "Step 2: Configure Active Directory directory synchronization (optional)"
        }, 
        {
            "location": "/remoteapp-create-cloud-deployment/#step-3-publish-apps", 
            "text": "An Azure RemoteApp app is the app or program that you provide to your users. It is located in the template image you uploaded for the collection. When a user accesses an app, the app appears to run in their local environment, but it is really running in a virtual machine in Azure.   Before your users can access apps, you need to publish them \u2013 publishing apps lets your users access the apps through the Remote Desktop client.  You can publish multiple apps to your Azure RemoteApp collection. From the publishing page, click  Publish  to add a program. You can either publish from the  Start  menu of the template image or by specifying the path on the template image for the app. If you choose to add from the  Start  menu, choose the app to publish. If you choose to provide the path to the app, provide a name for the app and the path to where it is installed on the template image.", 
            "title": "Step 3: Publish apps"
        }, 
        {
            "location": "/remoteapp-create-cloud-deployment/#step-4-configure-user-access", 
            "text": "Now that you have created your collection, you need to add the users that you want to be able to use your remote resources. If you are using Active Directory, the users that you provide access to need to exist in the Active Directory tenant associated with the subscription you used to create this collection.   From the Quick Start page, click  Configure user access .    Enter the work account (from Active Directory) or Microsoft account that you want to grant access for.  Notes:    Make sure that you use the \u201cuser@domain.com\u201d format.  If you are using Office 365 ProPlus in your collection, you must use the Active Directory identities for your users. This helps validate licensing.     After the users are validated, click  Save .", 
            "title": "Step 4: Configure user access"
        }, 
        {
            "location": "/remoteapp-create-cloud-deployment/#next-steps", 
            "text": "That's it - you have successfully created and deployed your Azure RemoteApp cloud collection. The next step is to have your users download and install the Remote Desktop client. You can find the URL for the client on the Azure RemoteApp Quick Start page. Then, have users log into the client and access the apps you published.", 
            "title": "Next steps"
        }, 
        {
            "location": "/remoteapp-create-cloud-deployment/#help-us-help-you", 
            "text": "Did you know that in addition to rating this article and making comments down below, you can make changes to the article itself? Something missing? Something wrong? Did I write something that's just confusing? Scroll up and click  Edit on GitHub  to make changes - those will come to us for review, and then, once we sign off on them, you'll see your changes and improvements right here.", 
            "title": "Help us help you"
        }, 
        {
            "location": "/remoteapp-create-hybrid-deployment/", 
            "text": "How to create a hybrid collection for Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nThere are two kinds of Azure RemoteApp collections:\n\n\n\n\nCloud: resides completely in Azure. You can choose to save all data in the cloud (so a cloud-only collection) or to connect your collection to a VNET and save data there.   \n\n\nHybrid: includes a virtual network for on-premises access - this requires the use of Azure AD and an on-premises Active Directory environment.\n\n\n\n\nDon't know which you need? Check out \nWhich kind of collection do you need for Azure RemoteApp\n.\n\n\nThis tutorial walks you through the process of creating a hybrid collection. There are eight steps:\n\n\n\n\nDecide what \nimage\n to use for your collection. You can create a custom image or use one of the Microsoft images included with your subscription.\n\n\nSet up your virtual network. Check out the \nVNET planning\n and \nsizing\n information.\n\n\nCreate a collection.\n\n\nJoin your collection to your local domain.\n\n\nAdd a template image to your collection.\n\n\nConfigure directory synchronization. Azure RemoteApp requires that you integrate with Azure Active Directory by either 1) configuring Azure Active Directory Sync with the Password Sync option, or 2) configuring Azure Active Directory Sync without the Password Sync option but using a domain that is federated to AD FS. Check out the \nconfiguration info for Active Directory with RemoteApp\n.\n\n\nPublish RemoteApp apps.\n\n\nConfigure user access.\n\n\n\n\nBefore you begin\n\n\nYou need to do the following before creating the collection:\n\n\n\n\nSign up\n for Azure RemoteApp.\n\n\nCreate a user account in Active Directory to use as the Azure RemoteApp service account. Restrict the permissions for this account so that it can only join machines to the domain.\n\n\nGather information about your on-premises network: IP address information and VPN device details.\n\n\nInstall the \nAzure PowerShell\n module.\n\n\nGather information about the users that you want to grant access to. You will need the Azure Active Directory user principal name (for example, name@contoso.com) for each user. Make sure that the UPN matches between Azure AD and Active Directory.\n\n\nChoose your template image. An Azure RemoteApp template image contains the apps and programs that you want to publish for your users. See \nAzure RemoteApp image options\n for more information.\n\n\nWant to use the Office 365 ProPlus image? Check out info \nhere\n.\n\n\nConfigure Active Directory for RemoteApp\n.\n\n\n\n\nStep 1: Set up your virtual network\n\n\nYou can deploy a hybrid collection that uses an existing Azure virtual network, or you can create a new virtual network. A virtual network lets your users access data on your local network through RemoteApp remote resources. Using an Azure virtual network gives your collection direct network access to other Azure services and virtual machines deployed to that virtual network.\n\n\nMake sure you review the \nVNET planning\n and \nVNET size\n information before you create your VNET.\n\n\nCreate an Azure VNET and join it to your Active Directory deployment\n\n\nStart by creating a \nvirtual network\n. This is done on the \nNetwork\n tab in the Azure portal. You need to connect your virtual network to the Active Directory deployment that is synchronized to your Azure Active Directory tenant.\n\n\nSee \nCreate a virtual network using the Azure portal\n for more information.\n\n\nMake sure your virtual network is ready for Azure RemoteApp\n\n\nBefore you create your collection, let's make sure that your new virtual network is ready. You can validate this by doing the following:\n\n\n\n\nCreate an Azure virtual machine inside the subnet of the virtual network you just created for RemoteApp.\n\n\nUse Remote Desktop to connect to the virtual machine. (Click \nConnect\n.)\n\n\nJoin it to the same Active Directory deployment that you want to use for RemoteApp.\n\n\n\n\nDid that work? Your virtual network and subnet are ready for Azure RemoteApp!\n\n\nYou can find more information about creating Azure virtual machines and connecting to them with Remote Desktop \nhere\n.\n\n\nStep 2: Create an Azure RemoteApp collection\n\n\n\n\nIn the \nAzure portal\n, go to the Azure RemoteApp page.\n\n\nClick \nNew \n Create with VNET\n.\n\n\nEnter a name for your collection.\n\n\nChoose the plan that you want to use - standard or basic.\n\n\nChoose your VNET from the drop down list and then your subnet.\n\n\nChoose to join it to your domain.\n\n\nClick \nCreate RemoteApp collection\n.\n\n\n\n\nAfter your Azure RemoteApp collection has been created, double-click the name of the collection. That will bring up the \nQuick Start\n page - this is where you finish configuring the collection.\n\n\nDid something go wrong? Check out the \nhybrid collection troubleshooting information\n.\n\n\nStep 3: Link your collection to the local domain\n\n\n\n\nOn the \nQuick Start\n page, click \njoin a local domain\n.\n\n\n\n\nAdd the Azure RemoteApp service account to your local Active Directory domain. You will need the domain name, organizational unit, service account user name and password.\n\n\nThis is the information you gathered if you followed the steps in \nConfigure Active Directory for Azure RemoteApp\n.\n\n\n\n\n\n\nStep 4: Link to an Azure RemoteApp image\n\n\nAn Azure RemoteApp template image contains the programs that you want to share with users. You can either create a new \ntemplate image\n or link to an existing image (one already imported or uploaded to Azure RemoteApp). You can also link to one of the Azure RemoteApp \ntemplate images\n that contain Office 365 or Office 2013 (for trial use) programs.\n\n\nIf you are uploading the new image, you need to enter the name and choose the location for the image. On the next page of the wizard, you'll see a set of PowerShell cmdlets - copy and run these cmdlets from an elevated Windows PowerShell prompt to upload the specified image.\n\n\nIf you are linking to an existing template image, simply specify the image name, location, and associated Azure subscription.\n\n\nStep 5: Configure Active Directory directory synchronization\n\n\nAzure RemoteApp requires that you integrate with Azure Active Directory by either 1) configuring Azure Active Directory Sync with the Password Sync option, or 2) configuring Azure Active Directory Sync without the Password Sync option but using a domain that is federated to AD FS.\n\n\nCheck out \nAD Connect\n - this article helps you set up directory integration in 4 steps.\n\n\nSee \nDirectory synchronization roadmap\n for planning information and detailed steps.\n\n\nStep 6: Publish apps\n\n\nAn Azure RemoteApp app is the app or program that you provide to your users. It is located in the template image you uploaded for the collection. When a user accesses an app, it appears to run in their local environment, but it is really running in Azure.\n\n\nBefore your users can access apps, you need to publish them \u2013 this lets your users access the apps through the Remote Desktop client.\n\n\nYou can publish multiple apps to your collection. From the publishing page, click \nPublish\n to add an app. You can either publish from the \nStart\n menu of the template image or by specifying the path on the template image for the app. If you choose to add from the \nStart\n menu, choose the program to add. If you choose to provide the path to the app, provide a name for the app and the path to where it is installed on the template image.\n\n\nStep 7: Configure user access\n\n\nNow that you have created your collection, you need to add the users that you want to be able to use your remote resources. The users that you provide access to need to exist in the Active Directory tenant associated with the subscription you used to create this Azure RemoteApp collection.\n\n\n\n\nFrom the Quick Start page, click \nConfigure user access\n.\n\n\n\n\nEnter the work account (from Active Directory) or Microsoft account that you want to grant access for.\n\n\nNotes:\n\n\nMake sure that you use the \u201cuser@domain.com\u201d format.\n\n\nIf you are using Office 365 ProPlus in your collection, you must use the Active Directory identities for your users. This helps validate licensing.\n\n\n\n\n\n\nOnce the users are validated, click \nSave\n.\n\n\n\n\n\n\nNext steps\n\n\nThat's it - you have successfully created and deployed your Azure RemoteApp hybrid collection. The next step is to have your users download and install the Remote Desktop client. You can find the URL for the client on the Azure RemoteApp Quick Start page. Then, have users log into the client and access the apps you published.\n\n\nHelp us help you\n\n\nDid you know that in addition to rating this article and making comments down below, you can make changes to the article itself? Something missing? Something wrong? Did I write something that's just confusing? Scroll up and click \nEdit on GitHub\n to make changes - those will come to us for review, and then, once we sign off on them, you'll see your changes and improvements right here.", 
            "title": "Create a hybrid collection"
        }, 
        {
            "location": "/remoteapp-create-hybrid-deployment/#how-to-create-a-hybrid-collection-for-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   There are two kinds of Azure RemoteApp collections:   Cloud: resides completely in Azure. You can choose to save all data in the cloud (so a cloud-only collection) or to connect your collection to a VNET and save data there.     Hybrid: includes a virtual network for on-premises access - this requires the use of Azure AD and an on-premises Active Directory environment.   Don't know which you need? Check out  Which kind of collection do you need for Azure RemoteApp .  This tutorial walks you through the process of creating a hybrid collection. There are eight steps:   Decide what  image  to use for your collection. You can create a custom image or use one of the Microsoft images included with your subscription.  Set up your virtual network. Check out the  VNET planning  and  sizing  information.  Create a collection.  Join your collection to your local domain.  Add a template image to your collection.  Configure directory synchronization. Azure RemoteApp requires that you integrate with Azure Active Directory by either 1) configuring Azure Active Directory Sync with the Password Sync option, or 2) configuring Azure Active Directory Sync without the Password Sync option but using a domain that is federated to AD FS. Check out the  configuration info for Active Directory with RemoteApp .  Publish RemoteApp apps.  Configure user access.   Before you begin  You need to do the following before creating the collection:   Sign up  for Azure RemoteApp.  Create a user account in Active Directory to use as the Azure RemoteApp service account. Restrict the permissions for this account so that it can only join machines to the domain.  Gather information about your on-premises network: IP address information and VPN device details.  Install the  Azure PowerShell  module.  Gather information about the users that you want to grant access to. You will need the Azure Active Directory user principal name (for example, name@contoso.com) for each user. Make sure that the UPN matches between Azure AD and Active Directory.  Choose your template image. An Azure RemoteApp template image contains the apps and programs that you want to publish for your users. See  Azure RemoteApp image options  for more information.  Want to use the Office 365 ProPlus image? Check out info  here .  Configure Active Directory for RemoteApp .", 
            "title": "How to create a hybrid collection for Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-create-hybrid-deployment/#step-1-set-up-your-virtual-network", 
            "text": "You can deploy a hybrid collection that uses an existing Azure virtual network, or you can create a new virtual network. A virtual network lets your users access data on your local network through RemoteApp remote resources. Using an Azure virtual network gives your collection direct network access to other Azure services and virtual machines deployed to that virtual network.  Make sure you review the  VNET planning  and  VNET size  information before you create your VNET.", 
            "title": "Step 1: Set up your virtual network"
        }, 
        {
            "location": "/remoteapp-create-hybrid-deployment/#create-an-azure-vnet-and-join-it-to-your-active-directory-deployment", 
            "text": "Start by creating a  virtual network . This is done on the  Network  tab in the Azure portal. You need to connect your virtual network to the Active Directory deployment that is synchronized to your Azure Active Directory tenant.  See  Create a virtual network using the Azure portal  for more information.", 
            "title": "Create an Azure VNET and join it to your Active Directory deployment"
        }, 
        {
            "location": "/remoteapp-create-hybrid-deployment/#make-sure-your-virtual-network-is-ready-for-azure-remoteapp", 
            "text": "Before you create your collection, let's make sure that your new virtual network is ready. You can validate this by doing the following:   Create an Azure virtual machine inside the subnet of the virtual network you just created for RemoteApp.  Use Remote Desktop to connect to the virtual machine. (Click  Connect .)  Join it to the same Active Directory deployment that you want to use for RemoteApp.   Did that work? Your virtual network and subnet are ready for Azure RemoteApp!  You can find more information about creating Azure virtual machines and connecting to them with Remote Desktop  here .", 
            "title": "Make sure your virtual network is ready for Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-create-hybrid-deployment/#step-2-create-an-azure-remoteapp-collection", 
            "text": "In the  Azure portal , go to the Azure RemoteApp page.  Click  New   Create with VNET .  Enter a name for your collection.  Choose the plan that you want to use - standard or basic.  Choose your VNET from the drop down list and then your subnet.  Choose to join it to your domain.  Click  Create RemoteApp collection .   After your Azure RemoteApp collection has been created, double-click the name of the collection. That will bring up the  Quick Start  page - this is where you finish configuring the collection.  Did something go wrong? Check out the  hybrid collection troubleshooting information .", 
            "title": "Step 2: Create an Azure RemoteApp collection"
        }, 
        {
            "location": "/remoteapp-create-hybrid-deployment/#step-3-link-your-collection-to-the-local-domain", 
            "text": "On the  Quick Start  page, click  join a local domain .   Add the Azure RemoteApp service account to your local Active Directory domain. You will need the domain name, organizational unit, service account user name and password.  This is the information you gathered if you followed the steps in  Configure Active Directory for Azure RemoteApp .", 
            "title": "Step 3: Link your collection to the local domain"
        }, 
        {
            "location": "/remoteapp-create-hybrid-deployment/#step-4-link-to-an-azure-remoteapp-image", 
            "text": "An Azure RemoteApp template image contains the programs that you want to share with users. You can either create a new  template image  or link to an existing image (one already imported or uploaded to Azure RemoteApp). You can also link to one of the Azure RemoteApp  template images  that contain Office 365 or Office 2013 (for trial use) programs.  If you are uploading the new image, you need to enter the name and choose the location for the image. On the next page of the wizard, you'll see a set of PowerShell cmdlets - copy and run these cmdlets from an elevated Windows PowerShell prompt to upload the specified image.  If you are linking to an existing template image, simply specify the image name, location, and associated Azure subscription.", 
            "title": "Step 4: Link to an Azure RemoteApp image"
        }, 
        {
            "location": "/remoteapp-create-hybrid-deployment/#step-5-configure-active-directory-directory-synchronization", 
            "text": "Azure RemoteApp requires that you integrate with Azure Active Directory by either 1) configuring Azure Active Directory Sync with the Password Sync option, or 2) configuring Azure Active Directory Sync without the Password Sync option but using a domain that is federated to AD FS.  Check out  AD Connect  - this article helps you set up directory integration in 4 steps.  See  Directory synchronization roadmap  for planning information and detailed steps.", 
            "title": "Step 5: Configure Active Directory directory synchronization"
        }, 
        {
            "location": "/remoteapp-create-hybrid-deployment/#step-6-publish-apps", 
            "text": "An Azure RemoteApp app is the app or program that you provide to your users. It is located in the template image you uploaded for the collection. When a user accesses an app, it appears to run in their local environment, but it is really running in Azure.  Before your users can access apps, you need to publish them \u2013 this lets your users access the apps through the Remote Desktop client.  You can publish multiple apps to your collection. From the publishing page, click  Publish  to add an app. You can either publish from the  Start  menu of the template image or by specifying the path on the template image for the app. If you choose to add from the  Start  menu, choose the program to add. If you choose to provide the path to the app, provide a name for the app and the path to where it is installed on the template image.", 
            "title": "Step 6: Publish apps"
        }, 
        {
            "location": "/remoteapp-create-hybrid-deployment/#step-7-configure-user-access", 
            "text": "Now that you have created your collection, you need to add the users that you want to be able to use your remote resources. The users that you provide access to need to exist in the Active Directory tenant associated with the subscription you used to create this Azure RemoteApp collection.   From the Quick Start page, click  Configure user access .   Enter the work account (from Active Directory) or Microsoft account that you want to grant access for.  Notes:  Make sure that you use the \u201cuser@domain.com\u201d format.  If you are using Office 365 ProPlus in your collection, you must use the Active Directory identities for your users. This helps validate licensing.    Once the users are validated, click  Save .", 
            "title": "Step 7: Configure user access"
        }, 
        {
            "location": "/remoteapp-create-hybrid-deployment/#next-steps", 
            "text": "That's it - you have successfully created and deployed your Azure RemoteApp hybrid collection. The next step is to have your users download and install the Remote Desktop client. You can find the URL for the client on the Azure RemoteApp Quick Start page. Then, have users log into the client and access the apps you published.", 
            "title": "Next steps"
        }, 
        {
            "location": "/remoteapp-create-hybrid-deployment/#help-us-help-you", 
            "text": "Did you know that in addition to rating this article and making comments down below, you can make changes to the article itself? Something missing? Something wrong? Did I write something that's just confusing? Scroll up and click  Edit on GitHub  to make changes - those will come to us for review, and then, once we sign off on them, you'll see your changes and improvements right here.", 
            "title": "Help us help you"
        }, 
        {
            "location": "/remoteapp-update/", 
            "text": "Update a collection in Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nThere will come a time, inevitably, when you need to update the apps or image in your Azure RemoteApp collection. If you are using one of the images included with your Azure RemoteApp subscription, in either a cloud or hybrid collection, any and all updates are handled by Azure RemoteApp itself, so you can rest easy.\n\n\nHowever, if you are using a custom image (either that you built from scratch or that you created by modifying one of our images), you are in charge of maintaining the image and apps. If you need to update your image or any of the apps inside it, you need to create a new, updated version of the image, and then replace the existing image in your collection with this new updated image.\n\n\nSo, how do you go about updating your collection? It's fairly straightforward:\n\n\n\n\nUpdate the image that you used in your collection. Apply any patches or updates needed, and then save it with a new name.\n\n\nUpload\n or \nimport\n that image to RemoteApp.\n\n\nNow, on the collection page, click \nUpdate\n.\n\n\nChoose the new image from the \nTemplate Image\n list.\n\n\n\n\nHere's the tricky part - you need to decide how to deal with any users that are currently using an app in the collection. You have the following choices:\n\n\n\n\nGive users 60 minutes after the update\n. As soon as the update is finished, Azure RemoteApp will display a message to any active users telling them to save their work and log off and log back in. After 60 minutes, any active users who have not logged off will be automatically logged off. Users can immediately log back on.\n\n\nSign users out immediately\n. As soon as the update is finished, log off all users automatically without any warning. If you choose this option, users might lose data. However, they can reconnect to the app immediately.\n\n\n\n\n\n\n\n\nClick the check mark to start the update.", 
            "title": "Update your collection"
        }, 
        {
            "location": "/remoteapp-update/#update-a-collection-in-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   There will come a time, inevitably, when you need to update the apps or image in your Azure RemoteApp collection. If you are using one of the images included with your Azure RemoteApp subscription, in either a cloud or hybrid collection, any and all updates are handled by Azure RemoteApp itself, so you can rest easy.  However, if you are using a custom image (either that you built from scratch or that you created by modifying one of our images), you are in charge of maintaining the image and apps. If you need to update your image or any of the apps inside it, you need to create a new, updated version of the image, and then replace the existing image in your collection with this new updated image.  So, how do you go about updating your collection? It's fairly straightforward:   Update the image that you used in your collection. Apply any patches or updates needed, and then save it with a new name.  Upload  or  import  that image to RemoteApp.  Now, on the collection page, click  Update .  Choose the new image from the  Template Image  list.   Here's the tricky part - you need to decide how to deal with any users that are currently using an app in the collection. You have the following choices:   Give users 60 minutes after the update . As soon as the update is finished, Azure RemoteApp will display a message to any active users telling them to save their work and log off and log back in. After 60 minutes, any active users who have not logged off will be automatically logged off. Users can immediately log back on.  Sign users out immediately . As soon as the update is finished, log off all users automatically without any warning. If you choose this option, users might lose data. However, they can reconnect to the app immediately.     Click the check mark to start the update.", 
            "title": "Update a collection in Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-imageoptions/", 
            "text": "Create an Azure RemoteApp image\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nAzure RemoteApp uses images to hold the apps that you share with your users. (We take your image and use it to create VMs - that's what the users access when they sign into Azure RemoteApp.) To create an Azure RemoteApp collection with your choice of applications, whether it is cloud or hybrid, you  start by creating an image with those applications installed. Then, create a collection that uses that image, assign users to the collection, and publish apps to those users.\n\n\nYou have several options for creating or using images. The basic \nrequirement\n for an image is that it run Windows Server 2012 R2 and have the Remote Desktop Session Host (RDSH) role installed. How you get that is where things get interesting.\n\n\nYou have the following options when it comes to images:\n\n\n\n\nYou can import and use an \nimage based on an Azure virtual machine\n. This is good for line-of-business apps that require custom settings. You can customize the image to work for the app.\n\n\nYou can \ncreate and upload a custom image\n. This is good if you already have an image that you use for your on-premises Remote Desktop Services deployment.\n\n\nYou can use one of the \ntemplate images\n included in your RemoteApp subscription. These images are created and maintained by the RemoteApp team and contain some standard applications (like the Office suite) that you can make available to your users. Note that only the Office 365 Pro Plus image can be used in a production setting.\n\n\n\n\nRegardless of where you get your image or how you create it, you'll want to make sure you understand the \napp requirements\n to ensure that your app works well in RemoteApp. Then, the next step is to create a \ncloud\n or \nhybrid\n collection.", 
            "title": "Create a RemoteApp image"
        }, 
        {
            "location": "/remoteapp-imageoptions/#create-an-azure-remoteapp-image", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   Azure RemoteApp uses images to hold the apps that you share with your users. (We take your image and use it to create VMs - that's what the users access when they sign into Azure RemoteApp.) To create an Azure RemoteApp collection with your choice of applications, whether it is cloud or hybrid, you  start by creating an image with those applications installed. Then, create a collection that uses that image, assign users to the collection, and publish apps to those users.  You have several options for creating or using images. The basic  requirement  for an image is that it run Windows Server 2012 R2 and have the Remote Desktop Session Host (RDSH) role installed. How you get that is where things get interesting.  You have the following options when it comes to images:   You can import and use an  image based on an Azure virtual machine . This is good for line-of-business apps that require custom settings. You can customize the image to work for the app.  You can  create and upload a custom image . This is good if you already have an image that you use for your on-premises Remote Desktop Services deployment.  You can use one of the  template images  included in your RemoteApp subscription. These images are created and maintained by the RemoteApp team and contain some standard applications (like the Office suite) that you can make available to your users. Note that only the Office 365 Pro Plus image can be used in a production setting.   Regardless of where you get your image or how you create it, you'll want to make sure you understand the  app requirements  to ensure that your app works well in RemoteApp. Then, the next step is to create a  cloud  or  hybrid  collection.", 
            "title": "Create an Azure RemoteApp image"
        }, 
        {
            "location": "/remoteapp-images/", 
            "text": "What is in the Azure RemoteApp template images?\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nYour Azure RemoteApp subscription includes three template images:\n\n\n\n\nWindows Server 2012\n\n\nMicrosoft Office 365 ProPlus (Office 365 subscription required)\n\n\nMicrosoft Office 2013 Professional Plus (trial only)\n\n\n\n\n\n\n[AZURE.IMPORTANT]Your Azure RemoteApp subscription grants you access to the software in the images, with the exception of Office 365 ProPlus, which requires a separate subscription, and Office 2013, which cannot be used in production. This means that you can share the programs or apps on the template images with your users. For example, if you create a collection that uses the Windows Server 2012 R2 image, you can publish System Center Endpoint Protection for users to access through RemoteApp.\n\n\nCheck out the \nRemoteApp licensing details\n for more information. And \nUsing Office with Azure RemoteApp\n for the Office licensing info.\n\n\n\n\nRead on for details on what each image contains.\n\n\nWindows Server 2012 R2  (\"the vanilla image\")\n\n\nThis image is based on Microsoft Windows Server 2012 R2 Datacenter operating system and has the following roles and features installed to meet the requirements for Azure RemoteApp template images:\n\n\n\n\n.NET Framework 4.5, 3.5.1, 3.5\n\n\nDesktop Experience\n\n\nInk and Handwriting Services\n\n\nMedia Foundation\n\n\nRemote Desktop Session Host\n\n\nWindows PowerShell 4.0\n\n\nWindows PowerShell ISE\n\n\nWoW64 Support\n\n\n\n\nThis image also has the following applications installed:\n\n\n\n\nAdobe Flash Player\n\n\nMicrosoft Silverlight\n\n\nMicrosoft System Center 2012 Endpoint Protection\n\n\nMicrosoft Windows Media Player\n\n\n\n\nMicrosoft Office 365 ProPlus (subscription required)\n\n\nOffice 365 is the most requested application, so we created a \"custom\" image for you to work with.\n\n\nThis image is an extension of the vanilla image and has the following components of Microsoft Office 365 ProPlus installed in addition to the components described in the Windows Server 2012 R2 image:\n\n\n\n\nAccess\n\n\nExcel\n\n\nLync\n\n\nOneNote\n\n\nOneDrive for Business (note that the sync agent is not supported for use with Azure RemoteApp)\n\n\nOutlook\n\n\nPowerPoint\n\n\nWord\n\n\nMicrosoft Office Proofing Tools\n\n\n\n\nThe image also includes Visio Pro and Project Pro.\n\n\nAnd the following applications, as well:\n\n\n\n\nSQL Native client\n\n\nODBC Driver\n\n\nSQL Server Data Mining client\n\n\nMasterDataServices client\n\n\nMicrosoft Publisher\n\n\nPowerQuery\n\n\nPowerMap\n\n\n\n\nFull functionality of Office 365 ProPlus apps is available only for users who have an Office 365 ProPlus plan. For more details on the Office 365 subscription plans see \nOffice 365 service plans\n. Still have questions? Check out the \nOffice 365 + RemoteApp\n information. Also check out the new article, \nHow to use your Office 365 subscription with Azure RemoteApp\n.\n\n\nNote that you need to license Office 365 ProPlus, Visio Pro, and Project Pro separately - they each have their own license.\n\n\nMicrosoft Office 2013 Professional Plus (trial only)\n\n\nDuring the free trial period, you can test the service with the Office 2013 image.\n\n\nThis image is an extension of the vanilla image and has the following components of Microsoft Office 2013 Professional Plus installed in addition to the components described in the Windows Server 2012 R2 image:\n\n\n\n\nAccess\n\n\nExcel\n\n\nLync\n\n\nOneNote\n\n\nOneDrive for Business (note that the sync agent is not supported for use with Azure RemoteApp)\n\n\nOutlook\n\n\nPowerPoint\n\n\nProject\n\n\nVisio\n\n\nWord\n\n\nMicrosoft Office Proofing Tools\n\n\n\n\n\n\n[AZURE.IMPORTANT]\nLegal information:\n This image does not include a Microsoft Office license and \ncannot be used for production\n. The Office 2013 Professional Plus image is intended for trial use only. If you want to use Office apps in Azure RemoteApp for production, you need to use the Office 365 ProPlus image. For more details on licensing Office, see \nUsing Office 365 with Azure RemoteApp", 
            "title": "What is in the template image?"
        }, 
        {
            "location": "/remoteapp-images/#what-is-in-the-azure-remoteapp-template-images", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   Your Azure RemoteApp subscription includes three template images:   Windows Server 2012  Microsoft Office 365 ProPlus (Office 365 subscription required)  Microsoft Office 2013 Professional Plus (trial only)    [AZURE.IMPORTANT]Your Azure RemoteApp subscription grants you access to the software in the images, with the exception of Office 365 ProPlus, which requires a separate subscription, and Office 2013, which cannot be used in production. This means that you can share the programs or apps on the template images with your users. For example, if you create a collection that uses the Windows Server 2012 R2 image, you can publish System Center Endpoint Protection for users to access through RemoteApp.  Check out the  RemoteApp licensing details  for more information. And  Using Office with Azure RemoteApp  for the Office licensing info.   Read on for details on what each image contains.", 
            "title": "What is in the Azure RemoteApp template images?"
        }, 
        {
            "location": "/remoteapp-images/#windows-server-2012-r2-the-vanilla-image", 
            "text": "This image is based on Microsoft Windows Server 2012 R2 Datacenter operating system and has the following roles and features installed to meet the requirements for Azure RemoteApp template images:   .NET Framework 4.5, 3.5.1, 3.5  Desktop Experience  Ink and Handwriting Services  Media Foundation  Remote Desktop Session Host  Windows PowerShell 4.0  Windows PowerShell ISE  WoW64 Support   This image also has the following applications installed:   Adobe Flash Player  Microsoft Silverlight  Microsoft System Center 2012 Endpoint Protection  Microsoft Windows Media Player", 
            "title": "Windows Server 2012 R2  (\"the vanilla image\")"
        }, 
        {
            "location": "/remoteapp-images/#microsoft-office-365-proplus-subscription-required", 
            "text": "Office 365 is the most requested application, so we created a \"custom\" image for you to work with.  This image is an extension of the vanilla image and has the following components of Microsoft Office 365 ProPlus installed in addition to the components described in the Windows Server 2012 R2 image:   Access  Excel  Lync  OneNote  OneDrive for Business (note that the sync agent is not supported for use with Azure RemoteApp)  Outlook  PowerPoint  Word  Microsoft Office Proofing Tools   The image also includes Visio Pro and Project Pro.  And the following applications, as well:   SQL Native client  ODBC Driver  SQL Server Data Mining client  MasterDataServices client  Microsoft Publisher  PowerQuery  PowerMap   Full functionality of Office 365 ProPlus apps is available only for users who have an Office 365 ProPlus plan. For more details on the Office 365 subscription plans see  Office 365 service plans . Still have questions? Check out the  Office 365 + RemoteApp  information. Also check out the new article,  How to use your Office 365 subscription with Azure RemoteApp .  Note that you need to license Office 365 ProPlus, Visio Pro, and Project Pro separately - they each have their own license.", 
            "title": "Microsoft Office 365 ProPlus (subscription required)"
        }, 
        {
            "location": "/remoteapp-images/#microsoft-office-2013-professional-plus-trial-only", 
            "text": "During the free trial period, you can test the service with the Office 2013 image.  This image is an extension of the vanilla image and has the following components of Microsoft Office 2013 Professional Plus installed in addition to the components described in the Windows Server 2012 R2 image:   Access  Excel  Lync  OneNote  OneDrive for Business (note that the sync agent is not supported for use with Azure RemoteApp)  Outlook  PowerPoint  Project  Visio  Word  Microsoft Office Proofing Tools    [AZURE.IMPORTANT] Legal information:  This image does not include a Microsoft Office license and  cannot be used for production . The Office 2013 Professional Plus image is intended for trial use only. If you want to use Office apps in Azure RemoteApp for production, you need to use the Office 365 ProPlus image. For more details on licensing Office, see  Using Office 365 with Azure RemoteApp", 
            "title": "Microsoft Office 2013 Professional Plus (trial only)"
        }, 
        {
            "location": "/remoteapp-imagereqs/", 
            "text": "Requirements for Azure RemoteApp images\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nAzure RemoteApp uses a Windows Server 2012 R2 image to host all the programs that you want to share with your users. To create a custom image, you can start with an existing image or \ncreate a new one\n.\n\n\n\n\n[AZURE.TIP] Did you know that your Azure RemoteApp subscription gives you access to a Windows Server 2012 R2 image in the Azure VM gallery that you can use to create your own template image? \nCheck it out\n.  \n\n\n\n\nThe requirements for the image that can be uploaded for use with Azure RemoteApp are:\n\n\n\n\nCustom applications don\u2019t store data locally on the image. These images are stateless and should only contain applications.\n\n\nThe image does not contain data that can be lost.\n\n\nThe image size should be a multiple of MBs. If you try to upload an image that is not an exact multiple, the upload will fail.\n\n\nThe image size must be 127 GB or smaller.\n\n\nIt must be on a VHD file (VHDX files are not currently supported).\n\n\nThe VHD must not be a generation 2 virtual machine.\n\n\nThe VHD can be either fixed-size or dynamically expanding. A dynamically expanding VHD is recommended because it takes less time to upload to Azure than a fixed-size VHD file.\n\n\nThe disk must be initialized using the Master Boot Record (MBR) partitioning style. The GUID partition table (GPT) partition style is not supported.\n\n\nThe VHD must contain a single installation of Windows Server 2012 R2. It can contain multiple volumes, but only one that contains an installation of Windows.\n\n\nThe Remote Desktop Session Host (RDSH) role and the Desktop Experience feature must be installed.\n\n\nThe Remote Desktop Connection Broker role must \nnot\n be installed.\n\n\nThe Encrypting File System (EFS) must be disabled.\n\n\nThe image must be SYSPREPed using the parameters \n/oobe /generalize /shutdown\n (DO NOT use the \n/mode:vm\n parameter).\n\n\nUploading your VHD from a snapshot chain is not supported.\n\n\n\n\nSee \nCreate an Azure RemoteApp image\n for more information about creating images for Azure RemoteApp.", 
            "title": "Image requirements"
        }, 
        {
            "location": "/remoteapp-imagereqs/#requirements-for-azure-remoteapp-images", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   Azure RemoteApp uses a Windows Server 2012 R2 image to host all the programs that you want to share with your users. To create a custom image, you can start with an existing image or  create a new one .   [AZURE.TIP] Did you know that your Azure RemoteApp subscription gives you access to a Windows Server 2012 R2 image in the Azure VM gallery that you can use to create your own template image?  Check it out .     The requirements for the image that can be uploaded for use with Azure RemoteApp are:   Custom applications don\u2019t store data locally on the image. These images are stateless and should only contain applications.  The image does not contain data that can be lost.  The image size should be a multiple of MBs. If you try to upload an image that is not an exact multiple, the upload will fail.  The image size must be 127 GB or smaller.  It must be on a VHD file (VHDX files are not currently supported).  The VHD must not be a generation 2 virtual machine.  The VHD can be either fixed-size or dynamically expanding. A dynamically expanding VHD is recommended because it takes less time to upload to Azure than a fixed-size VHD file.  The disk must be initialized using the Master Boot Record (MBR) partitioning style. The GUID partition table (GPT) partition style is not supported.  The VHD must contain a single installation of Windows Server 2012 R2. It can contain multiple volumes, but only one that contains an installation of Windows.  The Remote Desktop Session Host (RDSH) role and the Desktop Experience feature must be installed.  The Remote Desktop Connection Broker role must  not  be installed.  The Encrypting File System (EFS) must be disabled.  The image must be SYSPREPed using the parameters  /oobe /generalize /shutdown  (DO NOT use the  /mode:vm  parameter).  Uploading your VHD from a snapshot chain is not supported.   See  Create an Azure RemoteApp image  for more information about creating images for Azure RemoteApp.", 
            "title": "Requirements for Azure RemoteApp images"
        }, 
        {
            "location": "/remoteapp-uploadimage/", 
            "text": "Upload a custom image for Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nNow that you have created your custom template image or have updated it with changes, you need to upload that image to your Azure RemoteApp image library. Use these steps.\n\n\nBefore you start\n\n\n\n\nVerify your custom image meets the \nimage requirements\n and \napplication requirements\n.\n\n\nInstall the \nAzure PowerShell module\n.\n\n\n\n\nStep by step on how to upload custom image\n\n\n\n\nOpen Azure Management Portal and navigate to the RemoteApp page.\n\n\nOn the \nTemplate images\n tab, click \nUpload\n at the bottom of the page.\n\n\nEnter a friendly name for your image and specify the storage account location. Ensure the location is the same location as your RemoteApp collection or a location where you want to create one.\n\n\nWhen prompted, download the script to your local PC.\n\n\nCopy the command parameters in the text box to your clipboard.\n\n\nOpen an elevated Windows PowerShell window.\n\n\nFrom the elevated Windows PowerShell window, navigate to the same directory where you downloaded the script.\n\n\n\n\nPaste the copied command and press \nEnter\n.\n\n\nThe upload process will begin and duration may depend on many factors including your network speed and size of the image\n\n\n\n\n\n\nIf your upload does not succeed because of network interruption or things like that, you can always resume the upload process you began. To resume an upload, run the script again using the same command line.\n\n\n\n\n\n\n\n\n[AZURE.WARNING] Never modify the upload script. Specific checks have been implemented to ensure that the image meets the image requirements and application requirements.\n\n\n\n\nCommon problems\n\n\n\n\nMake sure you use Windows PowerShell, not Azure PowerShell. You need to install the Azure PowerShell module because certain modules are needed during the upload process.\n\n\nNever alter the script, validations are there for your convenience.\n\n\nIf the vhd file gets locked out during upload, copy the file or move it to a new location and attempt upload again. There might be some Windows process that is preventing upload.", 
            "title": "Upload an image"
        }, 
        {
            "location": "/remoteapp-uploadimage/#upload-a-custom-image-for-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   Now that you have created your custom template image or have updated it with changes, you need to upload that image to your Azure RemoteApp image library. Use these steps.", 
            "title": "Upload a custom image for Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-uploadimage/#before-you-start", 
            "text": "Verify your custom image meets the  image requirements  and  application requirements .  Install the  Azure PowerShell module .", 
            "title": "Before you start"
        }, 
        {
            "location": "/remoteapp-uploadimage/#step-by-step-on-how-to-upload-custom-image", 
            "text": "Open Azure Management Portal and navigate to the RemoteApp page.  On the  Template images  tab, click  Upload  at the bottom of the page.  Enter a friendly name for your image and specify the storage account location. Ensure the location is the same location as your RemoteApp collection or a location where you want to create one.  When prompted, download the script to your local PC.  Copy the command parameters in the text box to your clipboard.  Open an elevated Windows PowerShell window.  From the elevated Windows PowerShell window, navigate to the same directory where you downloaded the script.   Paste the copied command and press  Enter .  The upload process will begin and duration may depend on many factors including your network speed and size of the image    If your upload does not succeed because of network interruption or things like that, you can always resume the upload process you began. To resume an upload, run the script again using the same command line.     [AZURE.WARNING] Never modify the upload script. Specific checks have been implemented to ensure that the image meets the image requirements and application requirements.", 
            "title": "Step by step on how to upload custom image"
        }, 
        {
            "location": "/remoteapp-uploadimage/#common-problems", 
            "text": "Make sure you use Windows PowerShell, not Azure PowerShell. You need to install the Azure PowerShell module because certain modules are needed during the upload process.  Never alter the script, validations are there for your convenience.  If the vhd file gets locked out during upload, copy the file or move it to a new location and attempt upload again. There might be some Windows process that is preventing upload.", 
            "title": "Common problems"
        }, 
        {
            "location": "/remoteapp-image-on-azurevm/", 
            "text": "Create a Azure RemoteApp image based on an Azure virtual machine\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nYou can create Azure RemoteApp images (which hold the apps you share in your collection) from an Azure virtual machine. You could also choose to use a virtual machine image we added to the Azure VM image gallery that meets all the Azure RemoteApp image requirements - you can use that VM image as a starting point for your own VM, if you want. Just look for the \"Windows Server Remote Desktop Session Host\" image in the library.\n\n\nThere are two steps to create your own image based on an Azure VM - create the image and then upload it from the Azure VM library to Azure RemoteApp.\n\n\nCreate a custom image based on an Azure VM\n\n\nUse these steps to create an image based on an Azure VM.\n\n\n\n\n\n\nCreate an Azure virtual machine. You can use the \u201cWindows Server Remote Desktop Session Host\u201d or the \"Windows Server Remote Desktop Session Host with Microsoft Office 365 ProPlus\" image from the Azure virtual machine image gallery. This image meets all the Azure RemoteApp template image requirements.\n\n\nFor details, see \nCreate a VM running Windows\n.\n\n\n\n\n\n\nConnect to the VM and install and configure the apps that you want to share through RemoteApp. Make sure to perform any additional Windows configurations required by your apps.\n\n\nFor details, see \nHow to Log on to a Virtual Machine Running Windows Server\n.\n\n\n\n\n\n\nIf you are using one of the Windows Server Remote Desktop Session Host images, there is an included validation script that will ensure your VM meets the RemoteApp pre-reqs. To run script, double-click \nValidateRemoteAppImage\n on the desktop. Ensure that all errors reported by the script are fixed before proceeding to the next step.\n\n\n\n\n\n\nSYSPREP generalize and capture the image. See \nHow to Capture a Windows Virtual Machine to Use as a Template\n for instructions.\n\n\n\n\n\n\nImport the image into the Azure RemoteApp image library\n\n\nUse these steps to import the new image into Azure RemoteApp:\n\n\n\n\n\n\nIn the \nTemplate Images\n tab:\n\n\n\n\nIf you have no existing images, click \nUpload or Import a Template Image\n.\n\n\nIf you have at least one image already, click \n+\n to add a new image.\n\n\n\n\n\n\n\n\nSelect \nImport an image from your Virtual Machines\n library, and then click \nNext\n.\n\n\n\n\n\n\nOn the next page, select your custom image from the list and confirm that you followed the steps listed when you created your image. Click \nNext\n.\n\n\n\n\nEnter a name for the new RemoteApp image and pick the location, then click the checkmark to start the import process.\n\n\n\n\n\n\n[AZURE.NOTE] You can import images from any Azure location supported by Azure Virtual Machines to any Azure location supported by Azure RemoteApp. Depending on the locations the import can take up to 25 minutes.\n\n\n\n\nNow you are ready to create your new collection, either a \ncloud\n collection or \nhybrid\n, depending on your needs.", 
            "title": "Create an image from an Azure VM"
        }, 
        {
            "location": "/remoteapp-image-on-azurevm/#create-a-azure-remoteapp-image-based-on-an-azure-virtual-machine", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   You can create Azure RemoteApp images (which hold the apps you share in your collection) from an Azure virtual machine. You could also choose to use a virtual machine image we added to the Azure VM image gallery that meets all the Azure RemoteApp image requirements - you can use that VM image as a starting point for your own VM, if you want. Just look for the \"Windows Server Remote Desktop Session Host\" image in the library.  There are two steps to create your own image based on an Azure VM - create the image and then upload it from the Azure VM library to Azure RemoteApp.", 
            "title": "Create a Azure RemoteApp image based on an Azure virtual machine"
        }, 
        {
            "location": "/remoteapp-image-on-azurevm/#create-a-custom-image-based-on-an-azure-vm", 
            "text": "Use these steps to create an image based on an Azure VM.    Create an Azure virtual machine. You can use the \u201cWindows Server Remote Desktop Session Host\u201d or the \"Windows Server Remote Desktop Session Host with Microsoft Office 365 ProPlus\" image from the Azure virtual machine image gallery. This image meets all the Azure RemoteApp template image requirements.  For details, see  Create a VM running Windows .    Connect to the VM and install and configure the apps that you want to share through RemoteApp. Make sure to perform any additional Windows configurations required by your apps.  For details, see  How to Log on to a Virtual Machine Running Windows Server .    If you are using one of the Windows Server Remote Desktop Session Host images, there is an included validation script that will ensure your VM meets the RemoteApp pre-reqs. To run script, double-click  ValidateRemoteAppImage  on the desktop. Ensure that all errors reported by the script are fixed before proceeding to the next step.    SYSPREP generalize and capture the image. See  How to Capture a Windows Virtual Machine to Use as a Template  for instructions.", 
            "title": "Create a custom image based on an Azure VM"
        }, 
        {
            "location": "/remoteapp-image-on-azurevm/#import-the-image-into-the-azure-remoteapp-image-library", 
            "text": "Use these steps to import the new image into Azure RemoteApp:    In the  Template Images  tab:   If you have no existing images, click  Upload or Import a Template Image .  If you have at least one image already, click  +  to add a new image.     Select  Import an image from your Virtual Machines  library, and then click  Next .    On the next page, select your custom image from the list and confirm that you followed the steps listed when you created your image. Click  Next .   Enter a name for the new RemoteApp image and pick the location, then click the checkmark to start the import process.    [AZURE.NOTE] You can import images from any Azure location supported by Azure Virtual Machines to any Azure location supported by Azure RemoteApp. Depending on the locations the import can take up to 25 minutes.   Now you are ready to create your new collection, either a  cloud  collection or  hybrid , depending on your needs.", 
            "title": "Import the image into the Azure RemoteApp image library"
        }, 
        {
            "location": "/remoteapp-planvnet/", 
            "text": "How to plan your virtual network for Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nThis document describes how to set up your Azure virtual network (VNET) and the subnet for Azure RemoteApp. If you are unfamiliar with Azure virtual networks, this is a capability that helps you to virtualize your network infrastructure to the cloud and to create hybrid solutions with Azure and your on-premises resources. You can read more about it \nhere\n.\n\n\nIf you want to define security policies for traffic (both incoming and outgoing) in your virtual network where you are deploying Azure RemoteApp, we strongly recommend creating a separate subnet for Azure RemoteApp from the rest of your deployments in the Azure virtual network. For more information on how to define security policies on your Azure virtual network subnet, please read \nWhat is a Network Security Group (NSG)?\n.\n\n\nTypes of Azure RemoteApp collections with Azure virtual networks\n\n\nThe following graphics show the two different collection options when you want to use a virtual network.\n\n\nAzure RemoteApp cloud collection with VNET\n\n\n\n\nThis represents an Azure RemoteApp collection where all the resources that the RemoteApp session hosts need to access are deployed in Azure. They can be in the same VNET as the RemoteApp VNET or a different VNET in Azure.\n\n\nAzure RemoteApp hybrid collection with VNET\n\n\n\n\nThis represents an Azure RemoteApp collection where some of the resources that the RemoteApp session hosts need to access are deployed on-premises. The RemoteApp VNET is linked to the on-premises network using Azure hybrid technologies like site-to-site VPN or Express Route.\n\n\nHow the system works\n\n\nUnder the covers Azure RemoteApp deploys Azure virtual machines (with your uploaded image) to the virtual network subnet that you chose during provisioning. If you opted for a hybrid collection, we try to resolve the FQDN of the domain controller you entered in the provisioning workflow with the DNS server provided in the virtual network.\n\nIf you are connecting to an existing virtual network, make sure to expose the necessary ports in your network security groups in your Azure RemoteApp subnet. \n\n\nWe recommend you use a \nlarge enough  subnet for Azure RemoteApp\n. The largest supported by Azure Virtual network is /8 (using CIDR subnet definitions). Your subnet should be large enough to accommodate all the Azure RemoteApp VMs during scale-up when more users are accessing the apps. \n\n\nFollowing are the things you will need to enable on your virtual network subnet: \n\n\n\n\nOutbound traffic from the subnet should be allowed on port range 10101-10175 to communicate with one of the internal Azure RemoteApp services.\n\n\nOutbound traffic should be allowed from your subnet to connect to Azure Storage on port 443\n\n\nIf you have Active Directory hosted in Azure, make sure any VM within the virtual network subnet for Azure RemoteApp is able to connect to that domain controller. The DNS in the virtual network should be able to resolve the FQDN of this domain controller.\n\n\n\n\nVirtual network with forced tunneling\n\n\nForced tunneling\n is now supported for all new Azure RemoteApp collections. We currently do not support the migration of an existing collection to support forced tunneling.  You will have to delete all your existing collections using the VNET that you are linking to Azure RemoteApp and create a new one to get forced tunneling enabled on your collections.", 
            "title": "Plan your VNET"
        }, 
        {
            "location": "/remoteapp-planvnet/#how-to-plan-your-virtual-network-for-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   This document describes how to set up your Azure virtual network (VNET) and the subnet for Azure RemoteApp. If you are unfamiliar with Azure virtual networks, this is a capability that helps you to virtualize your network infrastructure to the cloud and to create hybrid solutions with Azure and your on-premises resources. You can read more about it  here .  If you want to define security policies for traffic (both incoming and outgoing) in your virtual network where you are deploying Azure RemoteApp, we strongly recommend creating a separate subnet for Azure RemoteApp from the rest of your deployments in the Azure virtual network. For more information on how to define security policies on your Azure virtual network subnet, please read  What is a Network Security Group (NSG)? .", 
            "title": "How to plan your virtual network for Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-planvnet/#types-of-azure-remoteapp-collections-with-azure-virtual-networks", 
            "text": "The following graphics show the two different collection options when you want to use a virtual network.", 
            "title": "Types of Azure RemoteApp collections with Azure virtual networks"
        }, 
        {
            "location": "/remoteapp-planvnet/#azure-remoteapp-cloud-collection-with-vnet", 
            "text": "This represents an Azure RemoteApp collection where all the resources that the RemoteApp session hosts need to access are deployed in Azure. They can be in the same VNET as the RemoteApp VNET or a different VNET in Azure.", 
            "title": "Azure RemoteApp cloud collection with VNET"
        }, 
        {
            "location": "/remoteapp-planvnet/#azure-remoteapp-hybrid-collection-with-vnet", 
            "text": "This represents an Azure RemoteApp collection where some of the resources that the RemoteApp session hosts need to access are deployed on-premises. The RemoteApp VNET is linked to the on-premises network using Azure hybrid technologies like site-to-site VPN or Express Route.", 
            "title": "Azure RemoteApp hybrid collection with VNET"
        }, 
        {
            "location": "/remoteapp-planvnet/#how-the-system-works", 
            "text": "Under the covers Azure RemoteApp deploys Azure virtual machines (with your uploaded image) to the virtual network subnet that you chose during provisioning. If you opted for a hybrid collection, we try to resolve the FQDN of the domain controller you entered in the provisioning workflow with the DNS server provided in the virtual network. \nIf you are connecting to an existing virtual network, make sure to expose the necessary ports in your network security groups in your Azure RemoteApp subnet.   We recommend you use a  large enough  subnet for Azure RemoteApp . The largest supported by Azure Virtual network is /8 (using CIDR subnet definitions). Your subnet should be large enough to accommodate all the Azure RemoteApp VMs during scale-up when more users are accessing the apps.   Following are the things you will need to enable on your virtual network subnet:    Outbound traffic from the subnet should be allowed on port range 10101-10175 to communicate with one of the internal Azure RemoteApp services.  Outbound traffic should be allowed from your subnet to connect to Azure Storage on port 443  If you have Active Directory hosted in Azure, make sure any VM within the virtual network subnet for Azure RemoteApp is able to connect to that domain controller. The DNS in the virtual network should be able to resolve the FQDN of this domain controller.", 
            "title": "How the system works"
        }, 
        {
            "location": "/remoteapp-planvnet/#virtual-network-with-forced-tunneling", 
            "text": "Forced tunneling  is now supported for all new Azure RemoteApp collections. We currently do not support the migration of an existing collection to support forced tunneling.  You will have to delete all your existing collections using the VNET that you are linking to Azure RemoteApp and create a new one to get forced tunneling enabled on your collections.", 
            "title": "Virtual network with forced tunneling"
        }, 
        {
            "location": "/remoteapp-ports/", 
            "text": "List of Ports and URLs to permit access for Azure RemoteApp Deployed in customer Virtual Network\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nThe following applies to Azure RemoteApp a cloud or hybrid collection if you are deploying it in a virtual network (VNET). For more information on virtual networks, please read \nVirtual Network Overview\n. If you have created a network security group (NSG) restricting traffic to your virtual network resources which you have chosen for Azure RemoteApp, please make sure the following are accessible and allowed through the security policies on the virtual network. For more information on network security groups, please read \nWhat is a Network Security Group? (NSG)\n.\n\n\nAzure RemoteApp subnet needs access to these endpoints and URLs:\n\n\n\n\n*.servicebus.windows.net\n\n\n*.servicebus.net\n\n\nhttps://*.remoteapp.windwsazure.com  \n\n\nhttps://www.remoteapp.windowsazure.com \n\n\nhttps://*remoteapp.windowsazure.com  \n\n\nhttps://*.core.windows.net  \n\n\nOutbound: TCP: 443, TCP: 10101-10175 \n\n\nOptional \u2013 UDP: 10201-10275  \n\n\n\n\nAzure RemoteApp clients need access to these endpoints and URLs:\n\n\nBy clients I mean the desktops, devices etc. that people use to connect to the apps deployed in the Azure RemoteApp collection.\n\n\n\n\nhttps://telemetry.remoteapp.windowsazure.com  \n\n\nhttps://*.remoteapp.windowsazure.com (the optional UDP ports are for this address) \n\n\nhttps://login.windows.net  \n\n\nhttps://login.microsoftonline.com  \n\n\nhttps://www.remoteapp.windowsazure.com \n\n\nhttps://*.core.windows.net  \n\n\nOutbound: TCP: 443  \n\n\nOptional - UDP: 3391", 
            "title": "Port and URL info"
        }, 
        {
            "location": "/remoteapp-ports/#list-of-ports-and-urls-to-permit-access-for-azure-remoteapp-deployed-in-customer-virtual-network", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   The following applies to Azure RemoteApp a cloud or hybrid collection if you are deploying it in a virtual network (VNET). For more information on virtual networks, please read  Virtual Network Overview . If you have created a network security group (NSG) restricting traffic to your virtual network resources which you have chosen for Azure RemoteApp, please make sure the following are accessible and allowed through the security policies on the virtual network. For more information on network security groups, please read  What is a Network Security Group? (NSG) .", 
            "title": "List of Ports and URLs to permit access for Azure RemoteApp Deployed in customer Virtual Network"
        }, 
        {
            "location": "/remoteapp-ports/#azure-remoteapp-subnet-needs-access-to-these-endpoints-and-urls", 
            "text": "*.servicebus.windows.net  *.servicebus.net  https://*.remoteapp.windwsazure.com    https://www.remoteapp.windowsazure.com   https://*remoteapp.windowsazure.com    https://*.core.windows.net    Outbound: TCP: 443, TCP: 10101-10175   Optional \u2013 UDP: 10201-10275", 
            "title": "Azure RemoteApp subnet needs access to these endpoints and URLs:"
        }, 
        {
            "location": "/remoteapp-ports/#azure-remoteapp-clients-need-access-to-these-endpoints-and-urls", 
            "text": "By clients I mean the desktops, devices etc. that people use to connect to the apps deployed in the Azure RemoteApp collection.   https://telemetry.remoteapp.windowsazure.com    https://*.remoteapp.windowsazure.com (the optional UDP ports are for this address)   https://login.windows.net    https://login.microsoftonline.com    https://www.remoteapp.windowsazure.com   https://*.core.windows.net    Outbound: TCP: 443    Optional - UDP: 3391", 
            "title": "Azure RemoteApp clients need access to these endpoints and URLs:"
        }, 
        {
            "location": "/remoteapp-vnet/", 
            "text": "Validate the Azure VNET to use with Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nBefore you use an Azure VNET with Azure RemoteApp, you might want to validate the VNET. This helps prevent issues with connectivity.\n\n\nTo validate your Azure VNET, do the following:\n\n\n\n\n\n\nCreate an Azure virtual machine inside the subnet of the Azure VNET you want to use with Azure RemoteApp.\n\n\n\n\n\n\nConnect to that VM by using the \nConnect\n option in the management portal.\n\n\n\n\nJoin the virtual machine to the same domain that you want to use with Azure RemoteApp. If you are creating a hybrid collection that connects to your on-premises network, join the virtual machine to your local domain.\n\n\n\n\nIf this is successful, the Azure VNET is ready to use with RemoteApp.\n\n\nFor more information about the end-to-end hybrid collection workflow, see the following articles:\n\n\n\n\nHow to plan your virtual network for Azure RemoteApp\n\n\nCreate a hybrid collection\n\n\nDeploy Azure RemoteApp collection to your Azure Virtual Network (with support for ExpressRoute)", 
            "title": "Validate your VNET"
        }, 
        {
            "location": "/remoteapp-vnet/#validate-the-azure-vnet-to-use-with-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   Before you use an Azure VNET with Azure RemoteApp, you might want to validate the VNET. This helps prevent issues with connectivity.  To validate your Azure VNET, do the following:    Create an Azure virtual machine inside the subnet of the Azure VNET you want to use with Azure RemoteApp.    Connect to that VM by using the  Connect  option in the management portal.   Join the virtual machine to the same domain that you want to use with Azure RemoteApp. If you are creating a hybrid collection that connects to your on-premises network, join the virtual machine to your local domain.   If this is successful, the Azure VNET is ready to use with RemoteApp.  For more information about the end-to-end hybrid collection workflow, see the following articles:   How to plan your virtual network for Azure RemoteApp  Create a hybrid collection  Deploy Azure RemoteApp collection to your Azure Virtual Network (with support for ExpressRoute)", 
            "title": "Validate the Azure VNET to use with Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-migrate/", 
            "text": "How to migrate data into and out of Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nYou can use many different tools and methods to transfer \nuser data\n into and out of Azure RemoteApp. Here are a few methods:\n\n\n\n\nCopy and paste using clipboard sharing\n\n\nCopy files and data to a file server\n\n\nCopy files to OneDrive for Business through a browser\n\n\nCopy files using redirection\n\n\n\n\n\n\n[AZURE.NOTE] \nYou cannot enable the OneDrive for Business or Consumer sync agents - they \nare not supported\n in Azure RemoteApp.\n\n\n\n\nUse copy and paste in File Explorer\n\n\nCopy and paste using the clipboard is enabled in RemoteApp deployments \nby default\n. This lets users copy files between their local PC and RemoteApp apps. Often, through the normal course of using apps in RemoteApp, users have saved files to their UPDs - moving that data out of RemoteApp is easy:\n\n\n\n\nPublish File Explorer as an app\n in a RemoteApp collection. (Note that this is an administrative task.)\n\n\nDirect your users to launch the File Explorer app you published and to use that to copy and paste files both into their UPD and out of it.\n\n\n\n\nUpload files and data to a file server by using standard network file copy\n\n\nOften organizations use file servers to store general data. If you know the server name or location, your users can browse the local network for the server and then copy their files there, much like they did above. Again you'll want to publish File Explorer to RemoteApp and then share it with your users.\n\n\n\n\n[AZURE.NOTE] \nThe file server must be on the routable network that RemoteApp was deployed into.\n\n\n\n\nCopy files to OneDrive for Business\n\n\nAlthough you cannot enable the OneDrive for Business sync agent in RemoteApp, you can still copy files from your UPD to OneDrive for Business through a browser. \n\n\n\n\nPublish File Explorer to RemoteApp and then tell users to access the files through that app. \n\n\nIt's easiest to transfer files if they are compressed, so users should create a .zip file that contains all of the files to move to OneDrive for Business.\n\n\nAsk users to go to the Office 365 portal, and then go to OneDrive and upload the .zip file.\n\n\n\n\nCopy files by using drive redirection\n\n\nIf you have enabled \ndrive redirection\n, you have already created a mapped drive for your users. In this case, they can zip their files on the redirected drive and then save them to their local PC.", 
            "title": "Migrate to an Azure VNET"
        }, 
        {
            "location": "/remoteapp-migrate/#how-to-migrate-data-into-and-out-of-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   You can use many different tools and methods to transfer  user data  into and out of Azure RemoteApp. Here are a few methods:   Copy and paste using clipboard sharing  Copy files and data to a file server  Copy files to OneDrive for Business through a browser  Copy files using redirection    [AZURE.NOTE] \nYou cannot enable the OneDrive for Business or Consumer sync agents - they  are not supported  in Azure RemoteApp.", 
            "title": "How to migrate data into and out of Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-migrate/#use-copy-and-paste-in-file-explorer", 
            "text": "Copy and paste using the clipboard is enabled in RemoteApp deployments  by default . This lets users copy files between their local PC and RemoteApp apps. Often, through the normal course of using apps in RemoteApp, users have saved files to their UPDs - moving that data out of RemoteApp is easy:   Publish File Explorer as an app  in a RemoteApp collection. (Note that this is an administrative task.)  Direct your users to launch the File Explorer app you published and to use that to copy and paste files both into their UPD and out of it.", 
            "title": "Use copy and paste in File Explorer"
        }, 
        {
            "location": "/remoteapp-migrate/#upload-files-and-data-to-a-file-server-by-using-standard-network-file-copy", 
            "text": "Often organizations use file servers to store general data. If you know the server name or location, your users can browse the local network for the server and then copy their files there, much like they did above. Again you'll want to publish File Explorer to RemoteApp and then share it with your users.   [AZURE.NOTE] \nThe file server must be on the routable network that RemoteApp was deployed into.", 
            "title": "Upload files and data to a file server by using standard network file copy"
        }, 
        {
            "location": "/remoteapp-migrate/#copy-files-to-onedrive-for-business", 
            "text": "Although you cannot enable the OneDrive for Business sync agent in RemoteApp, you can still copy files from your UPD to OneDrive for Business through a browser.    Publish File Explorer to RemoteApp and then tell users to access the files through that app.   It's easiest to transfer files if they are compressed, so users should create a .zip file that contains all of the files to move to OneDrive for Business.  Ask users to go to the Office 365 portal, and then go to OneDrive and upload the .zip file.", 
            "title": "Copy files to OneDrive for Business"
        }, 
        {
            "location": "/remoteapp-migrate/#copy-files-by-using-drive-redirection", 
            "text": "If you have enabled  drive redirection , you have already created a mapped drive for your users. In this case, they can zip their files on the redirected drive and then save them to their local PC.", 
            "title": "Copy files by using drive redirection"
        }, 
        {
            "location": "/remoteapp-publish/", 
            "text": "How to publish an app in RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nAfter you create your RemoteApp collection, you need to publish the apps or resources that you want to make available for your users. The template images provided with your subscription only have a few apps published by default - to share the other apps, you need to publish them.\n\n\n\n\n[AZURE.NOTE] Do you need to update an app? You'll need to \nupdate the image\n first.\n\n\n\n\nOn the \nPublishing\n tab in the portal, click \nPublish\n. You can either add an app from your template image's \nStart\n menu or provide the path to where the app is installed on the template image. If you choose to add from the \nStart\n menu, choose the app to publish from the list. If you choose to provide the path to the app, enter a name for the app and the path to the app. Use variables in the path - for example, \"%systemdrive%\" instead of \"c:\\\".\n\n\n\n\n[AZURE.NOTE] If you want to add your app from the \nStart\n menu, you need to have \nadded that app to the \nStart\n menu on your template image.\n Otherwise, RemoteApp will only see what \nis\n on the \nStart\n menu, and you will be confused. \n\n\nTo make sure your app is in the \nStart\n menu, place a shortcut file - \n.lnk\n - inside the %systemdrive%\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs folder.\n\n\nIf you forgot to add the app to the \nStart\n menu when you created the template, choose to add the path to the app. (Or recreate your template image, but that's quite a bit more work.)", 
            "title": "How to publish an app"
        }, 
        {
            "location": "/remoteapp-publish/#how-to-publish-an-app-in-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   After you create your RemoteApp collection, you need to publish the apps or resources that you want to make available for your users. The template images provided with your subscription only have a few apps published by default - to share the other apps, you need to publish them.   [AZURE.NOTE] Do you need to update an app? You'll need to  update the image  first.   On the  Publishing  tab in the portal, click  Publish . You can either add an app from your template image's  Start  menu or provide the path to where the app is installed on the template image. If you choose to add from the  Start  menu, choose the app to publish from the list. If you choose to provide the path to the app, enter a name for the app and the path to the app. Use variables in the path - for example, \"%systemdrive%\" instead of \"c:\\\".   [AZURE.NOTE] If you want to add your app from the  Start  menu, you need to have  added that app to the  Start  menu on your template image.  Otherwise, RemoteApp will only see what  is  on the  Start  menu, and you will be confused.   To make sure your app is in the  Start  menu, place a shortcut file -  .lnk  - inside the %systemdrive%\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs folder.  If you forgot to add the app to the  Start  menu when you created the template, choose to add the path to the app. (Or recreate your template image, but that's quite a bit more work.)", 
            "title": "How to publish an app in RemoteApp"
        }, 
        {
            "location": "/remoteapp-user/", 
            "text": "How to add a user to your Azure RemoteApp collection\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nBefore your users can see and use your apps in Azure RemoteApp, you have to grant them access to your collection. This is the easy part: On the \nUser Access\n tab, enter the account information for the user, and then click the check mark.\n\n\nWhat account information do you need? That depends on the type of collection you created (cloud or hybrid) and whether you are using Office 365 ProPlus in that collection.\n\n\nSupported user identities\n\n\nThe different collection types (cloud vs. hybrid) support using different user identities for access to applications.  \n\n\nFor a hybrid collection of RemoteApp, you need to set up an Active Directory domain infrastructure on premises and an Azure Active Directory tenant with Directory Integration (and optionally single sign-on). Additionally, you need to create some Active Directory objects in the on-premises directory.  \n\n\nFor a cloud collection of RemoteApp, any user that has Azure Active Directory support identities can be granted user access to RemoteApp to include Microsoft Accounts.  See the table below.\n\n\nOffice 365 users are Azure Active Directory users. If they have Azure Active Directory hybrid, Directory synchronized accounts, they can be granted user access in a RemoteApp hybrid deployment.   \n\n\nYou can use this table as a quick reference for which identity is supported in your collection and what the Active Directory requirements are.\n\n\n\n\n\n\n\n\nUser accounts\n\n\nCloud\n\n\nHybrid\n\n\n\n\n\n\n\n\n\n\nMicrosoft Account\n\n\nYes\n\n\nNo\n\n\n\n\n\n\nAzure Active Directory (Azure AD)\n\n\n\n\n\n\n\n\n\n\nAzure AD cloud only\n\n\nYes\n\n\nNo\n\n\n\n\n\n\nADsync with password sync\n\n\nYes\n\n\nYes\n\n\n\n\n\n\nADsync without password sync\n\n\nYes\n\n\nNo\n\n\n\n\n\n\nADsync with AD FS\n\n\nYes\n\n\nYes\n\n\n\n\n\n\n3rd-party Azure supported identity providers\n  (example Ping)\n\n\nYes\n\n\nYes\n\n\n\n\n\n\nMulti-Factor Authentication\n\n\nYes\n\n\nYes\n\n\n\n\n\n\n\n\nCheck out \nmore information\n about configuring Active Directory for RemoteApp.\n\n\n\n\n[AZURE.NOTE] The Azure Active Directory users must be from the tenant that's associated with your subscription. (You can view and modify your subscription on the \nSettings\n tab in the portal. See \nChange the Azure Active Directory tenant used by RemoteApp\n for more information.)\n\n\n\n\nOffice 365 ProPlus user account information\n\n\nIf you are using the Office 365 ProPlus template image in your collection \nor\n if you created a custom image that uses Office 365, you are only allowed to add Azure Active Directory users that have Office 365 subscriptions for the default domain of your subscription. See \nUsing Office 365 with Azure RemoteApp\n for more information.", 
            "title": "How to add users"
        }, 
        {
            "location": "/remoteapp-user/#how-to-add-a-user-to-your-azure-remoteapp-collection", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   Before your users can see and use your apps in Azure RemoteApp, you have to grant them access to your collection. This is the easy part: On the  User Access  tab, enter the account information for the user, and then click the check mark.  What account information do you need? That depends on the type of collection you created (cloud or hybrid) and whether you are using Office 365 ProPlus in that collection.", 
            "title": "How to add a user to your Azure RemoteApp collection"
        }, 
        {
            "location": "/remoteapp-user/#supported-user-identities", 
            "text": "The different collection types (cloud vs. hybrid) support using different user identities for access to applications.    For a hybrid collection of RemoteApp, you need to set up an Active Directory domain infrastructure on premises and an Azure Active Directory tenant with Directory Integration (and optionally single sign-on). Additionally, you need to create some Active Directory objects in the on-premises directory.    For a cloud collection of RemoteApp, any user that has Azure Active Directory support identities can be granted user access to RemoteApp to include Microsoft Accounts.  See the table below.  Office 365 users are Azure Active Directory users. If they have Azure Active Directory hybrid, Directory synchronized accounts, they can be granted user access in a RemoteApp hybrid deployment.     You can use this table as a quick reference for which identity is supported in your collection and what the Active Directory requirements are.     User accounts  Cloud  Hybrid      Microsoft Account  Yes  No    Azure Active Directory (Azure AD)      Azure AD cloud only  Yes  No    ADsync with password sync  Yes  Yes    ADsync without password sync  Yes  No    ADsync with AD FS  Yes  Yes    3rd-party Azure supported identity providers   (example Ping)  Yes  Yes    Multi-Factor Authentication  Yes  Yes     Check out  more information  about configuring Active Directory for RemoteApp.   [AZURE.NOTE] The Azure Active Directory users must be from the tenant that's associated with your subscription. (You can view and modify your subscription on the  Settings  tab in the portal. See  Change the Azure Active Directory tenant used by RemoteApp  for more information.)", 
            "title": "Supported user identities"
        }, 
        {
            "location": "/remoteapp-user/#office-365-proplus-user-account-information", 
            "text": "If you are using the Office 365 ProPlus template image in your collection  or  if you created a custom image that uses Office 365, you are only allowed to add Azure Active Directory users that have Office 365 subscriptions for the default domain of your subscription. See  Using Office 365 with Azure RemoteApp  for more information.", 
            "title": "Office 365 ProPlus user account information"
        }, 
        {
            "location": "/remoteapp-ad/", 
            "text": "Azure AD + Active Directory requirements for Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nFor your Azure RemoteApp hybrid collection or for a cloud collection that you want to federate using AD Connect, you need to do the following.\n\n\nConnect Azure AD and Active Directory\n\n\nIf you want to connect your Azure AD tenant and your on-premises Active Directory environments, use AD Connect. It will take you only \n4 clicks\n to connect the two directories.\n\n\nNote - Directory synchronization is required for hybrid collections.\n\n\nMake sure your \"@domain.com\" match\n\n\nBefore you get started, make sure that the UPN for your on-premises forest matches the suffix of your Azure AD domain. \n\n\nAfter you set up the UPN domain suffix in Azure AD, all users logging into Azure RemoteApp will log in as \u201cuser@\n\u201d. Make sure that users can also log in with the same user@suffix into the on-premises domain. In certain cases you can set up one domain name in Azure AD while specifying a different domain suffix for the user on-prem. In this case, your users won't be able to connect to any domain-joined computers or resources through Azure RemoteApp.\n\n\nFor example, if you set up your UPN domain suffix in AAD as contoso.com, but some users on premises/AD are configured to log in with @contoso.uk, then those users will not be able to correctly log into the ARA collection. Users UPN in AAD and AD must be the same for the login to be possible\u201d\n\n\nCreate objects for Azure RemoteApp\n\n\nYou also need to create the following on-premises Active Directory objects:\n\n\n\n\nA service account to provide access to domain resources for RemoteApp programs by joining RDSH end points to the on-premises domain.\n\n\nAn Organizational Unit (OU) to contain RemoteApp machine objects. Use of the OU is recommended (but not required) to isolate the accounts and policies you will use with RemoteApp.\n\n\n\n\nYou need both of these objects when you create your RemoteApp collection, so be sure to do these steps first.", 
            "title": "Configure Active Directory"
        }, 
        {
            "location": "/remoteapp-ad/#azure-ad-active-directory-requirements-for-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   For your Azure RemoteApp hybrid collection or for a cloud collection that you want to federate using AD Connect, you need to do the following.", 
            "title": "Azure AD + Active Directory requirements for Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-ad/#connect-azure-ad-and-active-directory", 
            "text": "If you want to connect your Azure AD tenant and your on-premises Active Directory environments, use AD Connect. It will take you only  4 clicks  to connect the two directories.  Note - Directory synchronization is required for hybrid collections.", 
            "title": "Connect Azure AD and Active Directory"
        }, 
        {
            "location": "/remoteapp-ad/#make-sure-your-domaincom-match", 
            "text": "Before you get started, make sure that the UPN for your on-premises forest matches the suffix of your Azure AD domain.   After you set up the UPN domain suffix in Azure AD, all users logging into Azure RemoteApp will log in as \u201cuser@ \u201d. Make sure that users can also log in with the same user@suffix into the on-premises domain. In certain cases you can set up one domain name in Azure AD while specifying a different domain suffix for the user on-prem. In this case, your users won't be able to connect to any domain-joined computers or resources through Azure RemoteApp.  For example, if you set up your UPN domain suffix in AAD as contoso.com, but some users on premises/AD are configured to log in with @contoso.uk, then those users will not be able to correctly log into the ARA collection. Users UPN in AAD and AD must be the same for the login to be possible\u201d", 
            "title": "Make sure your \"@domain.com\" match"
        }, 
        {
            "location": "/remoteapp-ad/#create-objects-for-azure-remoteapp", 
            "text": "You also need to create the following on-premises Active Directory objects:   A service account to provide access to domain resources for RemoteApp programs by joining RDSH end points to the on-premises domain.  An Organizational Unit (OU) to contain RemoteApp machine objects. Use of the OU is recommended (but not required) to isolate the accounts and policies you will use with RemoteApp.   You need both of these objects when you create your RemoteApp collection, so be sure to do these steps first.", 
            "title": "Create objects for Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-changetenant/", 
            "text": "Change the Azure Active Directory tenant in Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nAzure RemoteApp uses Azure Active Directory (Azure AD) to allow user access. The only Azure AD tenant that you can use in Azure RemoteApp is the one associated with the Azure subscription. You can view the associated subscription on the \nSettings\n page in the portal. Look at the \nDirectory\n column on the \nSubscriptions\n tab.\n\n\n\n\n[AZURE.NOTE] For this change to succeed, first remove all users from the existing Azure Active Directory tenant from all Azure RemoteApp collections. To do this, go to the Azure Portal, go to the \nAzure RemoteApp\n tab and open every Azure RemoteApp collection. Go to the \nUsers\n tab and remove users that belong to your current Azure Active Directory tenant. Repeat for all existing Azure RemoteApp collections. Without doing this, you will not be able to create or patch collections.\n\n\n\n\nIf you want to use a different tenant, use these steps to change the association with your subscription:\n\n\n\n\n\n\nIn the portal, remove any Azure AD users to which you\u2019ve given access to Azure RemoteApp collections. (See the note above for steps on how to do this.)\n\n\n\n\n\n\nSet a Microsoft account (formerly called a Live ID) as the Service administrator. (Don't know if you already are the service admin? You can find out by clicking \nSettings -\n Administrators\n.) Now, here's how you change that:\n\n\n\n\nClick the user in the upper right corner, and then click \nView my bill\n.\n\n\nClick the subscription. Then, on the new page, scroll down and click \nEdit subscription details\n in the right. (Sort of the middle bottom right, if that helps you find it.)\n\n\nType the Microsoft account for the user that should be the service admin.\n\n\n\n\n\n\n\n\nNow, sign out of the portal, and then sign back in with the Microsoft account you specified in the previous step.\n\n\n\n\n\n\nClick \nNew -\n App Services -\n Active Directory -\n Directory -\n Custom Create\n.\n\n\n\n\nUnder \nDirectory\n, choose \nUse existing directory\n. We're going to have to sign you out of the portal now, so choose \nI am ready to be signed out now\n.\n\n\nSign back into the portal as a global admin of the directory you want to add. (If you weren't already a global admin, you will be after a round of sign in and then sign out.)\n\n\nYou'll be asked when you sign in if you want to use your existing AD tenant with your subscription. Click \nContinue\n, and then click \nSign out now\n.\n\n\nSign back in again, and go back to \nSettings -\n Subscriptions\n. Select your subscription, and then click \nEdit Directory\n. Select the Azure AD tenant that you want to use.\n\n\n\n\nYou can now use the new Azure AD tenant to control access to the Azure subscription and to configure user access in Azure RemoteApp.", 
            "title": "Change the Azure AD tenant"
        }, 
        {
            "location": "/remoteapp-changetenant/#change-the-azure-active-directory-tenant-in-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   Azure RemoteApp uses Azure Active Directory (Azure AD) to allow user access. The only Azure AD tenant that you can use in Azure RemoteApp is the one associated with the Azure subscription. You can view the associated subscription on the  Settings  page in the portal. Look at the  Directory  column on the  Subscriptions  tab.   [AZURE.NOTE] For this change to succeed, first remove all users from the existing Azure Active Directory tenant from all Azure RemoteApp collections. To do this, go to the Azure Portal, go to the  Azure RemoteApp  tab and open every Azure RemoteApp collection. Go to the  Users  tab and remove users that belong to your current Azure Active Directory tenant. Repeat for all existing Azure RemoteApp collections. Without doing this, you will not be able to create or patch collections.   If you want to use a different tenant, use these steps to change the association with your subscription:    In the portal, remove any Azure AD users to which you\u2019ve given access to Azure RemoteApp collections. (See the note above for steps on how to do this.)    Set a Microsoft account (formerly called a Live ID) as the Service administrator. (Don't know if you already are the service admin? You can find out by clicking  Settings -  Administrators .) Now, here's how you change that:   Click the user in the upper right corner, and then click  View my bill .  Click the subscription. Then, on the new page, scroll down and click  Edit subscription details  in the right. (Sort of the middle bottom right, if that helps you find it.)  Type the Microsoft account for the user that should be the service admin.     Now, sign out of the portal, and then sign back in with the Microsoft account you specified in the previous step.    Click  New -  App Services -  Active Directory -  Directory -  Custom Create .   Under  Directory , choose  Use existing directory . We're going to have to sign you out of the portal now, so choose  I am ready to be signed out now .  Sign back into the portal as a global admin of the directory you want to add. (If you weren't already a global admin, you will be after a round of sign in and then sign out.)  You'll be asked when you sign in if you want to use your existing AD tenant with your subscription. Click  Continue , and then click  Sign out now .  Sign back in again, and go back to  Settings -  Subscriptions . Select your subscription, and then click  Edit Directory . Select the Azure AD tenant that you want to use.   You can now use the new Azure AD tenant to control access to the Azure subscription and to configure user access in Azure RemoteApp.", 
            "title": "Change the Azure Active Directory tenant in Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-o365user/", 
            "text": "How to use Azure RemoteApp with Office 365 user accounts\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nIf you have an Office 365 subscription you have an Azure Active Directory that stores your user names and passwords used to access Office 365 services. For example, when your users activate Office 365 ProPlus they authenticate against Azure AD to check for licenses. Most customers would like to use the same directory with Azure RemoteApp.\n\n\nIf you are deploying Azure RemoteApp you are most likely using an Azure subscription that is associated with a different Azure AD. In order to use your Office 365 directory, you will need to move the Azure subscription into that directory.\n\n\nFor info on how to deploy Office 365 client applications, see \nHow to use your Office 365 subscription with Azure RemoteApp\n.\n\n\nPhase 1: Register your free Office 365 Azure Active Directory subscription\n\n\nIf you are using the Azure classic portal, use the steps in \nRegister your free Azure Active Directory subscription\n to get administrative access to your Azure AD via the Azure Management Portal. As the result of this process you should be able to log into the Azure portal and see your directory there \u2013 at this point you won\u2019t see much more since the full Azure subscription you are using with Azure RemoteApp is in a different directory.\n\n\nRemember the name and password of the administrator account you created in this step \u2013 they will be needed in Phase 2.\n\n\nIf you are using the Azure portal, check out \nHow to register and activate a free Azure Active Directory using Office 365 portal\n.\n\n\nPhase 2: Change the Azure AD associated with your Azure subscription.\n\n\nWe are going to change your Azure subscription from its current directory into the Office 365 directory we worked with in Phase 1.\n\n\nFollow the instructions described in \nChange the Azure Active Directory tenant in Azure RemoteApp\n. Pay particular attention to the following steps:\n\n\n\n\nStep #1: If you have deployed Azure RemoteApp (ARA) in this subscription, make sure you remove all Azure AD user accounts from any ARA collections first, before trying anything else. Alternatively, you can consider deleting any existing collections.\n\n\nStep #2: This is a critical step. You need to use a Microsoft account (e.g. @outlook.com) as a Service Administrator on the subscription; this is because we cannot have any user accounts from the existing Azure AD attached to the subscription \u2013 if we do, we won\u2019t be able to move it to a different Azure AD.\n\n\nStep #4: When adding an existing directory, the system will ask you to sign in with the administrator account for that directory. Make sure to use the administrator account from Phase 1.\n\n\nStep #5: Change the parent directory of the subscription to your Office 365 directory. The end result should be that under Settings -\n Subscriptions your subscription lists the Office 365 directory. \n\n\n\n\n\nAt this point your Azure RemoteApp subscription is associated with your Office 365 Azure AD; you can use the existing Office 365 user accounts with Azure RemoteApp!", 
            "title": "Office 365 user accounts"
        }, 
        {
            "location": "/remoteapp-o365user/#how-to-use-azure-remoteapp-with-office-365-user-accounts", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   If you have an Office 365 subscription you have an Azure Active Directory that stores your user names and passwords used to access Office 365 services. For example, when your users activate Office 365 ProPlus they authenticate against Azure AD to check for licenses. Most customers would like to use the same directory with Azure RemoteApp.  If you are deploying Azure RemoteApp you are most likely using an Azure subscription that is associated with a different Azure AD. In order to use your Office 365 directory, you will need to move the Azure subscription into that directory.  For info on how to deploy Office 365 client applications, see  How to use your Office 365 subscription with Azure RemoteApp .", 
            "title": "How to use Azure RemoteApp with Office 365 user accounts"
        }, 
        {
            "location": "/remoteapp-o365user/#phase-1-register-your-free-office-365-azure-active-directory-subscription", 
            "text": "If you are using the Azure classic portal, use the steps in  Register your free Azure Active Directory subscription  to get administrative access to your Azure AD via the Azure Management Portal. As the result of this process you should be able to log into the Azure portal and see your directory there \u2013 at this point you won\u2019t see much more since the full Azure subscription you are using with Azure RemoteApp is in a different directory.  Remember the name and password of the administrator account you created in this step \u2013 they will be needed in Phase 2.  If you are using the Azure portal, check out  How to register and activate a free Azure Active Directory using Office 365 portal .", 
            "title": "Phase 1: Register your free Office 365 Azure Active Directory subscription"
        }, 
        {
            "location": "/remoteapp-o365user/#phase-2-change-the-azure-ad-associated-with-your-azure-subscription", 
            "text": "We are going to change your Azure subscription from its current directory into the Office 365 directory we worked with in Phase 1.  Follow the instructions described in  Change the Azure Active Directory tenant in Azure RemoteApp . Pay particular attention to the following steps:   Step #1: If you have deployed Azure RemoteApp (ARA) in this subscription, make sure you remove all Azure AD user accounts from any ARA collections first, before trying anything else. Alternatively, you can consider deleting any existing collections.  Step #2: This is a critical step. You need to use a Microsoft account (e.g. @outlook.com) as a Service Administrator on the subscription; this is because we cannot have any user accounts from the existing Azure AD attached to the subscription \u2013 if we do, we won\u2019t be able to move it to a different Azure AD.  Step #4: When adding an existing directory, the system will ask you to sign in with the administrator account for that directory. Make sure to use the administrator account from Phase 1.  Step #5: Change the parent directory of the subscription to your Office 365 directory. The end result should be that under Settings -  Subscriptions your subscription lists the Office 365 directory.    At this point your Azure RemoteApp subscription is associated with your Office 365 Azure AD; you can use the existing Office 365 user accounts with Azure RemoteApp!", 
            "title": "Phase 2: Change the Azure AD associated with your Azure subscription."
        }, 
        {
            "location": "/remoteapp-secureaccess/", 
            "text": "Securing access to Azure RemoteApp, and beyond\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nIn this article we will give an overview of how an administrator can set up a secure access channel starting from the end user, through Azure RemoteApp and ending with a secure resource such as a SQL database or another application back-end. The goal is to make sure that only authorized users meeting the desired conditions can access remote applications, and that the secure back-end can only be accessed from the controlled Azure RemoteApp environment and not from other locations.\n\n\nThere are 3 major areas the admin needs to look at:\n\n\n\n\nRead on for information and answers to these questions.\n\n\nWho can access the collection?\n\n\nThe administrator chooses the users that can access remote applications in the collection. You can use Azure Active Directory (Azure AD) work or school accounts (previously called, \"organizational accounts\") or Microsoft accounts (e.g. @outlook.com). Most enterprise scenarios use Azure AD accounts; they let you use conditional access features discussed later and are also the only choice for domain-joined collections. The rest of the article assumes you are using Azure AD accounts with Azure RemoteApp.\n\n\nWhat we have accomplished:\n\n\nUsing Azure AD accounts to control access to Azure RemoteApp gives us two things:\n\n\n\n\nWe always know who can access the applications we have published and access any back-ends those applications connect to.\n\n\nWe control the underlying Azure AD so we can create and delete user accounts, set password policies, use multi-factor authentication, etc. \n\n\n\n\nHow is the collection accessed? From where?\n\n\nCommonly administrators want to define policies for accessing a public Internet-facing environment, such as Azure RemoteApp. For example, they want to ensure that users accessing the environment from outside of the corporate network have to use multi-factor authentication (MFA) to gain access; or perhaps they should be blocked altogether.\n\n\nAzure RemoteApp administrators can use the functionality available through Azure AD Premium to set conditional access policies for their Azure RemoteApp environment. They can also use rich reporting and alerting features to monitor how the environment is being accessed.\n\n\nHow to set up conditional access for Azure RemoteApp\n\n\nWe are going to walk through an example scenario \u2013 the Azure RemoteApp administrator wants to block access to the environment when users are outside of the corporate network.\n\n\n\n\n[AZURE.NOTE] We assume you have upgraded Azure AD to the Premium tier and that you have created at least one Azure RemoteApp collection.\n\n\n\n\n\n\n\n\nIn Azure portal click the \nActive Directory\n tab. Then click the directory you want to configure.\n\n\nRemember: Conditional access is a property of your directory and not of Azure RemoteApp, so all configuration is done at the directory level. This also means you need to be the directory administrator to make these changes.\n\n\n\n\n\n\nClick \nApplications\n, and then click \nMicrosoft Azure RemoteApp\n to set up conditional access. Note that you can set up conditional access for each \u201csoftware as a service\u201d application in your directory separately.\n\n\n\n\n\n\n\nOn the \nConfigure\n tab, set \nEnable Access Rules\n to ON.\n\n\n\n\n\n\n\nYou can now configure various rules and choose who to apply them to:\n\n\n\n\nChoose \nBlock access when not at work\n to completely prevent users from accessing Azure RemoteApp outside of the network environment you specify.\n\n\nClick the option below to define the IP address ranges that constitute your \u201ctrusted network\u201d. Everything outside of those will be rejected.\n\n\n\n\n\n\n\n\nTest your configuration by launching the Azure RemoteApp client from an IP address outside of the range you specified. After you sign in with your Azure AD credentials you should see a message like this:\n\n\n\n\n\n\n\n\nFuture conditional access features\n\n\nThe Azure Active Directory team is working on new capabilities in Conditional Access. Administrators will be able to create new types of rules beyond network location based rules. A public preview of the new functionality should be available soon.\n\n\nHow to monitor access to Azure RemoteApp\n\n\nA great feature to use alongside conditional access is the Azure Active Directory Premium reporting functionality. You can use reports to monitor who is accessing your environment and detect any suspicious activity.\n\n\nFor example, you can see the names of the users who accessed Azure RemoteApp, how many times they did it and when.\n\n\n\n\n\n\nIn Azure portal, click \nActive Directory\n, and then click your directory.\n\n\n\n\n\n\nGo to the \nReports\n tab.\n\n\n\n\n\n\nFrom the list of reports, select \nApplication usage\n under \nIntegrated applications\n.\n\n\nYou'll see some aggregated statistics for Azure RemoteApp. \n\n\n\n\n\n\n\nClick the application to reveal information about users accessing Azure RemoteApp.\n\n\n\n\n\n\n\nSummary\n\n\nWith Azure Active Directory Premium you can set up access rules to Azure RemoteApp (and other software as a service applications available through Azure AD). Rules are currently limited to network location based policies but will in the future be extended to other aspects of enterprise management.\n\n\nAzure AD Premium also offers reporting and monitoring capabilities that further extend the control the admin has over their Azure RemoteApp environment.\n\n\nHow do I make sure my secure resource is accessible only from my Azure RemoteApp environment?\n\n\nIn previous sections of this article we focused on securing access to the Azure RemoteApp environment. We have accomplished that by choosing the users who are allowed access and setting up access rules to further control how they can use the service.\n\n\nA common scenario for Azure RemoteApp deployments is that the remote applications need to communicate with a back-end resource, for example a SQL database. This resource is hosted either on-premises (e.g. in a corporate network) or in the cloud (e.g. in Azure IaaS). Administrators often want to make sure that the back-end resource can only be accessed by applications deployed via Azure RemoteApp and not for example by an application running directly on a user\u2019s PC and accessing over public Internet. Azure RemoteApp is often seen as the centrally-managed and secured environment and thus the only path through which users should interact with the back-end resource.\n\n\nThe solution is to place both the Azure RemoteApp environment and the secure resource in the same Azure Virtual Network (VNET). If the resource is in a different site, you can establish a site-to-site VPN connection, for example to create a VNet spanning the Azure data center and the customer on-premises environment.\n\n\nAzure RemoteApp supports two types of collection deployments where you can provide your own VNET:\n\n\n\n\n\n\nNon-domain-joined: the applications will have \u201cline of sight\u201d of the other resources in the VNET. For example, this can be used to connect applications to a SQL database that uses SQL authentication (applications authenticate the user directly against the database)\n\n\n\n\n\n\nDomain-joined: the virtual machines used by Azure RemoteApp are joined to a domain controller in the VNET. This is useful when the applications need to authenticate against a Windows Domain Controller in order to get access to a back-end resource.\n\n\n\n\n\n\n\nHow to create a secure connection between Azure and my on-premises environment\n\n\nThere are several configuration options for connecting your Azure and on-premises environments. A good overview of the options is available here.\n\n\nWith Azure RemoteApp you need to configure your VNet first, and then use it during the creation process of your collection. \n\n\nThe complete solution\n\n\nThe diagram below shows the complete solution where we have built a secure access channel from the end user, through Azure RemoteApp (ARA), into the backend resource.\n\n\nIn Stage 1 we selected the users and created access rules that govern how ARA can be accessed. In the example below we only allow access for users working from the corporate network. Non-compliant users will not be able to access the ARA environment at all.\nIn \u201cStage 2\u201d we have exposed the backend resource only through the VNet/VPN configuration which we control. Azure RemoteApp has been placed in the same VNet. The end result is that the resource can only be accessed through the ARA environment.", 
            "title": "Secure Data"
        }, 
        {
            "location": "/remoteapp-secureaccess/#securing-access-to-azure-remoteapp-and-beyond", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   In this article we will give an overview of how an administrator can set up a secure access channel starting from the end user, through Azure RemoteApp and ending with a secure resource such as a SQL database or another application back-end. The goal is to make sure that only authorized users meeting the desired conditions can access remote applications, and that the secure back-end can only be accessed from the controlled Azure RemoteApp environment and not from other locations.  There are 3 major areas the admin needs to look at:   Read on for information and answers to these questions.", 
            "title": "Securing access to Azure RemoteApp, and beyond"
        }, 
        {
            "location": "/remoteapp-secureaccess/#who-can-access-the-collection", 
            "text": "The administrator chooses the users that can access remote applications in the collection. You can use Azure Active Directory (Azure AD) work or school accounts (previously called, \"organizational accounts\") or Microsoft accounts (e.g. @outlook.com). Most enterprise scenarios use Azure AD accounts; they let you use conditional access features discussed later and are also the only choice for domain-joined collections. The rest of the article assumes you are using Azure AD accounts with Azure RemoteApp.  What we have accomplished:  Using Azure AD accounts to control access to Azure RemoteApp gives us two things:   We always know who can access the applications we have published and access any back-ends those applications connect to.  We control the underlying Azure AD so we can create and delete user accounts, set password policies, use multi-factor authentication, etc.", 
            "title": "Who can access the collection?"
        }, 
        {
            "location": "/remoteapp-secureaccess/#how-is-the-collection-accessed-from-where", 
            "text": "Commonly administrators want to define policies for accessing a public Internet-facing environment, such as Azure RemoteApp. For example, they want to ensure that users accessing the environment from outside of the corporate network have to use multi-factor authentication (MFA) to gain access; or perhaps they should be blocked altogether.  Azure RemoteApp administrators can use the functionality available through Azure AD Premium to set conditional access policies for their Azure RemoteApp environment. They can also use rich reporting and alerting features to monitor how the environment is being accessed.", 
            "title": "How is the collection accessed? From where?"
        }, 
        {
            "location": "/remoteapp-secureaccess/#how-to-set-up-conditional-access-for-azure-remoteapp", 
            "text": "We are going to walk through an example scenario \u2013 the Azure RemoteApp administrator wants to block access to the environment when users are outside of the corporate network.   [AZURE.NOTE] We assume you have upgraded Azure AD to the Premium tier and that you have created at least one Azure RemoteApp collection.     In Azure portal click the  Active Directory  tab. Then click the directory you want to configure.  Remember: Conditional access is a property of your directory and not of Azure RemoteApp, so all configuration is done at the directory level. This also means you need to be the directory administrator to make these changes.    Click  Applications , and then click  Microsoft Azure RemoteApp  to set up conditional access. Note that you can set up conditional access for each \u201csoftware as a service\u201d application in your directory separately.    On the  Configure  tab, set  Enable Access Rules  to ON.    You can now configure various rules and choose who to apply them to:   Choose  Block access when not at work  to completely prevent users from accessing Azure RemoteApp outside of the network environment you specify.  Click the option below to define the IP address ranges that constitute your \u201ctrusted network\u201d. Everything outside of those will be rejected.     Test your configuration by launching the Azure RemoteApp client from an IP address outside of the range you specified. After you sign in with your Azure AD credentials you should see a message like this:", 
            "title": "How to set up conditional access for Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-secureaccess/#future-conditional-access-features", 
            "text": "The Azure Active Directory team is working on new capabilities in Conditional Access. Administrators will be able to create new types of rules beyond network location based rules. A public preview of the new functionality should be available soon.", 
            "title": "Future conditional access features"
        }, 
        {
            "location": "/remoteapp-secureaccess/#how-to-monitor-access-to-azure-remoteapp", 
            "text": "A great feature to use alongside conditional access is the Azure Active Directory Premium reporting functionality. You can use reports to monitor who is accessing your environment and detect any suspicious activity.  For example, you can see the names of the users who accessed Azure RemoteApp, how many times they did it and when.    In Azure portal, click  Active Directory , and then click your directory.    Go to the  Reports  tab.    From the list of reports, select  Application usage  under  Integrated applications .  You'll see some aggregated statistics for Azure RemoteApp.     Click the application to reveal information about users accessing Azure RemoteApp.", 
            "title": "How to monitor access to Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-secureaccess/#summary", 
            "text": "With Azure Active Directory Premium you can set up access rules to Azure RemoteApp (and other software as a service applications available through Azure AD). Rules are currently limited to network location based policies but will in the future be extended to other aspects of enterprise management.  Azure AD Premium also offers reporting and monitoring capabilities that further extend the control the admin has over their Azure RemoteApp environment.", 
            "title": "Summary"
        }, 
        {
            "location": "/remoteapp-secureaccess/#how-do-i-make-sure-my-secure-resource-is-accessible-only-from-my-azure-remoteapp-environment", 
            "text": "In previous sections of this article we focused on securing access to the Azure RemoteApp environment. We have accomplished that by choosing the users who are allowed access and setting up access rules to further control how they can use the service.  A common scenario for Azure RemoteApp deployments is that the remote applications need to communicate with a back-end resource, for example a SQL database. This resource is hosted either on-premises (e.g. in a corporate network) or in the cloud (e.g. in Azure IaaS). Administrators often want to make sure that the back-end resource can only be accessed by applications deployed via Azure RemoteApp and not for example by an application running directly on a user\u2019s PC and accessing over public Internet. Azure RemoteApp is often seen as the centrally-managed and secured environment and thus the only path through which users should interact with the back-end resource.  The solution is to place both the Azure RemoteApp environment and the secure resource in the same Azure Virtual Network (VNET). If the resource is in a different site, you can establish a site-to-site VPN connection, for example to create a VNet spanning the Azure data center and the customer on-premises environment.  Azure RemoteApp supports two types of collection deployments where you can provide your own VNET:    Non-domain-joined: the applications will have \u201cline of sight\u201d of the other resources in the VNET. For example, this can be used to connect applications to a SQL database that uses SQL authentication (applications authenticate the user directly against the database)    Domain-joined: the virtual machines used by Azure RemoteApp are joined to a domain controller in the VNET. This is useful when the applications need to authenticate against a Windows Domain Controller in order to get access to a back-end resource.", 
            "title": "How do I make sure my secure resource is accessible only from my Azure RemoteApp environment?"
        }, 
        {
            "location": "/remoteapp-secureaccess/#how-to-create-a-secure-connection-between-azure-and-my-on-premises-environment", 
            "text": "There are several configuration options for connecting your Azure and on-premises environments. A good overview of the options is available here.  With Azure RemoteApp you need to configure your VNet first, and then use it during the creation process of your collection.", 
            "title": "How to create a secure connection between Azure and my on-premises environment"
        }, 
        {
            "location": "/remoteapp-secureaccess/#the-complete-solution", 
            "text": "The diagram below shows the complete solution where we have built a secure access channel from the end user, through Azure RemoteApp (ARA), into the backend resource. \nIn Stage 1 we selected the users and created access rules that govern how ARA can be accessed. In the example below we only allow access for users working from the corporate network. Non-compliant users will not be able to access the ARA environment at all.\nIn \u201cStage 2\u201d we have exposed the backend resource only through the VNet/VPN configuration which we control. Azure RemoteApp has been placed in the same VNet. The end result is that the resource can only be accessed through the ARA environment.", 
            "title": "The complete solution"
        }, 
        {
            "location": "/remoteapp-upd/", 
            "text": "How does Azure RemoteApp save user data and settings?\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nAzure RemoteApp saves user identity and customizations across devices and sessions. This user data is stored in a per-user per-collection disk, known as a user profile disk (UPD). The disk follows the user and ensures the user has a consistent experience, regardless of where they sign in. \nsaves \n\n\nUser profile disks are completely transparent to the user \u2014 users save documents to their Documents folder (on what appears to be a local drive) and change their app settings as usual. At the same time, all personal settings persist when connecting to Azure RemoteApp from any device. All the user sees is their data in the same place.\n\n\nEach UPD has 50GB of persistent storage and contains both user data and application settings. \n\n\nRead on for specifics on user profile data.\n\n\n\n\n[AZURE.NOTE] Need to disable the UPD? You can do that now - check out Pavithra's blog post, \nDisable User Profile Disks (UPDs) in Azure RemoteApp\n, for details.\n\n\n\n\nHow can an admin get to the data?\n\n\nIf you need to access the data for one of your users (for disaster recovery or if the user leaves the company), contact Azure Support and provide the subscription information for the collection and the user identity. The Azure RemoteApp team will provide you a URL to the VHD. Download that VHD and retrieve any documents or files you need. Note that the VHD is 50GB, so it will take a bit to download it.\n\n\nIs the data backed up?\n\n\nYes, we save a backup of the user data per geographic location. The data is read-only and can be accessed in the same way as the regular data would be (contact Azure RemoteApp to get it), if the primary data center is down. The data is copied real-time to the backup location and we do not keep copies of different versions. So, on data corruption, we will not be able to restore it to a previously known good version but if the primary data center is down, you will be able to get user data from the other location.\n\n\nHow do users see the UPD on the server side?\n\n\nEach user will have their own directory on the server that maps to their UPD: c:\\Users\\username.\n\n\nWhat's the best way to use Outlook and UPD?\n\n\nAzure RemoteApp saves the Outlook state (mailboxes, PSTs) between sessions. To enable this, we need the PST to be stored in the user profile data (c:\\users\\\n). This is the default location for the data, so as long as you do not change the location, the data will persist between sessions.\n\n\nWe also recommend that you use \"cached\" mode in Outlook and use \"server/online\" mode for searching.\n\n\nCheck out \nthis article\n for more information on using Outlook and Azure RemoteApp.\n\n\nWhat about redirection?\n\n\nYou can configure Azure RemoteApp to let users access local devices by setting up \nredirection\n. Local devices will then be able to access the data on the UPD.\n\n\nCan I use my UPD as a network share?\n\n\nNo. UPDs cannot be used as a network share. A UPD is only available to the user when the user is actively connected to Azure RemoteApp.\n\n\nIf I delete a user from a collection, is their UPD deleted?\n\n\nNo, when you delete a user, we do not automatically delete the UPD - instead, we store the data until you delete the collection. 90 days after you delete the collection, we delete all UPDs. \n\n\nIf you need to delete a UPD from a collection, contact Azure RemoteApp - we can delete UPD from our side.\n\n\nCan I access my users' UPDs (either current or deleted users)?\n\n\nYes, if you contact \nAzure RemoteApp\n, we can set you up with a URL to access the data. You'll have about 10 hours to download any data or files from the UPD before the access expires.\n\n\nAre UPDs available offline?\n\n\nRight now we do not provide offline access to UPDs, beyond the 10 hour access window described above. This means that we do not currently have a way to provide you with access for long enough to complete more complicated tasks, like running anti-virus software on the UPDs or accessing data for an audit.\n\n\nDo registry key settings persist?\n\n\nYes, anything written to HKEY_Current_User is part of the UPD.\n\n\nCan I disable UPDs for a collection?\n\n\nYes, you can ask Azure RemoteApp to disable UPDs for a subscription, but you cannot do that yourself. This means that UPDs will be disabled for all collections in the subscription.\n\n\nYou might want to disable UPDs in any of the following situations: \n\n\n\n\nYou need complete access and control of user data (for audit and review purposes such as financial institutions).\n\n\nYou have 3rd-party user profile management solutions on-premises and want to continue using them in your domain-joined Azure RemoteApp deployment. This would require the profile agent to be loaded into the gold image. \n\n\nYou don\u2019t need any local data storage or you have all data in the cloud or file share and would like to control saving of data locally using Azure RemoteApp.\n\n\n\n\nSee  \nDisable User Profile Disks (UPDs) in Azure RemoteApp\n for more information.\n\n\nCan I restrict users from saving data to the system drive?\n\n\nYes, but you'll need to set that up in the template image before you create the collection. Use the following steps to block access to the system drive:\n\n\n\n\nRun \ngpedit.msc\n on the template image.\n\n\nNavigate to \nUser Configuration \n Administrative Templates \n Windows Components \n Explorer\n.\n\n\nSelect the following options:\n\n\nHide these specified drives in My Computer\n\n\nPrevent access to drives from My Computer\n\n\n\n\n\n\n\n\nCan I seed UPDs? I want to put some data in the UPD that's available the first time the user signs in.\n\n\nYes, when you create the template image, you can add information to the default profile. That information is then added to the UPD.\n\n\nCan I change the size of the UPD depending on how much data I want to store?\n\n\nNo, all UPDs have 50 GB of storage. If you want to store different amounts of data, try the following:\n\n\n\n\nDisable UPDs for the collection.\n\n\nSet up a file share for users to access.\n\n\nLoad the file share by using a startup script. See below for details on startup scripts in Azure RemoteApp.\n\n\nDirect users to save all data to the file share.\n\n\n\n\nHow do I run a startup script in Azure RemoteApp?\n\n\nIf you want to run a startup script, start by creating a scheduled task in the template image you are going to use for the collection. (Do this \nbefore\n you run sysprep.) \n\n\n\n\n\n\nOn the \nGeneral\n tab, be sure to change the \nUser Account\n under Security to \"BUILTIN\\Users.\"\n\n\n\n\nThe scheduled task will launch your startup script, using the user's credentials. Schedule the task to run every a time a user logs on.\n\n\n\n\nYou can also use \nGroup Policy-based startup scripts\n. \n\n\nWhat about placing a startup script in the Start menu? Would that work?\n\n\nIn other words, can I create a .bat file that runs a config window script and save it to the c:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp folder, and then have that script run whenever a user starts a RemoteApp session?\n\n\nNo, that's not supported with Azure RemoteApp, which uses RDSH, which also does not support startup scripts in the Start menu.\n\n\nCan I use mstsc.exe (the Remote Desktop program) to configure logon scripts?\n\n\nNope, not supported by Azure RemoteApp.\n\n\nCan I store data on the VM locally?\n\n\nNO, data stored anywhere on the VM other than in the UPD will be lost. There is a high chance the user will not get the same VM the next time that they sign into Azure RemoteApp. We do not maintain user-VM persistence, so the user will not sign into the same VM, and the data will be lost. Additionally, when we update the collection, the existing VMs are replaced with a new set of VMs - that means any data stored on the VM itself is lost. The recommendation is to store data in the UPD, shared storage like Azure Files, a file server inside a VNET, or on the cloud using a cloud storage system like DropBox.\n\n\nHow do I mount an Azure File share on a VM, using PowerShell?\n\n\nYou can use the Net-PSDrive cmdlet to mount the drive, as follows:\n\n\nNew-PSDrive -Name \ndrive-name\n -PSProvider FileSystem -Root \\\\\nstorage-account-name\n.file.core.windows.net\\\nshare-name\n -Credential :\nstorage-account-name\n\n\n\n\nYou can also save your credentials by running the following:\n\n\ncmdkey /add:\nstorage-account-name\n.file.core.windows.net /user:\nstorage-account-name\n /pass:\nstorage-account-key\n\n\n\n\nThat lets you skip the -Credential parameter in the New-PSDrive cmdlet.", 
            "title": "User data"
        }, 
        {
            "location": "/remoteapp-upd/#how-does-azure-remoteapp-save-user-data-and-settings", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   Azure RemoteApp saves user identity and customizations across devices and sessions. This user data is stored in a per-user per-collection disk, known as a user profile disk (UPD). The disk follows the user and ensures the user has a consistent experience, regardless of where they sign in. \nsaves   User profile disks are completely transparent to the user \u2014 users save documents to their Documents folder (on what appears to be a local drive) and change their app settings as usual. At the same time, all personal settings persist when connecting to Azure RemoteApp from any device. All the user sees is their data in the same place.  Each UPD has 50GB of persistent storage and contains both user data and application settings.   Read on for specifics on user profile data.   [AZURE.NOTE] Need to disable the UPD? You can do that now - check out Pavithra's blog post,  Disable User Profile Disks (UPDs) in Azure RemoteApp , for details.", 
            "title": "How does Azure RemoteApp save user data and settings?"
        }, 
        {
            "location": "/remoteapp-upd/#how-can-an-admin-get-to-the-data", 
            "text": "If you need to access the data for one of your users (for disaster recovery or if the user leaves the company), contact Azure Support and provide the subscription information for the collection and the user identity. The Azure RemoteApp team will provide you a URL to the VHD. Download that VHD and retrieve any documents or files you need. Note that the VHD is 50GB, so it will take a bit to download it.", 
            "title": "How can an admin get to the data?"
        }, 
        {
            "location": "/remoteapp-upd/#is-the-data-backed-up", 
            "text": "Yes, we save a backup of the user data per geographic location. The data is read-only and can be accessed in the same way as the regular data would be (contact Azure RemoteApp to get it), if the primary data center is down. The data is copied real-time to the backup location and we do not keep copies of different versions. So, on data corruption, we will not be able to restore it to a previously known good version but if the primary data center is down, you will be able to get user data from the other location.", 
            "title": "Is the data backed up?"
        }, 
        {
            "location": "/remoteapp-upd/#how-do-users-see-the-upd-on-the-server-side", 
            "text": "Each user will have their own directory on the server that maps to their UPD: c:\\Users\\username.", 
            "title": "How do users see the UPD on the server side?"
        }, 
        {
            "location": "/remoteapp-upd/#whats-the-best-way-to-use-outlook-and-upd", 
            "text": "Azure RemoteApp saves the Outlook state (mailboxes, PSTs) between sessions. To enable this, we need the PST to be stored in the user profile data (c:\\users\\ ). This is the default location for the data, so as long as you do not change the location, the data will persist between sessions.  We also recommend that you use \"cached\" mode in Outlook and use \"server/online\" mode for searching.  Check out  this article  for more information on using Outlook and Azure RemoteApp.", 
            "title": "What's the best way to use Outlook and UPD?"
        }, 
        {
            "location": "/remoteapp-upd/#what-about-redirection", 
            "text": "You can configure Azure RemoteApp to let users access local devices by setting up  redirection . Local devices will then be able to access the data on the UPD.", 
            "title": "What about redirection?"
        }, 
        {
            "location": "/remoteapp-upd/#can-i-use-my-upd-as-a-network-share", 
            "text": "No. UPDs cannot be used as a network share. A UPD is only available to the user when the user is actively connected to Azure RemoteApp.", 
            "title": "Can I use my UPD as a network share?"
        }, 
        {
            "location": "/remoteapp-upd/#if-i-delete-a-user-from-a-collection-is-their-upd-deleted", 
            "text": "No, when you delete a user, we do not automatically delete the UPD - instead, we store the data until you delete the collection. 90 days after you delete the collection, we delete all UPDs.   If you need to delete a UPD from a collection, contact Azure RemoteApp - we can delete UPD from our side.", 
            "title": "If I delete a user from a collection, is their UPD deleted?"
        }, 
        {
            "location": "/remoteapp-upd/#can-i-access-my-users-upds-either-current-or-deleted-users", 
            "text": "Yes, if you contact  Azure RemoteApp , we can set you up with a URL to access the data. You'll have about 10 hours to download any data or files from the UPD before the access expires.", 
            "title": "Can I access my users' UPDs (either current or deleted users)?"
        }, 
        {
            "location": "/remoteapp-upd/#are-upds-available-offline", 
            "text": "Right now we do not provide offline access to UPDs, beyond the 10 hour access window described above. This means that we do not currently have a way to provide you with access for long enough to complete more complicated tasks, like running anti-virus software on the UPDs or accessing data for an audit.", 
            "title": "Are UPDs available offline?"
        }, 
        {
            "location": "/remoteapp-upd/#do-registry-key-settings-persist", 
            "text": "Yes, anything written to HKEY_Current_User is part of the UPD.", 
            "title": "Do registry key settings persist?"
        }, 
        {
            "location": "/remoteapp-upd/#can-i-disable-upds-for-a-collection", 
            "text": "Yes, you can ask Azure RemoteApp to disable UPDs for a subscription, but you cannot do that yourself. This means that UPDs will be disabled for all collections in the subscription.  You might want to disable UPDs in any of the following situations:    You need complete access and control of user data (for audit and review purposes such as financial institutions).  You have 3rd-party user profile management solutions on-premises and want to continue using them in your domain-joined Azure RemoteApp deployment. This would require the profile agent to be loaded into the gold image.   You don\u2019t need any local data storage or you have all data in the cloud or file share and would like to control saving of data locally using Azure RemoteApp.   See   Disable User Profile Disks (UPDs) in Azure RemoteApp  for more information.", 
            "title": "Can I disable UPDs for a collection?"
        }, 
        {
            "location": "/remoteapp-upd/#can-i-restrict-users-from-saving-data-to-the-system-drive", 
            "text": "Yes, but you'll need to set that up in the template image before you create the collection. Use the following steps to block access to the system drive:   Run  gpedit.msc  on the template image.  Navigate to  User Configuration   Administrative Templates   Windows Components   Explorer .  Select the following options:  Hide these specified drives in My Computer  Prevent access to drives from My Computer", 
            "title": "Can I restrict users from saving data to the system drive?"
        }, 
        {
            "location": "/remoteapp-upd/#can-i-seed-upds-i-want-to-put-some-data-in-the-upd-thats-available-the-first-time-the-user-signs-in", 
            "text": "Yes, when you create the template image, you can add information to the default profile. That information is then added to the UPD.", 
            "title": "Can I seed UPDs? I want to put some data in the UPD that's available the first time the user signs in."
        }, 
        {
            "location": "/remoteapp-upd/#can-i-change-the-size-of-the-upd-depending-on-how-much-data-i-want-to-store", 
            "text": "No, all UPDs have 50 GB of storage. If you want to store different amounts of data, try the following:   Disable UPDs for the collection.  Set up a file share for users to access.  Load the file share by using a startup script. See below for details on startup scripts in Azure RemoteApp.  Direct users to save all data to the file share.", 
            "title": "Can I change the size of the UPD depending on how much data I want to store?"
        }, 
        {
            "location": "/remoteapp-upd/#how-do-i-run-a-startup-script-in-azure-remoteapp", 
            "text": "If you want to run a startup script, start by creating a scheduled task in the template image you are going to use for the collection. (Do this  before  you run sysprep.)     On the  General  tab, be sure to change the  User Account  under Security to \"BUILTIN\\Users.\"   The scheduled task will launch your startup script, using the user's credentials. Schedule the task to run every a time a user logs on.   You can also use  Group Policy-based startup scripts .", 
            "title": "How do I run a startup script in Azure RemoteApp?"
        }, 
        {
            "location": "/remoteapp-upd/#what-about-placing-a-startup-script-in-the-start-menu-would-that-work", 
            "text": "In other words, can I create a .bat file that runs a config window script and save it to the c:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp folder, and then have that script run whenever a user starts a RemoteApp session?  No, that's not supported with Azure RemoteApp, which uses RDSH, which also does not support startup scripts in the Start menu.", 
            "title": "What about placing a startup script in the Start menu? Would that work?"
        }, 
        {
            "location": "/remoteapp-upd/#can-i-use-mstscexe-the-remote-desktop-program-to-configure-logon-scripts", 
            "text": "Nope, not supported by Azure RemoteApp.", 
            "title": "Can I use mstsc.exe (the Remote Desktop program) to configure logon scripts?"
        }, 
        {
            "location": "/remoteapp-upd/#can-i-store-data-on-the-vm-locally", 
            "text": "NO, data stored anywhere on the VM other than in the UPD will be lost. There is a high chance the user will not get the same VM the next time that they sign into Azure RemoteApp. We do not maintain user-VM persistence, so the user will not sign into the same VM, and the data will be lost. Additionally, when we update the collection, the existing VMs are replaced with a new set of VMs - that means any data stored on the VM itself is lost. The recommendation is to store data in the UPD, shared storage like Azure Files, a file server inside a VNET, or on the cloud using a cloud storage system like DropBox.", 
            "title": "Can I store data on the VM locally?"
        }, 
        {
            "location": "/remoteapp-upd/#how-do-i-mount-an-azure-file-share-on-a-vm-using-powershell", 
            "text": "You can use the Net-PSDrive cmdlet to mount the drive, as follows:  New-PSDrive -Name  drive-name  -PSProvider FileSystem -Root \\\\ storage-account-name .file.core.windows.net\\ share-name  -Credential : storage-account-name   You can also save your credentials by running the following:  cmdkey /add: storage-account-name .file.core.windows.net /user: storage-account-name  /pass: storage-account-key   That lets you skip the -Credential parameter in the New-PSDrive cmdlet.", 
            "title": "How do I mount an Azure File share on a VM, using PowerShell?"
        }, 
        {
            "location": "/remoteapp-clients/", 
            "text": "Accessing your apps in Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nOne of the beauties of Azure RemoteApp is that you can access apps from any of your devices. Even better, you can start working on one device and then seamlessly transition to a second device and pick up right where you left off. To get started you need to download the appropriate client for your device and sign in to the service.\n\n\nIn this topic, we'll review the clients currently supported and how to download them before I show you how to sign in to RemoteApp from each of the clients.\n\n\nSupported clients\n\n\nYou can access RemoteApp using the steps below if your device is running one of these operating systems:\n\n\n\n\nWindows 10 \n\n\nWindows 8.1\n\n\nWindows 8\n\n\nWindows 7 Service Pack 1\n\n\nWindows Phone 8.1\n\n\niOS\n\n\nMac OS X\n\n\nAndroid\n\n\n\n\nWhat about thin clients? The following Windows Embedded thin clients are supported:\n\n\n\n\nWindows Embedded Standard 7\n\n\nWindows Embedded 8 Standard\n\n\nWindows Embedded 8.1 Industry Pro\n\n\nWindows 10 IoT Enterprise\n\n\n\n\nDownloading the client\n\n\nNo matter what platform you are using, the client you need to access RemoteApp can be found on the \nRemote Desktop client download\n page.\n\n\nClicking the different links will either directly start downloading the client or will send you to the client download page in the app store for that platform. Install the client by following the instructions on the screen.\n\n\nOnce you have installed the client on your device and launched it, jump to the corresponding section below to learn how to sign in to RemoteApp from that client.\n\n\nAndroid\n\n\nOnce you have installed the Microsoft Remote Desktop app from the Google Play store, you can find it in your app list under \nRemote Desktop\n.\n\n\n\n\n\n\nLaunching the app brings you to an empty Connection Center, unless you've already been using the app. To get started with Azure RemoteApp, tap the add button \n\"\"+\"\"\n and tap \nAzure RemoteApp\n. \n\n\n\n\n\n\n\n\nYou need to sign in with your email address to access the service. Tap \nGet started\n.\n\n\n\n\n\n\n\n\nOn the next page, type in your \nemail address\n and tap \nContinue\n. This begins the sign-in process using Azure Active Directory.\n\n\n\n\n\n\n\n\nFollow the instructions on the screen to sign in with your Microsoft account (previously called \"LiveID\") or organization ID. Once signed in, you may be presented with a page listing all the invitations you have received. If you are, select the invitations you trust and tap \nDone\n. \n\n\n\n\n\n\n\n\nAfter accepting your invitations, the list of apps you have access to will be downloaded to your device and made available in the Connection Center. Tap one of the apps to start using it.\n\n\n\n\n\n\n\n\nIf you do not have an invitation yet, you can still try out the service. To do so, tap \nGo to free trial\n when prompted.\n\n\n\n\n\n\n\n\nThis will give you access to a basic set of apps to get you started with RemoteApp.\n\n\n\n\n\n\n\n\niOS\n\n\nOnce you have installed the Microsoft Remote Desktop app from the App store, you can find it in your app list under \nRD Client\n.\n\n\n\n\n\n\nLaunching the app brings you to an empty Connection Center, unless you've already been using the app. To get started with Azure RemoteApp, tap the add button \n\"\"+\"\"\n and tap \nAdd Azure RemoteApp\n.\n\n\n\n\n\n\n\n\nYou need to sign in with your email address to access the service, to start that process, type in your \nemail address\n and tap \nContinue\n.\n\n\n\n\n\n\n\n\nFollow the instructions on the screen to sign in with your Microsoft account (LiveID) or Organization ID. Once signed in, you may be presented with a page listing all the invitations you have received. If you are, select the invitations you trust and tap \nDone\n.\n\n\n\n\n\n\n\n\nAfter accepting your invitations, the list of apps you have access to will be downloaded to your device and made available in the Connection Center. Tap one of the apps to launch it and start using it.\n\n\n\n\n\n\n\n\nIf you do not have an invitation yet, you can still try out the service. To do so, tap \nGo to free trial\n when prompted.\n\n\n\n\n\n\n\n\nThis will give you access to a basic set of apps to get you started with RemoteApp.\n\n\n\n\n\n\n\n\nMac OS X\n\n\nOnce you have installed the Microsoft Remote Desktop app from the App store, you can find it in your app list under \nMicrosoft Remote Desktop\n.\n\n\n\n\n\n\nLaunching the app brings you to an empty Connection Center, unless you've already been using the app. To get started with Azure RemoteApp, click the \nAzure RemoteApp\n button.\n\n\n\n\n\n\n\n\nYou need to sign in with your email address to access the service, to start that process, tap \nGet Started\n.\n\n\n\n\n\n\n\n\nOn the next page, type in your \nemail address\n and tap \nContinue\n. This begins the sign in process using Azure Active Directory.\n\n\n\n\n\n\n\n\nFollow the instructions on the screen to sign in with your Microsoft account (LiveID) or Organization ID. Once signed in, you may be presented with a page listing all the invitations you have received. If you are, select the invitations you trust and close the dialog.\n\n\n\n\n\n\n\n\nAfter accepting your invitations, the list of apps you have access to will be downloaded to your device and made available in the Connection Center. Double-click one of the apps to launch it and start using it.\n\n\n\n\n\n\n\n\nIf you do not have an invitation yet, you can still try out the service. To do so, click \nGo to free trial\n when prompted.\n\n\n\n\n\n\n\n\nThis will give you access to a basic set of apps to get you started with RemoteApp.\n\n\n\n\n\n\n\n\nWindows (All supported versions except Windows Phone)\n\n\nThe client launches automatically after it finishes installing, however when you need to access it again later it can be found in your app list under the name \nAzure RemoteApp\n.\n\n\n\n\n\n\nAter launching the client, the first page you see welcomes you to Azure RemoteApp. To proceed, click on \nGet Started\n.\n\n\n\n\n\n\n\n\nThe next page starts the sign in process for Azure RemoteApp using Azure Active Directory. This process should look familiar if you have used Microsoft services in the past. Start by typing your \nemail address\n and click \nContinue\n.\n\n\n\n\n\n\n\n\nFollow the instructions on the screen to sign in with your Microsoft account (LiveID) or Organization ID. Once signed in, you may be presented with a page listing all the invitations you have received. If you are, select the invitations you trust and click \nDone\n.\n\n\n\n\n\n\n\n\nAfter accepting your invitations, the list of apps you have access to will be downloaded to your device and made available in the Connection Center. Double-click one of the apps to launch it and start using it.\n\n\n\n\n\n\n\n\nIf no one has sent you an invitation yet, don't worry we've got you covered! You'll still have access to a demo collection so you can test out the service.\n\n\n\n\n\n\n\n\nWindows Phone 8.1\n\n\nOnce you have installed the Microsoft Remote Desktop app from the Windows Phone 8.1 store, you can find it in your app list under \nRemote Desktop\n.\n\n\n\n\n\n\nLaunching the app brings you directly to an empty Connection Center, unless you've already been using the app. To get started with Azure RemoteApp, tap the add button \n\"\"+\"\"\n at the bottom of the screen.\n\n\n\n\n\n\n\n\nNext, tap on \nAzure RemoteApp\n.\n\n\n\n\n\n\n\n\nYou need to sign in with your email address to access the service, to start that process, tap \nconnect\n.\n\n\n\n\n\n\n\n\nOn the next page, type in your \nemail address\n and tap \nContinue\n. This begins the sign in process using Azure Active Directory.\n\n\n\n\n\n\n\n\nFollow the instructions on the screen to sign in with your Microsoft account (LiveID) or Organization ID. Once signed in, you may be presented with a page listing all the invitations you have received. If you are, select the invitations you trust and tap \nsave\n.\n\n\n\n\n\n\n\n\nAfter accepting your invitations, the list of apps you have access to will be downloaded to your device and made available in the Connection Center. Tap one of the apps to launch it and start using it.\n\n\n\n\n\n\n\n\nIf you do not have an invitation yet, you can still try out the service. To do so, tap \nyes\n when prompted.\n\n\n\n\n\n\n\n\nThis will give you access to a basic set of apps to get you started with RemoteApp.", 
            "title": "Supported clients"
        }, 
        {
            "location": "/remoteapp-clients/#accessing-your-apps-in-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   One of the beauties of Azure RemoteApp is that you can access apps from any of your devices. Even better, you can start working on one device and then seamlessly transition to a second device and pick up right where you left off. To get started you need to download the appropriate client for your device and sign in to the service.  In this topic, we'll review the clients currently supported and how to download them before I show you how to sign in to RemoteApp from each of the clients.", 
            "title": "Accessing your apps in Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-clients/#supported-clients", 
            "text": "You can access RemoteApp using the steps below if your device is running one of these operating systems:   Windows 10   Windows 8.1  Windows 8  Windows 7 Service Pack 1  Windows Phone 8.1  iOS  Mac OS X  Android   What about thin clients? The following Windows Embedded thin clients are supported:   Windows Embedded Standard 7  Windows Embedded 8 Standard  Windows Embedded 8.1 Industry Pro  Windows 10 IoT Enterprise", 
            "title": "Supported clients"
        }, 
        {
            "location": "/remoteapp-clients/#downloading-the-client", 
            "text": "No matter what platform you are using, the client you need to access RemoteApp can be found on the  Remote Desktop client download  page.  Clicking the different links will either directly start downloading the client or will send you to the client download page in the app store for that platform. Install the client by following the instructions on the screen.  Once you have installed the client on your device and launched it, jump to the corresponding section below to learn how to sign in to RemoteApp from that client.", 
            "title": "Downloading the client"
        }, 
        {
            "location": "/remoteapp-clients/#android", 
            "text": "Once you have installed the Microsoft Remote Desktop app from the Google Play store, you can find it in your app list under  Remote Desktop .    Launching the app brings you to an empty Connection Center, unless you've already been using the app. To get started with Azure RemoteApp, tap the add button  \"\"+\"\"  and tap  Azure RemoteApp .      You need to sign in with your email address to access the service. Tap  Get started .     On the next page, type in your  email address  and tap  Continue . This begins the sign-in process using Azure Active Directory.     Follow the instructions on the screen to sign in with your Microsoft account (previously called \"LiveID\") or organization ID. Once signed in, you may be presented with a page listing all the invitations you have received. If you are, select the invitations you trust and tap  Done .      After accepting your invitations, the list of apps you have access to will be downloaded to your device and made available in the Connection Center. Tap one of the apps to start using it.     If you do not have an invitation yet, you can still try out the service. To do so, tap  Go to free trial  when prompted.     This will give you access to a basic set of apps to get you started with RemoteApp.", 
            "title": "Android"
        }, 
        {
            "location": "/remoteapp-clients/#ios", 
            "text": "Once you have installed the Microsoft Remote Desktop app from the App store, you can find it in your app list under  RD Client .    Launching the app brings you to an empty Connection Center, unless you've already been using the app. To get started with Azure RemoteApp, tap the add button  \"\"+\"\"  and tap  Add Azure RemoteApp .     You need to sign in with your email address to access the service, to start that process, type in your  email address  and tap  Continue .     Follow the instructions on the screen to sign in with your Microsoft account (LiveID) or Organization ID. Once signed in, you may be presented with a page listing all the invitations you have received. If you are, select the invitations you trust and tap  Done .     After accepting your invitations, the list of apps you have access to will be downloaded to your device and made available in the Connection Center. Tap one of the apps to launch it and start using it.     If you do not have an invitation yet, you can still try out the service. To do so, tap  Go to free trial  when prompted.     This will give you access to a basic set of apps to get you started with RemoteApp.", 
            "title": "iOS"
        }, 
        {
            "location": "/remoteapp-clients/#mac-os-x", 
            "text": "Once you have installed the Microsoft Remote Desktop app from the App store, you can find it in your app list under  Microsoft Remote Desktop .    Launching the app brings you to an empty Connection Center, unless you've already been using the app. To get started with Azure RemoteApp, click the  Azure RemoteApp  button.     You need to sign in with your email address to access the service, to start that process, tap  Get Started .     On the next page, type in your  email address  and tap  Continue . This begins the sign in process using Azure Active Directory.     Follow the instructions on the screen to sign in with your Microsoft account (LiveID) or Organization ID. Once signed in, you may be presented with a page listing all the invitations you have received. If you are, select the invitations you trust and close the dialog.     After accepting your invitations, the list of apps you have access to will be downloaded to your device and made available in the Connection Center. Double-click one of the apps to launch it and start using it.     If you do not have an invitation yet, you can still try out the service. To do so, click  Go to free trial  when prompted.     This will give you access to a basic set of apps to get you started with RemoteApp.", 
            "title": "Mac OS X"
        }, 
        {
            "location": "/remoteapp-clients/#windows-all-supported-versions-except-windows-phone", 
            "text": "The client launches automatically after it finishes installing, however when you need to access it again later it can be found in your app list under the name  Azure RemoteApp .    Ater launching the client, the first page you see welcomes you to Azure RemoteApp. To proceed, click on  Get Started .     The next page starts the sign in process for Azure RemoteApp using Azure Active Directory. This process should look familiar if you have used Microsoft services in the past. Start by typing your  email address  and click  Continue .     Follow the instructions on the screen to sign in with your Microsoft account (LiveID) or Organization ID. Once signed in, you may be presented with a page listing all the invitations you have received. If you are, select the invitations you trust and click  Done .     After accepting your invitations, the list of apps you have access to will be downloaded to your device and made available in the Connection Center. Double-click one of the apps to launch it and start using it.     If no one has sent you an invitation yet, don't worry we've got you covered! You'll still have access to a demo collection so you can test out the service.", 
            "title": "Windows (All supported versions except Windows Phone)"
        }, 
        {
            "location": "/remoteapp-clients/#windows-phone-81", 
            "text": "Once you have installed the Microsoft Remote Desktop app from the Windows Phone 8.1 store, you can find it in your app list under  Remote Desktop .    Launching the app brings you directly to an empty Connection Center, unless you've already been using the app. To get started with Azure RemoteApp, tap the add button  \"\"+\"\"  at the bottom of the screen.     Next, tap on  Azure RemoteApp .     You need to sign in with your email address to access the service, to start that process, tap  connect .     On the next page, type in your  email address  and tap  Continue . This begins the sign in process using Azure Active Directory.     Follow the instructions on the screen to sign in with your Microsoft account (LiveID) or Organization ID. Once signed in, you may be presented with a page listing all the invitations you have received. If you are, select the invitations you trust and tap  save .     After accepting your invitations, the list of apps you have access to will be downloaded to your device and made available in the Connection Center. Tap one of the apps to launch it and start using it.     If you do not have an invitation yet, you can still try out the service. To do so, tap  yes  when prompted.     This will give you access to a basic set of apps to get you started with RemoteApp.", 
            "title": "Windows Phone 8.1"
        }, 
        {
            "location": "/remoteapp-redirection/", 
            "text": "Using redirection in Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nDevice redirection lets your users interact with remote apps using the devices attached to their local computer, phone, or tablet. For example, if you have provided Skype through Azure RemoteApp, your user needs the camera installed on their PC to work with Skype. This is also true for printers, speakers, monitors, and a range of USB-connected peripherals.\n\n\nRemoteApp leverages the Remote Desktop Protocol (RDP) and RemoteFX to provide redirection.\n\n\nWhat redirection is enabled by default?\n\n\nWhen you use RemoteApp, the following redirections are enabled by default. The information in parentheses show the RDP setting.\n\n\n\n\nPlay sounds on the local computer (\nPlay on this computer\n). (audiomode:i:0)\n\n\nCapture audio from the local computer and send to the remote computer (\nRecord from this computer\n). (audiocapturemode:i:1)\n\n\nPrint to local printers (redirectprinters:i:1)\n\n\nCOM ports (redirectcomports:i:1)\n\n\nSmart card device (redirectsmartcards:i:1)\n\n\nClipboard (ability to copy and paste) (redirectclipboard:i:1)\n\n\nClear type font smoothing (allow font smoothing:i:1)\n\n\nRedirect all supported Plug and Play devices. (devicestoredirect:s:*)\n\n\n\n\nWhat other redirection is available?\n\n\nTwo redirection options are disabled by default:\n\n\n\n\nDrive redirection (drive mapping): Your local computer's drives become mapped drives in the remote session. This lets you save or open files from your local drives while you work in the remote session.\n\n\nUSB redirection: You can use the USB devices attached to your local computer within the remote session.\n\n\n\n\nChange your redirection settings in RemoteApp\n\n\nYou can change the device redirection settings for a collection by using the Microsoft Azure PowerShell with SDK. After you install the new PowerShell and SDK, first configure it to manage your subscription as described in \nHow to install and configure Azure PowerShell\n.\n\n\nThen use a command similar to the following to set the custom RDP properties:\n\n\nSet-AzureRemoteAppCollection -CollectionName \ncollection name\n  -CustomRdpProperty \"drivestoredirect:s:*`nusbdevicestoredirect:s:*\"\n\n\n\n(Note that \n`n\n is used as a delimiter between individual properties.)\n\n\nTo get a list of what custom RDP properties are configured, run the following cmdlet. Note that only custom properties are shown as output results and not the default properties:  \n\n\nGet-AzureRemoteAppCollection -CollectionName \ncollection name\n\n\n\n\nWhen you set custom properties you must specify all custom properties each time; otherwise the setting reverts to disabled.   \n\n\nCommon examples\n\n\nUse the following cmdlet to enable drive redirection:  \n\n\nSet-AzureRemoteAppCollection -CollectionName \ncollection name\n  -CustomRdpProperty \"drivestoredirect:s:*\u201d\n\n\n\nUse this cmdlet to enable both USB and Drive redirection:\n\n\nSet-AzureRemoteAppCollection -CollectionName \ncollection name\n  -CustomRdpProperty \"drivestoredirect:s:*`nusbdevicestoredirect:s:*\"\n\n\n\nUse this cmdlet to disable clipboard sharing:  \n\n\nSet-AzureRemoteAppCollection -CollectionName \ncollection name\n  -CustomRdpProperty \"redirectclipboard:i:0\u201d\n\n\n\n\n\n[AZURE.IMPORTANT] Be sure to completely log off all users in the collection (and not just disconnect them) before you test the change. To ensure users are completely logged off, go to the \nSessions\n tab in the collection in the Azure portal and log off any users who are disconnected or signed in. Sometimes it can take several seconds for the local drives to show in Explorer within the session.\n\n\n\n\nChange USB redirection settings on your Windows client\n\n\nIf you want to use USB redirection on a computer that connects to RemoteApp, there are 2 actions that need to happen. 1 - Your administrator needs to enable USB redirection at the collection level by using Azure PowerShell. 2 - On each device where you want to use USB redirection, you need to enable a group policy that permits it. This step will need to be done for each user that wants to use USB redirection.\n\n\n\n\n[AZURE.NOTE] USB redirection with Azure RemoteApp is only supported for Windows computers.\n\n\n\n\nEnable USB redirection for the RemoteApp collection\n\n\nUse the following cmdlet to enable USB redirection at the collection level:\n\n\nSet-AzureRemoteAppCollection -CollectionName \ncollection_name\n -CustomRdpProperty \"nusbdevicestoredirect:s:*\"\n\n\n\nEnable USB redirection for the client computer\n\n\nTo configure USB redirection settings on your computer:\n\n\n\n\nOpen the Local Group Policy Editor (GPEDIT.MSC). (Run gpedit.msc from a command prompt.)\n\n\nOpen \nComputer Configuration\\Policies\\Administrative Templates\\Windows Components\\Remote Desktop Services\\Remote Desktop Connection Client\\RemoteFX USB Device Redirection\n.\n\n\nDouble-click \nAllow RDP redirection of other supported RemoteFX USB devices from this computer\n.\n\n\nSelect \nEnabled\n, and then select \nAdministrators and Users in the RemoteFX USB Redirection Access Rights\n.\n\n\nOpen a command prompt with administrative permissions, and run the following command:\ngpupdate /force\n\n\n\n\n\nRestart the computer.\n\n\n\n\n\n\n\n\nYou can also use the Group Policy Management tool to create and apply the USB redirection policy for all computers in your domain:\n\n\n\n\nLog into the domain controller as the domain administrator.\n\n\nOpen the Group Policy Management Console. (Click \nStart \n Administrative Tools \n Group Policy Management\n.)\n\n\nNavigate to the domain or organizational unit for which you want to create the policy.\n\n\nRight-click \nDefault Domain Policy\n, and then click \nEdit\n.\n\n\nOpen \nComputer Configuration\\Policies\\Administrative Templates\\Windows Components\\Remote Desktop Services\\Remote Desktop Connection Client\\RemoteFX USB Device Redirection\n.\n\n\nDouble-click \nAllow RDP redirection of other supported RemoteFX USB devices from this computer\n.\n\n\nSelect \nEnabled\n, and then select \nAdministrators and Users in the RemoteFX USB Redirection Access Rights\n.\n\n\nClick \nOK\n.", 
            "title": "Configure redirection"
        }, 
        {
            "location": "/remoteapp-redirection/#using-redirection-in-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   Device redirection lets your users interact with remote apps using the devices attached to their local computer, phone, or tablet. For example, if you have provided Skype through Azure RemoteApp, your user needs the camera installed on their PC to work with Skype. This is also true for printers, speakers, monitors, and a range of USB-connected peripherals.  RemoteApp leverages the Remote Desktop Protocol (RDP) and RemoteFX to provide redirection.", 
            "title": "Using redirection in Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-redirection/#what-redirection-is-enabled-by-default", 
            "text": "When you use RemoteApp, the following redirections are enabled by default. The information in parentheses show the RDP setting.   Play sounds on the local computer ( Play on this computer ). (audiomode:i:0)  Capture audio from the local computer and send to the remote computer ( Record from this computer ). (audiocapturemode:i:1)  Print to local printers (redirectprinters:i:1)  COM ports (redirectcomports:i:1)  Smart card device (redirectsmartcards:i:1)  Clipboard (ability to copy and paste) (redirectclipboard:i:1)  Clear type font smoothing (allow font smoothing:i:1)  Redirect all supported Plug and Play devices. (devicestoredirect:s:*)", 
            "title": "What redirection is enabled by default?"
        }, 
        {
            "location": "/remoteapp-redirection/#what-other-redirection-is-available", 
            "text": "Two redirection options are disabled by default:   Drive redirection (drive mapping): Your local computer's drives become mapped drives in the remote session. This lets you save or open files from your local drives while you work in the remote session.  USB redirection: You can use the USB devices attached to your local computer within the remote session.", 
            "title": "What other redirection is available?"
        }, 
        {
            "location": "/remoteapp-redirection/#change-your-redirection-settings-in-remoteapp", 
            "text": "You can change the device redirection settings for a collection by using the Microsoft Azure PowerShell with SDK. After you install the new PowerShell and SDK, first configure it to manage your subscription as described in  How to install and configure Azure PowerShell .  Then use a command similar to the following to set the custom RDP properties:  Set-AzureRemoteAppCollection -CollectionName  collection name   -CustomRdpProperty \"drivestoredirect:s:*`nusbdevicestoredirect:s:*\"  (Note that  `n  is used as a delimiter between individual properties.)  To get a list of what custom RDP properties are configured, run the following cmdlet. Note that only custom properties are shown as output results and not the default properties:    Get-AzureRemoteAppCollection -CollectionName  collection name   When you set custom properties you must specify all custom properties each time; otherwise the setting reverts to disabled.", 
            "title": "Change your redirection settings in RemoteApp"
        }, 
        {
            "location": "/remoteapp-redirection/#common-examples", 
            "text": "Use the following cmdlet to enable drive redirection:    Set-AzureRemoteAppCollection -CollectionName  collection name   -CustomRdpProperty \"drivestoredirect:s:*\u201d  Use this cmdlet to enable both USB and Drive redirection:  Set-AzureRemoteAppCollection -CollectionName  collection name   -CustomRdpProperty \"drivestoredirect:s:*`nusbdevicestoredirect:s:*\"  Use this cmdlet to disable clipboard sharing:    Set-AzureRemoteAppCollection -CollectionName  collection name   -CustomRdpProperty \"redirectclipboard:i:0\u201d   [AZURE.IMPORTANT] Be sure to completely log off all users in the collection (and not just disconnect them) before you test the change. To ensure users are completely logged off, go to the  Sessions  tab in the collection in the Azure portal and log off any users who are disconnected or signed in. Sometimes it can take several seconds for the local drives to show in Explorer within the session.", 
            "title": "Common examples"
        }, 
        {
            "location": "/remoteapp-redirection/#change-usb-redirection-settings-on-your-windows-client", 
            "text": "If you want to use USB redirection on a computer that connects to RemoteApp, there are 2 actions that need to happen. 1 - Your administrator needs to enable USB redirection at the collection level by using Azure PowerShell. 2 - On each device where you want to use USB redirection, you need to enable a group policy that permits it. This step will need to be done for each user that wants to use USB redirection.   [AZURE.NOTE] USB redirection with Azure RemoteApp is only supported for Windows computers.", 
            "title": "Change USB redirection settings on your Windows client"
        }, 
        {
            "location": "/remoteapp-redirection/#enable-usb-redirection-for-the-remoteapp-collection", 
            "text": "Use the following cmdlet to enable USB redirection at the collection level:  Set-AzureRemoteAppCollection -CollectionName  collection_name  -CustomRdpProperty \"nusbdevicestoredirect:s:*\"", 
            "title": "Enable USB redirection for the RemoteApp collection"
        }, 
        {
            "location": "/remoteapp-redirection/#enable-usb-redirection-for-the-client-computer", 
            "text": "To configure USB redirection settings on your computer:   Open the Local Group Policy Editor (GPEDIT.MSC). (Run gpedit.msc from a command prompt.)  Open  Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\Remote Desktop Services\\Remote Desktop Connection Client\\RemoteFX USB Device Redirection .  Double-click  Allow RDP redirection of other supported RemoteFX USB devices from this computer .  Select  Enabled , and then select  Administrators and Users in the RemoteFX USB Redirection Access Rights .  Open a command prompt with administrative permissions, and run the following command: gpupdate /force   Restart the computer.     You can also use the Group Policy Management tool to create and apply the USB redirection policy for all computers in your domain:   Log into the domain controller as the domain administrator.  Open the Group Policy Management Console. (Click  Start   Administrative Tools   Group Policy Management .)  Navigate to the domain or organizational unit for which you want to create the policy.  Right-click  Default Domain Policy , and then click  Edit .  Open  Computer Configuration\\Policies\\Administrative Templates\\Windows Components\\Remote Desktop Services\\Remote Desktop Connection Client\\RemoteFX USB Device Redirection .  Double-click  Allow RDP redirection of other supported RemoteFX USB devices from this computer .  Select  Enabled , and then select  Administrators and Users in the RemoteFX USB Redirection Access Rights .  Click  OK .", 
            "title": "Enable USB redirection for the client computer"
        }, 
        {
            "location": "/remoteapp-bestpractices/", 
            "text": "Best practices for configuring and using Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nThe following information can help you configure and use Azure RemoteApp productively.\n\n\nConnectivity\n\n\n\n\nAlways use the latest client version. Using older clients might result in connectivity issues and other degraded experiences. Enabling automatic application updates for your device will ensure that the latest client is always installed.\n\n\nAlways use the most stable and reliable internet connection available to you.  \n\n\nUse only supported proxy connections for optimal connectivity performance.  The SOCKS proxy is not supported.\n\n\n\n\nApplications\n\n\n\n\nSave and close RemoteApp applications when you are done with the application. Not closing the application might result in data loss.\n\n\nValidate custom applications before using them in Azure RemoteApp. This includes ensuring they work on a multi-session platform and don\u2019t consume unnecessary resources such as memory and CPU that might starve another user in the same collection. For information, download and review the \nApplication Compatibility Best Practices for Remote Desktop Services\n.\n\n\n\n\nConfiguration and management\n\n\n\n\nKeep your template images up to date, installing software updates and other critical fixes as needed. This ensures that as Azure RemoteApp auto-scales to meet your capacity, each instance is patched.  \n\n\nMake sure your Active Directory Federation Services (AD FS) deployment is secure and reliable. Otherwise client authentications might fail, preventing users from accessing Azure RemoteApp.\n\n\nConfigure template images with installed applications, roles, or features such that they are stateless. They should not rely on any instances of the virtual machines in a RemoteApp service being in a persistent state.\n\n\nStore all user data in user profiles or other storage locations external to the service, such as on-premises file shares or OneDrive.\n\n\nStore shared data in storage locations external to the service, such as on-premises file shares or OneDrive.\n\n\nConfigure any system-wide settings in the template image rather than on individual virtual machines in a service.\n\n\nDisable automatic software updates for published applications - instead apply them manually to the template image and test them before you deploy  from the template.", 
            "title": "Client best practices"
        }, 
        {
            "location": "/remoteapp-bestpractices/#best-practices-for-configuring-and-using-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   The following information can help you configure and use Azure RemoteApp productively.", 
            "title": "Best practices for configuring and using Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-bestpractices/#connectivity", 
            "text": "Always use the latest client version. Using older clients might result in connectivity issues and other degraded experiences. Enabling automatic application updates for your device will ensure that the latest client is always installed.  Always use the most stable and reliable internet connection available to you.    Use only supported proxy connections for optimal connectivity performance.  The SOCKS proxy is not supported.", 
            "title": "Connectivity"
        }, 
        {
            "location": "/remoteapp-bestpractices/#applications", 
            "text": "Save and close RemoteApp applications when you are done with the application. Not closing the application might result in data loss.  Validate custom applications before using them in Azure RemoteApp. This includes ensuring they work on a multi-session platform and don\u2019t consume unnecessary resources such as memory and CPU that might starve another user in the same collection. For information, download and review the  Application Compatibility Best Practices for Remote Desktop Services .", 
            "title": "Applications"
        }, 
        {
            "location": "/remoteapp-bestpractices/#configuration-and-management", 
            "text": "Keep your template images up to date, installing software updates and other critical fixes as needed. This ensures that as Azure RemoteApp auto-scales to meet your capacity, each instance is patched.    Make sure your Active Directory Federation Services (AD FS) deployment is secure and reliable. Otherwise client authentications might fail, preventing users from accessing Azure RemoteApp.  Configure template images with installed applications, roles, or features such that they are stateless. They should not rely on any instances of the virtual machines in a RemoteApp service being in a persistent state.  Store all user data in user profiles or other storage locations external to the service, such as on-premises file shares or OneDrive.  Store shared data in storage locations external to the service, such as on-premises file shares or OneDrive.  Configure any system-wide settings in the template image rather than on individual virtual machines in a service.  Disable automatic software updates for published applications - instead apply them manually to the template image and test them before you deploy  from the template.", 
            "title": "Configuration and management"
        }, 
        {
            "location": "/remoteapp-tutorial-arawithpowershell/", 
            "text": "Use Windows PowerShell cmdlets with Azure RemoteApp\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nYou can use the Azure RemoteApp PowerShell cmdlets to administer and maintain your collections. Use the following information to get started.\n\n\nGet the cmdlets\n\n\n\n\nFirst download the Azure Powershell cmdlets \nhere\n, the RemoteApp cmdlets are included in it. \n\n\nCheck out the \nAzure RemoteApp cmdlet help\n.\n\n\nConfigure Azure cmdlets to use your subscription\n\n\n\n\nFollow \nthis guide\n so you can use the cmdlets against your Azure subscription.\n\n\nYou can use these steps to get started quickly:\n\n\n\n\nDownload and install the \nAzure PowerShell cmdlets\n.\n\n\nLaunch Microsoft Azure PowerShell.\n\n\nRun \nAdd-AzureAccount\n to authenticate to your Azure subscription. When prompted, enter the same user name and password that you use to sign in to Azure portal.  \n\n\nRun \nGet-AzureSubscription\n to list the subscriptions associated with your user account. \n\n\nRun \nSelect-AzureSubscription\n and specify the subscription name or ID to use in the PowerShell console.\n\n\n\n\nCongratulations, your Azure PowerShell console is configured and ready to use. Be aware that you'll need to repeate steps 2 through 5 each time you start the the Azure PowerShell console.  \n\n\nCreate a cloud collection\n\n\n\n\nIt's simple, run the following command:\n\n\nNew-AzureRemoteAppCollection -Collectionname RAppO365Col1 -ImageName \"Office 365 ProPlus (Subscription required)\" -Plan Basic -Location \"West US\" - Description \"Office 365 Collection.\"\n\n\n\nThe above command automatically publishes Microsoft Office 365 applications (Excel, OneNote, Outlook, PowerPoint, Visio and Word).\n\n\nCollection creation can take 30 minutes or longer to complete. Therefore, this command returns a tracking ID that you can use as follows:\n\n\nGet-AzureRemoteAppOperationResult -TrackingId xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\n\n\n\nAfter the collection is done, you can add users to the collection with the following command:\n\n\nAdd-AzureRemoteAppUser -CollectionName RAppO365Col1 -Type microsoftAccount -UserUpn someone@domain.com\n\n\n\nAnd you're done! That user should be able to connect to the application using the Azure RemoteApp client found \nhere\n.\n\n\nAvailable cmdlets\n\n\nThere are lots of other commands that we have, the documentation for them will be coming shortly:\n\n\nBasic RemoteApp Collection  cmdlets: \n\n\n\n\nNew-AzureRemoteAppCollection\n\n\nGet-AzureRemoteAppCollection\n\n\nSet-AzureRemoteAppCollection\n\n\nUpdate-AzureRemoteAppCollection\n\n\nRemove-AzureRemoteAppCollection\n\n\nAdd-AzureRemoteAppUser\n\n\nGet-AzureRemoteAppUser\n\n\nRemove-AzureRemoteAppUser\n\n\nGet-AzureRemoteAppSession\n\n\nDisconnect-AzureRemoteAppSession\n\n\nInvoke-AzureRemoteAppSessionLogoff\n\n\nSend-AzureRemoteAppSessionMessage\n\n\nGet-AzureRemoteAppProgram\n\n\nGet-AzureRemoteAppStartMenuProgram\n\n\nPublish-AzureRemoteAppProgram\n\n\nUnpublish-AzureRemoteAppProgram\n\n\nGet-AzureRemoteAppCollectionUsageDetails\n\n\nGet-AzureRemoteAppCollectionUsageSummary\n\n\nGet-AzureRemoteAppPlan\n\n\n\n\nRemoteApp virtual network cmdlets:\n\n\n\n\nNew-AzureRemoteAppVNet\n\n\nGet-AzureRemoteAppVNet\n\n\nSet-AzureRemoteAppVNet\n\n\nRemove-AzureRemoteAppVNet\n\n\nGet-AzureRemoteAppVpnDevice\n\n\nGet-- AzureRemoteAppVpnDeviceConfigScript\n\n\nReset-AzureRemoteAppVpnSharedKey\n\n\n\n\nRemoteApp template image cmdlets:\n\n\n\n\nNew-AzureRemoteAppTemplateImage\n\n\nGet-AzureRemoteAppTemplateImage\n\n\nRename-AzureRemoteAppTemplateImage\n\n\nRemove-AzureRemoteAppTemplateImage\n\n\n\n\nOther RemoteApp cmdlets:\n\n\n\n\nGet-AzureRemoteAppLocation\n\n\nGet-AzureRemoteAppWorkspace\n\n\nSet-AzureRemoteAppWorkspace\n\n\nGet-AzureRemoteAppOperationResult", 
            "title": "RemoteApp PowerShell cmdlets"
        }, 
        {
            "location": "/remoteapp-tutorial-arawithpowershell/#use-windows-powershell-cmdlets-with-azure-remoteapp", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   You can use the Azure RemoteApp PowerShell cmdlets to administer and maintain your collections. Use the following information to get started.", 
            "title": "Use Windows PowerShell cmdlets with Azure RemoteApp"
        }, 
        {
            "location": "/remoteapp-tutorial-arawithpowershell/#get-the-cmdlets", 
            "text": "First download the Azure Powershell cmdlets  here , the RemoteApp cmdlets are included in it.   Check out the  Azure RemoteApp cmdlet help .", 
            "title": "Get the cmdlets"
        }, 
        {
            "location": "/remoteapp-tutorial-arawithpowershell/#configure-azure-cmdlets-to-use-your-subscription", 
            "text": "Follow  this guide  so you can use the cmdlets against your Azure subscription.  You can use these steps to get started quickly:   Download and install the  Azure PowerShell cmdlets .  Launch Microsoft Azure PowerShell.  Run  Add-AzureAccount  to authenticate to your Azure subscription. When prompted, enter the same user name and password that you use to sign in to Azure portal.    Run  Get-AzureSubscription  to list the subscriptions associated with your user account.   Run  Select-AzureSubscription  and specify the subscription name or ID to use in the PowerShell console.   Congratulations, your Azure PowerShell console is configured and ready to use. Be aware that you'll need to repeate steps 2 through 5 each time you start the the Azure PowerShell console.", 
            "title": "Configure Azure cmdlets to use your subscription"
        }, 
        {
            "location": "/remoteapp-tutorial-arawithpowershell/#create-a-cloud-collection", 
            "text": "It's simple, run the following command:  New-AzureRemoteAppCollection -Collectionname RAppO365Col1 -ImageName \"Office 365 ProPlus (Subscription required)\" -Plan Basic -Location \"West US\" - Description \"Office 365 Collection.\"  The above command automatically publishes Microsoft Office 365 applications (Excel, OneNote, Outlook, PowerPoint, Visio and Word).  Collection creation can take 30 minutes or longer to complete. Therefore, this command returns a tracking ID that you can use as follows:  Get-AzureRemoteAppOperationResult -TrackingId xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx  After the collection is done, you can add users to the collection with the following command:  Add-AzureRemoteAppUser -CollectionName RAppO365Col1 -Type microsoftAccount -UserUpn someone@domain.com  And you're done! That user should be able to connect to the application using the Azure RemoteApp client found  here .", 
            "title": "Create a cloud collection"
        }, 
        {
            "location": "/remoteapp-tutorial-arawithpowershell/#available-cmdlets", 
            "text": "There are lots of other commands that we have, the documentation for them will be coming shortly:  Basic RemoteApp Collection  cmdlets:    New-AzureRemoteAppCollection  Get-AzureRemoteAppCollection  Set-AzureRemoteAppCollection  Update-AzureRemoteAppCollection  Remove-AzureRemoteAppCollection  Add-AzureRemoteAppUser  Get-AzureRemoteAppUser  Remove-AzureRemoteAppUser  Get-AzureRemoteAppSession  Disconnect-AzureRemoteAppSession  Invoke-AzureRemoteAppSessionLogoff  Send-AzureRemoteAppSessionMessage  Get-AzureRemoteAppProgram  Get-AzureRemoteAppStartMenuProgram  Publish-AzureRemoteAppProgram  Unpublish-AzureRemoteAppProgram  Get-AzureRemoteAppCollectionUsageDetails  Get-AzureRemoteAppCollectionUsageSummary  Get-AzureRemoteAppPlan   RemoteApp virtual network cmdlets:   New-AzureRemoteAppVNet  Get-AzureRemoteAppVNet  Set-AzureRemoteAppVNet  Remove-AzureRemoteAppVNet  Get-AzureRemoteAppVpnDevice  Get-- AzureRemoteAppVpnDeviceConfigScript  Reset-AzureRemoteAppVpnSharedKey   RemoteApp template image cmdlets:   New-AzureRemoteAppTemplateImage  Get-AzureRemoteAppTemplateImage  Rename-AzureRemoteAppTemplateImage  Remove-AzureRemoteAppTemplateImage   Other RemoteApp cmdlets:   Get-AzureRemoteAppLocation  Get-AzureRemoteAppWorkspace  Set-AzureRemoteAppWorkspace  Get-AzureRemoteAppOperationResult", 
            "title": "Available cmdlets"
        }, 
        {
            "location": "/automation-manage-remote-app/", 
            "text": "Managing Azure RemoteApp using Azure Automation\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nThis guide will introduce you to the Azure Automation service, and how it can be used to simplify management of Azure RemoteApp.\n\n\nWhat is Azure Automation?\n\n\nAzure Automation\n is an Azure service for simplifying cloud management through process automation. Using Azure Automation, manual, frequently-repeated, long-running, and error-prone tasks can be automated to increase reliability, efficiency, and time to value for your organization.\n\n\nAzure Automation provides a highly-reliable, highly-available workflow execution engine that scales to meet your needs. In Azure Automation, processes can be kicked off manually, by 3rd-party systems, or at scheduled intervals so that tasks happen exactly when needed.\n\n\nReduce operational overhead and free up IT and DevOps staff to focus on work that adds business value by moving your cloud management tasks to be run automatically by Azure Automation.\n\n\nHow can Azure Automation help manage Azure RemoteApp?\n\n\nRemoteApp can be managed in Azure Automation by using the PowerShell cmdlets that are available in the \nAzure PowerShell tools\n. Azure Automation has these RemoteApp PowerShell cmdlets available out of the box, so that you can perform all of your RemoteApp management tasks within the service. You can also pair these cmdlets in Azure Automation with the cmdlets for other Azure services, to automate complex tasks across Azure services and 3rd party systems.\n\n\nNext steps\n\n\nNow that you've learned the basics of Azure Automation and how it can be used to manage Azure RemoteApp, follow these links to learn more about Azure Automation.\n\n\n\n\nSee the Azure Automation \nGetting Started Tutorial", 
            "title": "Manage RemoteApp with Azure Automation"
        }, 
        {
            "location": "/automation-manage-remote-app/#managing-azure-remoteapp-using-azure-automation", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   This guide will introduce you to the Azure Automation service, and how it can be used to simplify management of Azure RemoteApp.", 
            "title": "Managing Azure RemoteApp using Azure Automation"
        }, 
        {
            "location": "/automation-manage-remote-app/#what-is-azure-automation", 
            "text": "Azure Automation  is an Azure service for simplifying cloud management through process automation. Using Azure Automation, manual, frequently-repeated, long-running, and error-prone tasks can be automated to increase reliability, efficiency, and time to value for your organization.  Azure Automation provides a highly-reliable, highly-available workflow execution engine that scales to meet your needs. In Azure Automation, processes can be kicked off manually, by 3rd-party systems, or at scheduled intervals so that tasks happen exactly when needed.  Reduce operational overhead and free up IT and DevOps staff to focus on work that adds business value by moving your cloud management tasks to be run automatically by Azure Automation.", 
            "title": "What is Azure Automation?"
        }, 
        {
            "location": "/automation-manage-remote-app/#how-can-azure-automation-help-manage-azure-remoteapp", 
            "text": "RemoteApp can be managed in Azure Automation by using the PowerShell cmdlets that are available in the  Azure PowerShell tools . Azure Automation has these RemoteApp PowerShell cmdlets available out of the box, so that you can perform all of your RemoteApp management tasks within the service. You can also pair these cmdlets in Azure Automation with the cmdlets for other Azure services, to automate complex tasks across Azure services and 3rd party systems.", 
            "title": "How can Azure Automation help manage Azure RemoteApp?"
        }, 
        {
            "location": "/automation-manage-remote-app/#next-steps", 
            "text": "Now that you've learned the basics of Azure Automation and how it can be used to manage Azure RemoteApp, follow these links to learn more about Azure Automation.   See the Azure Automation  Getting Started Tutorial", 
            "title": "Next steps"
        }, 
        {
            "location": "/remoteapp-hybridtrouble/", 
            "text": "Troubleshoot creating Azure RemoteApp hybrid collections\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nA hybrid collection is hosted in and stores data in the Azure cloud but also lets users access data and resources stored on your local network. Users can access apps by logging in with their corporate credentials synchronized or federated with Azure Active Directory. You can deploy a hybrid collection that uses an existing Azure Virtual Network, or you can create a new virtual network. We recommend that you create or use a virtual network subnet with a CIDR range large enough for expected future growth for Azure RemoteApp.\n\n\nHaven't created your collection yet? See \nCreate a hybrid collection\n for the steps.\n\n\nIf you are having trouble creating your collection, or if the collection isn't working the way you think it should, check out the following information.\n\n\nYour image is invalid\n\n\nIf you see a message like, \"GoldImageInvalid\" when you are waiting for Azure to provision your collection, it means that your template image doesn't meet the \ndefined image requirements\n. So, go read those \nrequirements\n, fix your image, and try to create your collection again.\n\n\nDoes your VNET have network security groups defined?\n\n\nIf you have network security groups defined on the subnet you are using for your collection, make sure these \nURLs and ports\n are accessible from within your subnet.\n\n\nYou can add additional network security groups to the VMs deployed by you in the subnet for tighter control.\n\n\nAre you using your own DNS servers? And are they accessible from your VNET subnet?\n\n\n\n\n[AZURE.NOTE] You have to make sure the DNS servers in your VNET are always up and always able to resolve the virtual machines hosted in the VNET. Don't use Google DNS for this.\n\n\n\n\nFor hybrid collections you use your own DNS servers. You specify them in your network configuration schema or through the management portal when you create your virtual network. DNS servers are used in the order that they are specified in a failover manner (as opposed to round robin).\n\nPlease refer to \nName Resolution for VMs and Role Instances\n to make sure your DNS servers are configured correcly.\n\n\nMake sure the DNS servers for your collection are accessible and available from the VNET subnet you specified for this collection.\n\n\nFor example:\n\n\nVirtualNetworkConfiguration\n\n\nDns\n\n  \nDnsServers\n\n    \nDnsServer name=\"\" IPAddress=\"\"/\n\n  \n/DnsServers\n\n\n/Dns\n\n\n/VirtualNetworkConfiguration\n\n\n\n\n\n\nAre you using an Active Directory domain controller in your collection?\n\n\nCurrently only one Active Directory domain can be associated with Azure RemoteApp. The hybrid collection supports only Azure Active Directory accounts that have been synced using DirSync tool from a Windows Server Active Directory deployment; specifically, either synced with the Password Synchronization option or synced with Active Directory Federation Services (AD FS) federation configured. You need to create a custom domain that matches the UPN domain suffix for your on-premises domain and set up directory integration.\n\n\nSee \nConfiguring Active Directory for Azure RemoteApp\n for more information.\n\n\nMake sure the domain details provided are valid and the domain controller is reachable from the VM created in the subnet used for Azure Remote App. Also make sure the service account credentials supplied have permissions to add computers to the provided domain and that the AD name provided can be resolved from the DNS provided in the VNET.\n\n\nWhat domain name did you specify when you created your collection?\n\n\nThe domain name you created or added must be an internal domain name (not your Azure AD domain name) and must be in resolvable DNS format (contoso.local). For example, you have an Active Directory internal name (contoso.local) and an Active Directory UPN (contoso.com) - you have to use the internal name when you create your collection.", 
            "title": "Troubleshoot a hybrid collection"
        }, 
        {
            "location": "/remoteapp-hybridtrouble/#troubleshoot-creating-azure-remoteapp-hybrid-collections", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   A hybrid collection is hosted in and stores data in the Azure cloud but also lets users access data and resources stored on your local network. Users can access apps by logging in with their corporate credentials synchronized or federated with Azure Active Directory. You can deploy a hybrid collection that uses an existing Azure Virtual Network, or you can create a new virtual network. We recommend that you create or use a virtual network subnet with a CIDR range large enough for expected future growth for Azure RemoteApp.  Haven't created your collection yet? See  Create a hybrid collection  for the steps.  If you are having trouble creating your collection, or if the collection isn't working the way you think it should, check out the following information.", 
            "title": "Troubleshoot creating Azure RemoteApp hybrid collections"
        }, 
        {
            "location": "/remoteapp-hybridtrouble/#your-image-is-invalid", 
            "text": "If you see a message like, \"GoldImageInvalid\" when you are waiting for Azure to provision your collection, it means that your template image doesn't meet the  defined image requirements . So, go read those  requirements , fix your image, and try to create your collection again.", 
            "title": "Your image is invalid"
        }, 
        {
            "location": "/remoteapp-hybridtrouble/#does-your-vnet-have-network-security-groups-defined", 
            "text": "If you have network security groups defined on the subnet you are using for your collection, make sure these  URLs and ports  are accessible from within your subnet.  You can add additional network security groups to the VMs deployed by you in the subnet for tighter control.", 
            "title": "Does your VNET have network security groups defined?"
        }, 
        {
            "location": "/remoteapp-hybridtrouble/#are-you-using-your-own-dns-servers-and-are-they-accessible-from-your-vnet-subnet", 
            "text": "[AZURE.NOTE] You have to make sure the DNS servers in your VNET are always up and always able to resolve the virtual machines hosted in the VNET. Don't use Google DNS for this.   For hybrid collections you use your own DNS servers. You specify them in your network configuration schema or through the management portal when you create your virtual network. DNS servers are used in the order that they are specified in a failover manner (as opposed to round robin). \nPlease refer to  Name Resolution for VMs and Role Instances  to make sure your DNS servers are configured correcly.  Make sure the DNS servers for your collection are accessible and available from the VNET subnet you specified for this collection.  For example:  VirtualNetworkConfiguration  Dns \n   DnsServers \n     DnsServer name=\"\" IPAddress=\"\"/ \n   /DnsServers  /Dns  /VirtualNetworkConfiguration", 
            "title": "Are you using your own DNS servers? And are they accessible from your VNET subnet?"
        }, 
        {
            "location": "/remoteapp-hybridtrouble/#are-you-using-an-active-directory-domain-controller-in-your-collection", 
            "text": "Currently only one Active Directory domain can be associated with Azure RemoteApp. The hybrid collection supports only Azure Active Directory accounts that have been synced using DirSync tool from a Windows Server Active Directory deployment; specifically, either synced with the Password Synchronization option or synced with Active Directory Federation Services (AD FS) federation configured. You need to create a custom domain that matches the UPN domain suffix for your on-premises domain and set up directory integration.  See  Configuring Active Directory for Azure RemoteApp  for more information.  Make sure the domain details provided are valid and the domain controller is reachable from the VM created in the subnet used for Azure Remote App. Also make sure the service account credentials supplied have permissions to add computers to the provided domain and that the AD name provided can be resolved from the DNS provided in the VNET.", 
            "title": "Are you using an Active Directory domain controller in your collection?"
        }, 
        {
            "location": "/remoteapp-hybridtrouble/#what-domain-name-did-you-specify-when-you-created-your-collection", 
            "text": "The domain name you created or added must be an internal domain name (not your Azure AD domain name) and must be in resolvable DNS format (contoso.local). For example, you have an Active Directory internal name (contoso.local) and an Active Directory UPN (contoso.com) - you have to use the internal name when you create your collection.", 
            "title": "What domain name did you specify when you created your collection?"
        }, 
        {
            "location": "/remoteapp-cloudtrouble/", 
            "text": "Troubleshoot creating RemoteApp cloud collections\n\n\n\n\n[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the \nannouncement\n for details.\n\n\n\n\nIf you are having problems creating a cloud collection, check out the following information.\n\n\nYour image is invalid\n\n\nIf you see a message like, \"GoldImageInvalid\" when you are waiting for Azure to provision your collection, it means that your template image doesn't meet the \ndefined image requirements\n. So, go read those \nrequirements\n, fix your image, and try to create your collection again.\n\n\nCommon errors seen in the Azure Management portal\n\n\nDNS server could not be reached\nProvisioningTimeout\n\n\n\nCloud collections often fail during creation because of you are using custom images.  If you see one of the above errors and you are using a custom image to create the collection, please check the following things:\n\n\n\n\nEnsure that the custom image you uploaded meets image requirements.\n\n\nMost often the common problem is that the image was not properly syspreped.  \n\n\nVerify the image can boot within Hyper-V or try creating an IAAS VM directly in your Azure subscription using the image. If the VM fails to boot and not start, then this usually indicates that the custom image was not prepared correctly.  Verify the custom image was built following the How to create a custom template image for RemoteApp\n\n\n\n\nIf you are using one of the Microsoft images included with your subscription, try to create the collection again. If the issue persists then please contact Microsoft support.\n\n\nPlatformImageTrialModeOnly\n\n\n\nIf you see this error this usually means that you been upgraded to a paid account but you are trying to use a Microsoft provided image that is valid only during the trial mode of the service. In this case, try to create your cloud collection again, but be sure to specify the correct image.", 
            "title": "Troubleshoot a cloud collection"
        }, 
        {
            "location": "/remoteapp-cloudtrouble/#troubleshoot-creating-remoteapp-cloud-collections", 
            "text": "[AZURE.IMPORTANT]\nAzure RemoteApp is being discontinued. Read the  announcement  for details.   If you are having problems creating a cloud collection, check out the following information.", 
            "title": "Troubleshoot creating RemoteApp cloud collections"
        }, 
        {
            "location": "/remoteapp-cloudtrouble/#your-image-is-invalid", 
            "text": "If you see a message like, \"GoldImageInvalid\" when you are waiting for Azure to provision your collection, it means that your template image doesn't meet the  defined image requirements . So, go read those  requirements , fix your image, and try to create your collection again.", 
            "title": "Your image is invalid"
        }, 
        {
            "location": "/remoteapp-cloudtrouble/#common-errors-seen-in-the-azure-management-portal", 
            "text": "DNS server could not be reached\nProvisioningTimeout  Cloud collections often fail during creation because of you are using custom images.  If you see one of the above errors and you are using a custom image to create the collection, please check the following things:   Ensure that the custom image you uploaded meets image requirements.  Most often the common problem is that the image was not properly syspreped.    Verify the image can boot within Hyper-V or try creating an IAAS VM directly in your Azure subscription using the image. If the VM fails to boot and not start, then this usually indicates that the custom image was not prepared correctly.  Verify the custom image was built following the How to create a custom template image for RemoteApp   If you are using one of the Microsoft images included with your subscription, try to create the collection again. If the issue persists then please contact Microsoft support.  PlatformImageTrialModeOnly  If you see this error this usually means that you been upgraded to a paid account but you are trying to use a Microsoft provided image that is valid only during the trial mode of the service. In this case, try to create your cloud collection again, but be sure to specify the correct image.", 
            "title": "Common errors seen in the Azure Management portal"
        }
    ]
}